[
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"3:1-4:44\"\u003e開発案件でSageMakerを味見する話があったのでやってみた記事（の前半）です．\u003cbr\u003e\n※2022年11月25日現在の内容です．\u003c/p\u003e\n\u003cp data-sourcepos=\"6:1-6:58\"\u003e\u003cb\u003eこの記事ではSageMakerはいじりません．\u003c/b\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"8:1-8:174\"\u003e『学習から行う』みたいな記事は見つけられたのですが，『推論だけやる』という記事は見つけられなかったので書いています．\u003c/p\u003e\n\u003cp data-sourcepos=\"10:1-10:84\"\u003eよって，対象読者はこのあたりの条件を満たす人になるかと．\u003c/p\u003e\n\u003cul data-sourcepos=\"11:1-15:0\"\u003e\n\u003cli data-sourcepos=\"11:1-11:59\"\u003e学習はローカル（というかAWS以外）でやる\u003c/li\u003e\n\u003cli data-sourcepos=\"12:1-12:29\"\u003e推論のAPIを作りたい\u003c/li\u003e\n\u003cli data-sourcepos=\"13:1-15:0\"\u003eバックエンドのインフラはお任せにしたい（フロントエンドはさておき）\u003cbr\u003e\n\u003cdel\u003eチュートリアル読めば書いてあったのかもしれない内容な気もしています．知りませんが．\u003c/del\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"16:1-16:156\"\u003e誰かの技術ブログをサクッと再現できないたびに無力感を感じるので，タイトルに『雑魚のための』とつけました．\u003c/p\u003e\n\u003cp data-sourcepos=\"18:1-20:108\"\u003eソースコードは\u003ca href=\"https://github.com/akh1r0ck/sagemaker_challenge\" rel=\"nofollow noopener\" target=\"_blank\"\u003eGithub\u003c/a\u003eにあげてあります．\u003cbr\u003e\nSageMakerだけいじりたい人はクローンして次の記事から読んだらいいと思います．\u003cbr\u003e\nまた前提条件としてDocker，AWSのアカウント登録が済んでいることとしています．\u003c/p\u003e\n\u003cdetails\u003e\u003csummary\u003e 間違ってもしないこと\u003c/summary\u003e\n\u003cul data-sourcepos=\"24:1-27:106\"\u003e\n\u003cli data-sourcepos=\"24:1-25:177\"\u003eAWSでAPIのデバッグする\n\u003cul data-sourcepos=\"25:5-25:177\"\u003e\n\u003cli data-sourcepos=\"25:5-25:177\"\u003eAPIに与えるパラメータだとか，内部でどう処理されるのかとかをエンドポイント作成しながらデバッグしてたら長時間かかった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"26:1-27:106\"\u003eAWSでDcokerfileのデバッグをする\n\u003cul data-sourcepos=\"27:5-27:106\"\u003e\n\u003cli data-sourcepos=\"27:5-27:106\"\u003eエンドポイントを作成したらDockerfileが悪かったというパターンが超あった\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003cdetails\u003e\u003csummary\u003e 知ってたらよかったこと\u003c/summary\u003e\n\u003cp data-sourcepos=\"32:1-33:148\"\u003eこの辺りの要素を知っている人だとヌルヌルだったはずです．\u003cbr\u003e\nコアプログラムとしてPython，仮想環境としてDocker，APIに関してはSwagger，インフラとしてAWSという感じですね．\u003c/p\u003e\n\u003cul data-sourcepos=\"35:1-44:0\"\u003e\n\u003cli data-sourcepos=\"35:1-36:13\"\u003ePython\n\u003cul data-sourcepos=\"36:5-36:13\"\u003e\n\u003cli data-sourcepos=\"36:5-36:13\"\u003efastapi\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"37:1-38:16\"\u003eDocker\n\u003cul data-sourcepos=\"38:5-38:16\"\u003e\n\u003cli data-sourcepos=\"38:5-38:16\"\u003eDockerfile\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"39:1-40:16\"\u003eSwagger\n\u003cul data-sourcepos=\"40:5-40:16\"\u003e\n\u003cli data-sourcepos=\"40:5-40:16\"\u003eSwagger UI\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"41:1-44:0\"\u003eAWS\n\u003cul data-sourcepos=\"42:5-44:0\"\u003e\n\u003cli data-sourcepos=\"42:5-42:22\"\u003eAmazon SageMaker\u003c/li\u003e\n\u003cli data-sourcepos=\"43:5-44:0\"\u003eErastic Container Registry\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n\u003ch1 data-sourcepos=\"47:1-47:17\"\u003e\n\u003cspan id=\"やったこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eやったこと\u003c/h1\u003e\n\u003col data-sourcepos=\"49:1-52:0\"\u003e\n\u003cli data-sourcepos=\"49:1-49:48\"\u003eSimpletransformersで文章分類器の作成\u003c/li\u003e\n\u003cli data-sourcepos=\"50:1-50:22\"\u003eFastAPIでAPI作成\u003c/li\u003e\n\u003cli data-sourcepos=\"51:1-52:0\"\u003eAmazon SageMakerでエンドポイント作成\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp data-sourcepos=\"53:1-56:85\"\u003e3については規定の手続きになるので，1と2をどう組むかでアプリケーションを変えられますね．\u003cbr\u003e\nということで，1と2についてはこの記事で，3についてを次の記事で書いていきます．\u003cbr\u003e\n（書いていたら長くなったので分けました．）\u003cbr\u003e\n特にSimpletransformersは\u003cdel\u003e疲れたので\u003c/del\u003eなんとなく割愛しています．\u003c/p\u003e\n\u003ch2 data-sourcepos=\"58:1-58:48\"\u003e\n\u003cspan id=\"simpletransformersで文章分類器の作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#simpletransformers%E3%81%A7%E6%96%87%E7%AB%A0%E5%88%86%E9%A1%9E%E5%99%A8%E3%81%AE%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSimpletransformersで文章分類器の作成\u003c/h2\u003e\n\u003cp data-sourcepos=\"60:1-60:160\"\u003e\u003ca href=\"https://simpletransformers.ai/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eSimpletransformers\u003c/a\u003e+\u003ca href=\"https://huggingface.co/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eHuggingface\u003c/a\u003eの学習済みモデルを使って文章分類器を作ります．\u003c/p\u003e\n\u003cp data-sourcepos=\"62:1-67:52\"\u003eSimpletransformersはtransformersをラッパーしたライブラリで，超簡単にtransformerが使えます．\u003cbr\u003e\nHuggingfaceは自然言語系のライブラリや誰かが学習させたモデルが使えます．\u003cbr\u003e\n\u003cdel\u003e雑魚なのでありものを使います．\u003c/del\u003e\u003cbr\u003e\n文章分類は，ツイッター文章の感情分類をします．\u003cbr\u003e\nHuggingfaceより\u003ca\u003eCardiff大学の学習済みモデル\u003c/a\u003eを拝借します．\u003cbr\u003e\n\u003cdel\u003eプログラムは書いてもらいました．\u003c/del\u003e\u003c/p\u003e\n\u003cdetails\u003e\u003csummary\u003eソースコードはこちら\u003c/summary\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"71:1-93:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003escipy.special\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esoftmax\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003esimpletransformers.classification\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eClassificationModel\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etransformation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \n    \u003cspan class=\"n\"\u003einputs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"test_list\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"test_list\"\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"test_text\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]]\u003c/span\u003e \n\n    \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eClassificationModel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"roberta\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"cardiffnlp/twitter-roberta-base-sentiment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euse_cuda\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epredict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esoftmax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eaxis\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eoutputs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"positive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eround\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\"neutral\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eround\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\"negative\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eround\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eraw\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n        \n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"result\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eoutputs\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003einputs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etest_text\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etest_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etransformation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/details\u003e\n\u003cp data-sourcepos=\"97:1-100:55\"\u003e\u003ccode\u003einputs\u003c/code\u003eの中の\u003ccode\u003etest_text\u003c/code\u003eか\u003ccode\u003etest_list\u003c/code\u003eにstringを投げると推論してくれます．\u003cbr\u003e\n※\u003ccode\u003etest_list\u003c/code\u003eが優先されます．\u003cbr\u003e\nこのコアプログラムはここでデバッグしておきましょう．\u003cbr\u003e\n出力がdictなのはSageMakerへの仕込みです．\u003c/p\u003e\n\u003cp data-sourcepos=\"102:1-102:42\"\u003eつまづきポイントはこの通り．\u003c/p\u003e\n\u003cul data-sourcepos=\"103:1-105:0\"\u003e\n\u003cli data-sourcepos=\"103:1-103:84\"\u003e\n\u003ccode\u003eClassificationModel()\u003c/code\u003eに与えるHuggingFaceのパスが間違っていないか\u003c/li\u003e\n\u003cli data-sourcepos=\"104:1-105:0\"\u003e関数への入力が間違っていないか\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 data-sourcepos=\"106:1-106:21\"\u003e\n\u003cspan id=\"fasapiでapi作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#fasapi%E3%81%A7api%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eFasAPIでAPI作成\u003c/h2\u003e\n\u003ch3 data-sourcepos=\"108:1-108:22\"\u003e\n\u003cspan id=\"コーディング\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコーディング\u003c/h3\u003e\n\u003cp data-sourcepos=\"110:1-111:116\"\u003e\u003ca href=\"https://tech.fusic.co.jp/posts/2021-12-03-trying-sagemaker-serverless-inference/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eこの記事\u003c/a\u003eを参考にして作成しました．\u003cbr\u003e\n\u003cdel\u003epydanicの部分で参考にした記事があったのですがダチョウ並の脳なので忘れました．\u003c/del\u003e\u003c/p\u003e\n\u003cdetails\u003e\u003csummary\u003eソースコードです（Gitにあがっています）\u003c/summary\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"115:1-152:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp.py\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003efastapi\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eFastAPI\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003euvicorn\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003epydantic\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBaseModel\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003escipy.special\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003esoftmax\u003c/span\u003e\n\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003esimpletransformers.classification\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eClassificationModel\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFastAPI\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBaseModel\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etest_text\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003estr\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etest_list\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003elist\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/ping\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eping\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Hello\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\"World\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/invocations\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003etransformation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eTest\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n    \n    \u003cspan class=\"n\"\u003einputs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etest_list\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etest_list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etest_text\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \n\n    \u003cspan class=\"n\"\u003emodel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eClassificationModel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"roberta\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"cardiffnlp/twitter-roberta-base-sentiment\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euse_cuda\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"bp\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emodel\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epredict\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einputs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esoftmax\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eaxis\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eoutputs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"positive\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eround\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\"neutral\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eround\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\"negative\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eround\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eraw\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eraw\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eraw_pred\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n        \n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003e\"result\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eoutputs\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003e__name__\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"s\"\u003e\"__main__\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euvicorn\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erun\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"s\"\u003e\"app:app\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"0.0.0.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eport\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e8080\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/details\u003e\n\u003cp data-sourcepos=\"156:1-158:164\"\u003e役割としては，通信がうまく行っているかping()を飛ばして確認したあとに，transformation()で処理を行うという感じで使いました（本当の使い方が違ったらすいません）．\u003cbr\u003e\nさてさて，ここで大事なのはこれのデバッグってどこでやるの？という話ですよね．\u003cbr\u003e\n実はFastAPIには自動ドキュメント作成機能があり，Swagger UIでブラウザを使ってAPIをテストすることができます（すごい）．\u003c/p\u003e\n\u003ch3 data-sourcepos=\"160:1-160:14\"\u003e\n\u003cspan id=\"swagger-ui\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#swagger-ui\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSwagger UI\u003c/h3\u003e\n\u003cp data-sourcepos=\"162:1-164:85\"\u003eまずはuvicornを使ってAPIを起動してみます．\u003cbr\u003e\n\u003ccode\u003epythonのファイル名:FastAPIのインスタンス名\u003c/code\u003eで起動できます．\u003cbr\u003e\n例）hoge.pyの中で\u003ccode\u003efuga = FastAPI()\u003c/code\u003eとしているならこんな感じです．\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"165:1-167:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003euvicorn hoge:fuga\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"169:1-169:90\"\u003eapp.pyの中でapp = FastAPI()としているのでこんな感じ↓で起動します．\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"171:1-173:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003euvicorn app:app\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"175:1-175:103\"\u003eあるいはmainで呼び出すようにしているのでpythonコマンドでも起動できます．\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"177:1-180:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd \u003c/span\u003esrc\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003epython app.py\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"182:1-182:57\"\u003eどちらにせよこんなのが出れば正解です．\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"184:1-191:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003eINFO:     Started server process \u003cspan class=\"o\"\u003e[\u003c/span\u003e30238]\nINFO:     Waiting \u003cspan class=\"k\"\u003efor \u003c/span\u003eapplication startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 \u003cspan class=\"o\"\u003e(\u003c/span\u003ePress CTRL+C to quit\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n※pythonで起動するとこっち↓がでるかと思います\nINFO:     Uvicorn running on http://0.0.0.0:8080 \u003cspan class=\"o\"\u003e(\u003c/span\u003ePress CTRL+C to quit\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"193:1-195:113\"\u003eAPIは\u003ccode\u003ehttp://127.0.0.1:8000\u003c/code\u003eをたたけばいいそうです．\u003cbr\u003e\nSwagger UIには\u003ccode\u003ehttp://127.0.0.1:8000/docs\u003c/code\u003eでアクセスできます．\u003cbr\u003e\n※pythonで起動した場合は\u003ccode\u003ehttp://127.0.0.1:8000\u003c/code\u003e→\u003ccode\u003ehttp://0.0.0.0:8080\u003c/code\u003eで読み替えてください．\u003c/p\u003e\n\u003cp data-sourcepos=\"197:1-198:79\"\u003eこんな画面が出てきます．\u003cbr\u003e\n\u003cdel\u003eここから先の操作は雑魚らしく野生の勘で進めました．\u003c/del\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"200:1-200:163\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/46b88532908e4ba57807e46d7cb5d63c253290d5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f31336336323539352d386536632d373936642d633133322d3339643534333033633530322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/46b88532908e4ba57807e46d7cb5d63c253290d5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f31336336323539352d386536632d373936642d633133322d3339643534333033633530322e706e67\" alt=\"スクリーンショット 2022-11-26 12.35.21.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/13c62595-8e6c-796d-c132-39d54303c502.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"202:1-202:45\"\u003eまずはGETから試してみましょう．\u003c/p\u003e\n\u003col data-sourcepos=\"203:1-207:0\"\u003e\n\u003cli data-sourcepos=\"203:1-203:45\"\u003eGETのあたりをおもむろにポチる\u003c/li\u003e\n\u003cli data-sourcepos=\"204:1-204:34\"\u003e右側のTry it outをポチる\u003c/li\u003e\n\u003cli data-sourcepos=\"205:1-207:0\"\u003eExecuteをポチる\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp data-sourcepos=\"208:1-208:135\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/995ab46d9b2552987abb2c9252ff1c5ad7a1d032/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f30336135613838372d373530372d333535392d363166642d3838646433303832353133322e676966\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/995ab46d9b2552987abb2c9252ff1c5ad7a1d032/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f30336135613838372d373530372d333535392d363166642d3838646433303832353133322e676966\" alt=\"ezgif.com-gif-maker.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/03a5a887-7507-3559-61fd-88dd30825132.gif\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"210:1-211:51\"\u003eCode 200が返ってくれば正解です．\u003cbr\u003e\n失敗すると400とか500が返ってきます．\u003c/p\u003e\n\u003cp data-sourcepos=\"213:1-213:163\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/c5bbfd7499dde34495565a8870ec8cd63c4611bb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f66613935636632382d313063612d303430632d643239302d3235323562353830376232332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/c5bbfd7499dde34495565a8870ec8cd63c4611bb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f66613935636632382d313063612d303430632d643239302d3235323562353830376232332e706e67\" alt=\"スクリーンショット 2022-11-26 12.34.06.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/fa95cf28-10ca-040c-d290-2525b5807b23.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"216:1-216:113\"\u003ePOSTも試してみましょう．今度はTry it outを押すとRequest bodyがガッと開きますガッと．\u003c/p\u003e\n\u003cp data-sourcepos=\"218:1-218:139\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/66bf5be5932936b8cf351905c6f50c9dbdee6d40/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f35393765373264392d363966382d343564362d356534332d6630666131643131316438612e676966\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/66bf5be5932936b8cf351905c6f50c9dbdee6d40/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f35393765373264392d363966382d343564362d356534332d6630666131643131316438612e676966\" alt=\"ezgif.com-gif-maker (1).gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/597e72d9-69f8-45d6-5e43-f0fa1d111d8a.gif\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"221:1-222:60\"\u003eせっかくなのでリクエストを編集してみます（画像小さい）．\u003cbr\u003e\nRequest bodyの中をこんな感じに変えてみます．\u003c/p\u003e\n\u003cdetails\u003e\u003csummary\u003eコピペはこちらから\u003c/summary\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"json\" data-sourcepos=\"225:1-232:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"test_text\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"test_list\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"w\"\u003e\n    \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"string\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"string\"\u003c/span\u003e\u003cspan class=\"w\"\u003e\n  \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/details\u003e\n\u003cp data-sourcepos=\"236:1-236:163\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/339b27a72d5392adb1fb58817a2c3dd879407c16/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f66373064656636652d653836392d646333312d303234352d3539383266326136636336612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/339b27a72d5392adb1fb58817a2c3dd879407c16/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f66373064656636652d653836392d646333312d303234352d3539383266326136636336612e706e67\" alt=\"スクリーンショット 2022-11-26 12.33.51.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/f70def6e-e869-dc31-0245-5982f2a6cc6a.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"238:1-240:82\"\u003eそんなこんなでExecuteすると，今回は結果出力までしばらく時間がかかります．\u003cbr\u003e\n\u003cimg alt=\":arrows_counterclockwise:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f504.png\" title=\":arrows_counterclockwise:\" width=\"20\" loading=\"lazy\"\u003e\t←こんなのがぐるぐるします．\u003cbr\u003e\nボトルネックはこの2つなので広い心で待ってあげましょう．\u003c/p\u003e\n\u003cul data-sourcepos=\"241:1-243:0\"\u003e\n\u003cli data-sourcepos=\"241:1-241:61\"\u003eHuggingFaceからモデルをダウンロードしてくる\u003c/li\u003e\n\u003cli data-sourcepos=\"242:1-243:0\"\u003eモデルを読み込んで推論する\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"244:1-245:65\"\u003eこちらもうまくいくと200が返ってきて，失敗すると400とか500が返ってきます．\u003cbr\u003e\nそして，terminal側にpythonのログが表示されます．\u003c/p\u003e\n\u003cp data-sourcepos=\"247:1-247:163\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/ab648be9d1f5d9475e5c661cc313687fa0ad012d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f35643462633738662d353762312d323238372d326464392d3863343166313337653263642e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/ab648be9d1f5d9475e5c661cc313687fa0ad012d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f35643462633738662d353762312d323238372d326464392d3863343166313337653263642e706e67\" alt=\"スクリーンショット 2022-11-26 12.34.27.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/5d4bc78f-57b1-2287-2dd9-8c41f137e2cd.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"249:1-250:87\"\u003eおもむろに失敗させてみました．\u003cbr\u003e\nterminal側ではこんな感じでhogeってなんぞやと返ってきています．\u003c/p\u003e\n\u003cp data-sourcepos=\"252:1-252:163\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/71b6a88d39d972889ec7233ebf8ee07f1d66a701/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f35333465333432662d356264352d363937352d303330312d3563313230333534326564312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/71b6a88d39d972889ec7233ebf8ee07f1d66a701/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f35333465333432662d356264352d363937352d303330312d3563313230333534326564312e706e67\" alt=\"スクリーンショット 2022-11-26 21.58.08.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/534e342f-5bd5-6975-0301-5c1203542ed1.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"254:1-254:91\"\u003eSwagger UI側ではこんな感じでServerがおかしいぞと返ってきています．\u003c/p\u003e\n\u003cp data-sourcepos=\"256:1-256:163\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/2ff0af9d2a75134fac20051e0530ac0bc5a9bb80/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f33353363396234372d653137622d623364302d656632632d3962633537303233326633612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/2ff0af9d2a75134fac20051e0530ac0bc5a9bb80/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3136353238392f33353363396234372d653137622d623364302d656632632d3962633537303233326633612e706e67\" alt=\"スクリーンショット 2022-11-26 21.56.23.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/353c9b47-e17b-b3d0-ef2c-9bc570232f3a.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"260:1-262:66\"\u003eそんなこんなでSwagger UIを使ってAPIの動作確認をすることができました．\u003cbr\u003e\nSwagger UIとterminalの表示を駆使してデバッグをすることができます．\u003cbr\u003e\nここでしっかりとデバッグをしておきましょう．\u003c/p\u003e\n\u003ch1 data-sourcepos=\"264:1-264:14\"\u003e\n\u003cspan id=\"おわりに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおわりに\u003c/h1\u003e\n\u003cp data-sourcepos=\"266:1-269:36\"\u003e文章分類API自体はこれでオッケーです．\u003cbr\u003e\nなにはともあれ無事にできてよかったです．\u003cbr\u003e\nありがとうHuggingFace，FastAPI，SwaggerUI．\u003cbr\u003e\n終わりよければ全てよし．\u003c/p\u003e\n\u003cp data-sourcepos=\"271:1-271:78\"\u003eいよいよ次はSageMakerでエンドポイントを作っていきます．\u003c/p\u003e\n\u003cdetails\u003e\u003csummary\u003e参考文献\u003c/summary\u003e\n\u003cp data-sourcepos=\"275:1-276:85\"\u003e順不同です．とりあえず読んだだろうというものを列挙してみました．\u003cbr\u003e\n\u003cdel\u003eもっとあった気がするんですがマジで忘れましたすみません\u003c/del\u003e\u003c/p\u003e\n\u003cul data-sourcepos=\"278:1-282:0\"\u003e\n\u003cli data-sourcepos=\"278:1-278:113\"\u003e\u003ca href=\"https://huggingface.co/cardiffnlp/twitter-roberta-base-sentiment\" rel=\"nofollow noopener\" target=\"_blank\"\u003eTwitter-roBERTa-base for Sentiment Analysis\u003c/a\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"279:1-279:166\"\u003e\u003ca href=\"https://laboratory.kazuuu.net/using-fastapi-in-python-to-send-data-using-the-post-method/\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePythonでfastapiを使用しPOSTメソッドでデータを送信する\u003c/a\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"280:1-280:113\"\u003e\u003ca href=\"https://iij.github.io/bootcamp/server-app/fastapi/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eFastAPI入門（FastAPIを使ったWebAPIサーバ作り)\u003c/a\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"281:1-282:0\"\u003e\u003ca href=\"https://fastapi.tiangolo.com/ja/tutorial/body/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eFastAPI リクエストボディ\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/details\u003e\n",
    "body": "# はじめに\n\n開発案件でSageMakerを味見する話があったのでやってみた記事（の前半）です．\n※2022年11月25日現在の内容です．\n\n\u003cb\u003eこの記事ではSageMakerはいじりません．\u003c/b\u003e\n\n『学習から行う』みたいな記事は見つけられたのですが，『推論だけやる』という記事は見つけられなかったので書いています．\n\nよって，対象読者はこのあたりの条件を満たす人になるかと．\n- 学習はローカル（というかAWS以外）でやる\n- 推論のAPIを作りたい\n- バックエンドのインフラはお任せにしたい（フロントエンドはさておき）\n~~チュートリアル読めば書いてあったのかもしれない内容な気もしています．知りませんが．~~\n\n誰かの技術ブログをサクッと再現できないたびに無力感を感じるので，タイトルに『雑魚のための』とつけました．\n\nソースコードは[Github](https://github.com/akh1r0ck/sagemaker_challenge)にあげてあります．\nSageMakerだけいじりたい人はクローンして次の記事から読んだらいいと思います．\nまた前提条件としてDocker，AWSのアカウント登録が済んでいることとしています．\n\n\u003cdetails\u003e\u003csummary\u003e 間違ってもしないこと\u003c/summary\u003e\n\n- AWSでAPIのデバッグする\n    - APIに与えるパラメータだとか，内部でどう処理されるのかとかをエンドポイント作成しながらデバッグしてたら長時間かかった\n- AWSでDcokerfileのデバッグをする\n    - エンドポイントを作成したらDockerfileが悪かったというパターンが超あった\n\u003c/details\u003e\n\n\u003cdetails\u003e\u003csummary\u003e 知ってたらよかったこと\u003c/summary\u003e\n\nこの辺りの要素を知っている人だとヌルヌルだったはずです．\nコアプログラムとしてPython，仮想環境としてDocker，APIに関してはSwagger，インフラとしてAWSという感じですね．\n\n- Python\n    - fastapi\n- Docker\n    - Dockerfile\n- Swagger\n    - Swagger UI\n- AWS\n    - Amazon SageMaker\n    - Erastic Container Registry\n\n\u003c/details\u003e\n\n# やったこと\n\n1. Simpletransformersで文章分類器の作成\n2. FastAPIでAPI作成\n3. Amazon SageMakerでエンドポイント作成\n\n3については規定の手続きになるので，1と2をどう組むかでアプリケーションを変えられますね．\nということで，1と2についてはこの記事で，3についてを次の記事で書いていきます．\n（書いていたら長くなったので分けました．）\n特にSimpletransformersは~~疲れたので~~なんとなく割愛しています．\n\n## Simpletransformersで文章分類器の作成\n\n[Simpletransformers](https://simpletransformers.ai/)+[Huggingface](https://huggingface.co/)の学習済みモデルを使って文章分類器を作ります．\n\nSimpletransformersはtransformersをラッパーしたライブラリで，超簡単にtransformerが使えます．\nHuggingfaceは自然言語系のライブラリや誰かが学習させたモデルが使えます．\n~~雑魚なのでありものを使います．~~\n文章分類は，ツイッター文章の感情分類をします．\nHuggingfaceより[Cardiff大学の学習済みモデル]((https://huggingface.co/cardiffnlp/twitter-roberta-base-sentiment))を拝借します．\n~~プログラムは書いてもらいました．~~\n\n\u003cdetails\u003e\u003csummary\u003eソースコードはこちら\u003c/summary\u003e\n\n```python\nfrom scipy.special import softmax\nfrom simpletransformers.classification import ClassificationModel\n\ndef transformation(inputs):\n    \n    inputs = inputs[\"test_list\"] if len(inputs[\"test_list\"])\u003e0 else [inputs[\"test_text\"]] \n\n    model = ClassificationModel(\"roberta\", \"cardiffnlp/twitter-roberta-base-sentiment\", use_cuda=False)\n    _, raw_pred = model.predict(inputs)\n\n    raw_pred = softmax(raw_pred, axis=1)\n    outputs = [{\"positive\": round(raw[0], 3), \"neutral\": round(raw[1], 3), \"negative\": round(raw[2], 3)} for raw in raw_pred]\n        \n    return {\"result\": outputs}\n\ninputs = {\n    test_text: \"\",\n    test_list: [\"\", \"\"]\n    }\n\nprint(transformation(inputs))\n```\n\n\u003c/details\u003e\n\n`inputs`の中の`test_text`か`test_list`にstringを投げると推論してくれます．\n※`test_list`が優先されます．\nこのコアプログラムはここでデバッグしておきましょう．\n出力がdictなのはSageMakerへの仕込みです．\n\nつまづきポイントはこの通り．\n- `ClassificationModel()`に与えるHuggingFaceのパスが間違っていないか\n- 関数への入力が間違っていないか\n\n## FasAPIでAPI作成\n\n### コーディング\n\n[この記事](https://tech.fusic.co.jp/posts/2021-12-03-trying-sagemaker-serverless-inference/)を参考にして作成しました．\n~~pydanicの部分で参考にした記事があったのですがダチョウ並の脳なので忘れました．~~\n\n\u003cdetails\u003e\u003csummary\u003eソースコードです（Gitにあがっています）\u003c/summary\u003e\n\n```app.py\nfrom fastapi import FastAPI\nimport uvicorn\nfrom pydantic import BaseModel\nfrom scipy.special import softmax\nfrom simpletransformers.classification import ClassificationModel\n\napp = FastAPI()\n\nclass Test(BaseModel):\n    test_text: str\n    test_list: list\n\n@app.get(\"/ping\")\ndef ping():\n    return {\"Hello\": \"World\"}\n\n@app.post(\"/invocations\")\ndef transformation(inputs: Test):\n    \n    inputs = inputs.test_list if len(inputs.test_list)\u003e0 else [inputs.test_text] \n\n    model = ClassificationModel(\"roberta\", \"cardiffnlp/twitter-roberta-base-sentiment\", use_cuda=False)\n    _, raw_pred = model.predict(inputs)\n\n    raw_pred = softmax(raw_pred, axis=1)\n    outputs = [{\"positive\": round(raw[0], 3), \"neutral\": round(raw[1], 3), \"negative\": round(raw[2], 3)} for raw in raw_pred]\n        \n    return {\"result\": outputs}\n\n\nif __name__ == \"__main__\":\n    uvicorn.run(\n        \"app:app\",\n        host=\"0.0.0.0\",\n        port=8080\n    )\n```\n\n\u003c/details\u003e\n\n役割としては，通信がうまく行っているかping()を飛ばして確認したあとに，transformation()で処理を行うという感じで使いました（本当の使い方が違ったらすいません）．\nさてさて，ここで大事なのはこれのデバッグってどこでやるの？という話ですよね．\n実はFastAPIには自動ドキュメント作成機能があり，Swagger UIでブラウザを使ってAPIをテストすることができます（すごい）．\n\n### Swagger UI\n\nまずはuvicornを使ってAPIを起動してみます．\n`pythonのファイル名:FastAPIのインスタンス名`で起動できます．\n例）hoge.pyの中で`fuga = FastAPI()`としているならこんな感じです．\n```bash\n$ uvicorn hoge:fuga\n```\n\napp.pyの中でapp = FastAPI()としているのでこんな感じ↓で起動します．\n\n```bash\n$ uvicorn app:app\n```\n\nあるいはmainで呼び出すようにしているのでpythonコマンドでも起動できます．\n\n```zsh\n$ cd src\n$ python app.py\n```\n\nどちらにせよこんなのが出れば正解です．\n\n```zsh\nINFO:     Started server process [30238]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n※pythonで起動するとこっち↓がでるかと思います\nINFO:     Uvicorn running on http://0.0.0.0:8080 (Press CTRL+C to quit)\n```\n\nAPIは`http://127.0.0.1:8000`をたたけばいいそうです．\nSwagger UIには`http://127.0.0.1:8000/docs`でアクセスできます．\n※pythonで起動した場合は`http://127.0.0.1:8000`→`http://0.0.0.0:8080`で読み替えてください．\n\nこんな画面が出てきます．\n~~ここから先の操作は雑魚らしく野生の勘で進めました．~~\n\n![スクリーンショット 2022-11-26 12.35.21.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/13c62595-8e6c-796d-c132-39d54303c502.png)\n\nまずはGETから試してみましょう．\n1. GETのあたりをおもむろにポチる\n1. 右側のTry it outをポチる\n1. Executeをポチる\n\n\n![ezgif.com-gif-maker.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/03a5a887-7507-3559-61fd-88dd30825132.gif)\n\nCode 200が返ってくれば正解です．\n失敗すると400とか500が返ってきます．\n\n![スクリーンショット 2022-11-26 12.34.06.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/fa95cf28-10ca-040c-d290-2525b5807b23.png)\n\n\nPOSTも試してみましょう．今度はTry it outを押すとRequest bodyがガッと開きますガッと．\n\n![ezgif.com-gif-maker (1).gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/597e72d9-69f8-45d6-5e43-f0fa1d111d8a.gif)\n\n\nせっかくなのでリクエストを編集してみます（画像小さい）．\nRequest bodyの中をこんな感じに変えてみます．\n\u003cdetails\u003e\u003csummary\u003eコピペはこちらから\u003c/summary\u003e\n\n```json\n{\n  \"test_text\": \"\",\n  \"test_list\": [\n    \"string\", \"string\"\n  ]\n}\n```\n\n\u003c/details\u003e\n\n![スクリーンショット 2022-11-26 12.33.51.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/f70def6e-e869-dc31-0245-5982f2a6cc6a.png)\n\nそんなこんなでExecuteすると，今回は結果出力までしばらく時間がかかります．\n:arrows_counterclockwise:\t←こんなのがぐるぐるします．\nボトルネックはこの2つなので広い心で待ってあげましょう．\n- HuggingFaceからモデルをダウンロードしてくる\n- モデルを読み込んで推論する\n\nこちらもうまくいくと200が返ってきて，失敗すると400とか500が返ってきます．\nそして，terminal側にpythonのログが表示されます．\n\n![スクリーンショット 2022-11-26 12.34.27.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/5d4bc78f-57b1-2287-2dd9-8c41f137e2cd.png)\n\nおもむろに失敗させてみました．\nterminal側ではこんな感じでhogeってなんぞやと返ってきています．\n\n![スクリーンショット 2022-11-26 21.58.08.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/534e342f-5bd5-6975-0301-5c1203542ed1.png)\n\nSwagger UI側ではこんな感じでServerがおかしいぞと返ってきています．\n\n![スクリーンショット 2022-11-26 21.56.23.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/165289/353c9b47-e17b-b3d0-ef2c-9bc570232f3a.png)\n\n\n\nそんなこんなでSwagger UIを使ってAPIの動作確認をすることができました．\nSwagger UIとterminalの表示を駆使してデバッグをすることができます．\nここでしっかりとデバッグをしておきましょう．\n\n# おわりに\n\n文章分類API自体はこれでオッケーです．\nなにはともあれ無事にできてよかったです．\nありがとうHuggingFace，FastAPI，SwaggerUI．\n終わりよければ全てよし．\n\nいよいよ次はSageMakerでエンドポイントを作っていきます．\n\n\u003cdetails\u003e\u003csummary\u003e参考文献\u003c/summary\u003e\n\n順不同です．とりあえず読んだだろうというものを列挙してみました．\n~~もっとあった気がするんですがマジで忘れましたすみません~~\n\n- [Twitter-roBERTa-base for Sentiment Analysis](https://huggingface.co/cardiffnlp/twitter-roberta-base-sentiment)\n- [Pythonでfastapiを使用しPOSTメソッドでデータを送信する](https://laboratory.kazuuu.net/using-fastapi-in-python-to-send-data-using-the-post-method/)\n- [FastAPI入門（FastAPIを使ったWebAPIサーバ作り)](https://iij.github.io/bootcamp/server-app/fastapi/)\n- [FastAPI リクエストボディ](https://fastapi.tiangolo.com/ja/tutorial/body/)\n\n\u003c/details\u003e\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:59:18+09:00",
    "group": null,
    "id": "554e1e75c56a918453e0",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Python", "versions": [] },
      { "name": "swagger", "versions": [] },
      { "name": "FastAPI", "versions": [] },
      { "name": "simpletransformer", "versions": [] }
    ],
    "title": "【前半】雑魚のためのSageMaker入門（文章分類API作ってみた）",
    "updated_at": "2022-11-26T23:01:17+09:00",
    "url": "https://qiita.com/szk1akhr/items/554e1e75c56a918453e0",
    "user": {
      "description": "田舎の国立大学で研究職と博士時代にたてた会社でAIの研究開発をやってます．\r\n最近はデータセントリックなアプローチで何かできないかと思索しています．\r\nUdemyで公開してたりします．【忙しい人のための0から学べるAI開発】で探すと出てきます（たぶん）",
      "facebook_id": "",
      "followees_count": 9,
      "followers_count": 19,
      "github_login_name": null,
      "id": "szk1akhr",
      "items_count": 18,
      "linkedin_id": "",
      "location": "修羅の国・北九州",
      "name": "",
      "organization": "九州工業大学・株式会社Techno.send",
      "permanent_id": 165289,
      "profile_image_url": "https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/165289/23ff489760d4afe29c15690432424cb3f2a36746/x_large.png?1649930893",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": "http://technosend.co.jp/cv_consulting"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"2:1-2:145\"\u003e12月にMbed Online Compilerがサービス終了するという事で、利用者はArm Keil Studioへ移行する必要が発生しました。\u003c/p\u003e\n\u003cp data-sourcepos=\"4:1-4:243\"\u003eディレクトリの移行自体は簡単なのですが、その後の操作が少し面倒なので、備忘録とロボコン部内共有も兼ねて、私自身が把握している範囲でですが記録しておこうと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"6:1-6:144\"\u003e※間違っている部分が多々あると思われますが、修正すべき点がありましたらコメント等お願い致します。\u003c/p\u003e\n\u003cp data-sourcepos=\"8:1-8:149\"\u003e※この記事は、\u003ca href=\"https://developer.arm.com/documentation/102497/1-5/?lang=en\" rel=\"nofollow noopener\" target=\"_blank\"\u003eArm Keil Studio Cloud User Guide\u003c/a\u003eを参考にしております。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"10:1-10:32\"\u003e\n\u003cspan id=\"この記事の主な対象者\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AE%E4%B8%BB%E3%81%AA%E5%AF%BE%E8%B1%A1%E8%80%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこの記事の主な対象者\u003c/h1\u003e\n\u003cul data-sourcepos=\"11:2-14:0\"\u003e\n\u003cli data-sourcepos=\"11:2-11:65\"\u003e現在までMbed Online Compilerで開発を行っていた方\u003c/li\u003e\n\u003cli data-sourcepos=\"12:2-12:84\"\u003e今までMbed Online Compiler以外のMbed開発環境を触った事がない方\u003c/li\u003e\n\u003cli data-sourcepos=\"13:2-14:0\"\u003eArm Keil Studioにディレクトリ移行したのは良いものの、行き詰っている方\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 data-sourcepos=\"15:1-15:14\"\u003e\n\u003cspan id=\"移行手順\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%A7%BB%E8%A1%8C%E6%89%8B%E9%A0%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e移行手順\u003c/h1\u003e\n\u003cp data-sourcepos=\"16:1-16:64\"\u003e移行手順は大きく分けて以下の3つとなります。\u003c/p\u003e\n\u003col data-sourcepos=\"17:2-20:0\"\u003e\n\u003cli data-sourcepos=\"17:2-17:51\"\u003eディレクトリをKeil Studioに移行する\u003c/li\u003e\n\u003cli data-sourcepos=\"18:2-18:60\"\u003eMbed 2からMbed OS 5 or 6へアップグレードする\u003c/li\u003e\n\u003cli data-sourcepos=\"19:2-20:0\"\u003e互換性のない関数(主にUART周辺)を調整する\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 data-sourcepos=\"21:1-21:53\"\u003e\n\u003cspan id=\"1-ディレクトリをkeil-studioに移行する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1-%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E3%82%92keil-studio%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1. ディレクトリをKeil Studioに移行する\u003c/h2\u003e\n\u003cp data-sourcepos=\"22:1-23:99\"\u003eすでにここまではやってる方も多いかもしれませんが、一応書き記しておきます。\u003cbr\u003e\n幸いにもボタン数クリックで移行が可能なので、手早く行っていきます。\u003c/p\u003e\n\u003ch4 data-sourcepos=\"25:1-25:42\"\u003e\n\u003cspan id=\"11-keil-studioにログインする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#11-keil-studio%E3%81%AB%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.1. Keil Studioにログインする\u003c/h4\u003e\n\u003cp data-sourcepos=\"26:1-27:159\"\u003e\u003ca href=\"https://studio.keil.arm.com/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eKeil Studio\u003c/a\u003eにアクセスし、ログインします。\u003cbr\u003e\nユーザー情報はOnline Compilerと同じですので、普段Online Compilerにログインする際と同じ感覚でやってもらって結構です。\u003c/p\u003e\n\u003cp data-sourcepos=\"29:1-29:108\"\u003e初回読み込みはかなり時間がかかった記憶がありますが、気長に待ちましょう。\u003c/p\u003e\n\u003ch4 data-sourcepos=\"31:1-31:78\"\u003e\n\u003cspan id=\"12-mbed-online-compilerからプロジェクトをインポートする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#12-mbed-online-compiler%E3%81%8B%E3%82%89%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.2. Mbed Online Compilerからプロジェクトをインポートする\u003c/h4\u003e\n\u003ch5 data-sourcepos=\"32:1-32:48\"\u003e\n\u003cspan id=\"121-keil-studioを初めて開く場合\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#121-keil-studio%E3%82%92%E5%88%9D%E3%82%81%E3%81%A6%E9%96%8B%E3%81%8F%E5%A0%B4%E5%90%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.2.1. Keil Studioを初めて開く場合\u003c/h5\u003e\n\u003cp data-sourcepos=\"33:1-38:122\"\u003eKeil Studioが開いたら、この場では何も操作せず、左側に画像のようなタブが出ているはずなので、一番下のImport projects from Mbed online Compilerを選択します。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/15aaa52fad865806e53f706272130a4f2a4a716a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f64393838323164612d373531342d346337302d346231352d3733316364646534346538622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fd98821da-7514-4c70-4b15-731cdde44e8b.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1aa05bd89024a243f021bcaa70308383\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/d98821da-7514-4c70-4b15-731cdde44e8b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fd98821da-7514-4c70-4b15-731cdde44e8b.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d0d25daf4b5a345bf7d832dede758596 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nすると選択画面が出てきますので、移行したいプロジェクトを選択し、Copy progamsをクリックします。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/543262037e15e5099ca40404950b594922c2f66f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f65626136663535642d636237632d333436312d343864372d6531313661643332326531322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Feba6f55d-cb7c-3461-48d7-e116ad322e12.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=32e65300328b416be03895c8e09ff816\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/eba6f55d-cb7c-3461-48d7-e116ad322e12.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Feba6f55d-cb7c-3461-48d7-e116ad322e12.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=9b346835509afe76263a7ed789e18649 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n画像のように、新しくプロジェクトが追加されたら完了です。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/75cf851df38f562f4f2cbf978c258492444f71cb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f64636636646564372d656633392d376531622d653937322d6137363365336330663434652e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fdcf6ded7-ef39-7e1b-e972-a763e3c0f44e.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=b188f397f857f1c447e2650b567bd886\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/dcf6ded7-ef39-7e1b-e972-a763e3c0f44e.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fdcf6ded7-ef39-7e1b-e972-a763e3c0f44e.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f81ef3d68c16a3c8a493c84cc473db77 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch5 data-sourcepos=\"40:1-40:92\"\u003e\n\u003cspan id=\"122-keil-studioに他のプロジェクトが存在する場合追加読み込み\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#122-keil-studio%E3%81%AB%E4%BB%96%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%8C%E5%AD%98%E5%9C%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88%E8%BF%BD%E5%8A%A0%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1.2.2. Keil Studioに他のプロジェクトが存在する場合(追加読み込み)\u003c/h5\u003e\n\u003cp data-sourcepos=\"41:1-43:81\"\u003eKeil Studioを開いたら、画面左上のFileタブをクリックします。Import from Mbed Online Compilerを選択したらプロジェクト一覧が出てくると思いますので、インポートしたいプロジェクトを選択してCopy programsをクリックします。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/8ac092829b11500c059bc39a7091864baf9bd01e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f32383264333336392d633661612d363531312d616335382d6530356564613865343635312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F282d3369-c6aa-6511-ac58-e05eda8e4651.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=87d0189fe603c8916d7ea59e26f1b330\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/282d3369-c6aa-6511-ac58-e05eda8e4651.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F282d3369-c6aa-6511-ac58-e05eda8e4651.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=966dd3ab7b954841b309f30e805ec4b3 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n左側に選択したプロジェクトが追加されていれば完了です。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"45:1-45:62\"\u003e\n\u003cspan id=\"2-mbed-2からmbed-os-5-or-6へアップグレードする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#2-mbed-2%E3%81%8B%E3%82%89mbed-os-5-or-6%E3%81%B8%E3%82%A2%E3%83%83%E3%83%97%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2. Mbed 2からMbed OS 5 or 6へアップグレードする\u003c/h2\u003e\n\u003cp data-sourcepos=\"46:1-47:191\"\u003eKeil Studioにプロジェクトを追加した状態だと思いますが、このままではまだプログラムをコンパイルする事ができません。\u003cbr\u003e\nOnline CompilerではMbed 2を使っていましたが、Keil StudioではMbed OS 5または6にしか対応しておらず(多分)、アップグレードの作業が必要となります。\u003c/p\u003e\n\u003ch5 data-sourcepos=\"49:1-49:28\"\u003e\n\u003cspan id=\"21-mbedbldの削除\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#21-mbedbld%E3%81%AE%E5%89%8A%E9%99%A4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2.1. mbed.bldの削除\u003c/h5\u003e\n\u003cp data-sourcepos=\"50:1-52:122\"\u003e画像の通り、Mbed 2から移行後のディレクトリ内に存在するmbed.bldを削除します。\u003cbr\u003e\nmbed.bldと書いてある上で右クリック、メニューの下の方にあるDeleteを押すことで削除できます。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/d1055eca67c226b1867ddb1fe1bf7f0f73799893/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f36633430626534632d363033392d653139392d333336332d3839326561653865346639312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F6c40be4c-6039-e199-3363-892eae8e4f91.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=6ff814b9079acdbb8e1d3fba06812faa\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/6c40be4c-6039-e199-3363-892eae8e4f91.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F6c40be4c-6039-e199-3363-892eae8e4f91.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d4ee653e66c826ae0c87456ec7d1023d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch5 data-sourcepos=\"54:1-54:36\"\u003e\n\u003cspan id=\"22-mbed-osのインポート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#22-mbed-os%E3%81%AE%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e2.2. Mbed OSのインポート\u003c/h5\u003e\n\u003cp data-sourcepos=\"55:1-61:122\"\u003eプロジェクト名の上で右クリック、メニューからAdd Mbed Library...を選択します。\u003cbr\u003e\nするとURLとライブラリ名を入力する画面が出てきますので、URLに\u003ccode\u003ehttps://github.com/ARMmbed/mbed-os\u003c/code\u003eと入力し、ライブラリ名はmbed-osのまま次に進みます。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/31145b024d2bd4e9ee46507cc8ed4c27f9a4d3a5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f34626130383935652d346633652d393637362d613166382d3838626433323832313966332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F4ba0895e-4f3e-9676-a1f8-88bd328219f3.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=ad1fc57e3f16b27e26d7f8326f4671b9\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/4ba0895e-4f3e-9676-a1f8-88bd328219f3.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F4ba0895e-4f3e-9676-a1f8-88bd328219f3.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=63fecf1c8ef7456046b316d7e3ca1c34 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n以下のような画面が出てきますので、過去にOnline Compilerを使用していた方のうち、\u003cstrong\u003eSerialクラスまたはRawSerialクラスを利用していた方は、プルダウンから\"mbed-os-5.xx.x\"を選択するようにしてください。\u003c/strong\u003e (それ以外の方は6でも問題ないかと思います。)\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/cb28649615f29b8c6404be473caed010b100663b/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f65373738353064352d383732662d363632382d333735612d6366326663613661383834322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fe77850d5-872f-6628-375a-cf2fca6a8842.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d29228f0010ed259a902c8e0a5415e01\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/e77850d5-872f-6628-375a-cf2fca6a8842.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fe77850d5-872f-6628-375a-cf2fca6a8842.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1948808f851e44ef3d08c747949a1849 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nFinishを押し、新たにmbed-osディレクトリが生成されていれば、インポート完了です。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/40f9448bc2cea9385a54b9409bcbab29746d31a8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f65363034646661322d623864642d386365662d373637332d3436366361633663616464312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fe604dfa2-b8dd-8cef-7673-466cac6cadd1.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=eaa4386e40e30197395adf7369b8419e\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/e604dfa2-b8dd-8cef-7673-466cac6cadd1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2Fe604dfa2-b8dd-8cef-7673-466cac6cadd1.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=fe0c9afb866850c14a5cdae20081db83 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 data-sourcepos=\"64:1-64:83\"\u003e\n\u003cspan id=\"3-serialクラス周辺を調整するonline-compilerからの移行者向け\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#3-serial%E3%82%AF%E3%83%A9%E3%82%B9%E5%91%A8%E8%BE%BA%E3%82%92%E8%AA%BF%E6%95%B4%E3%81%99%E3%82%8Bonline-compiler%E3%81%8B%E3%82%89%E3%81%AE%E7%A7%BB%E8%A1%8C%E8%80%85%E5%90%91%E3%81%91\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e3. Serialクラス周辺を調整する(Online Compilerからの移行者向け)\u003c/h2\u003e\n\u003cp data-sourcepos=\"65:1-67:122\"\u003eMbed OS 5ではSerialクラスが利用できず、代わりにRawSerialというクラスを利用する必要があります。\u003cbr\u003e\n(Mbed OS 6だとRawSerialも消え、BufferedSerialとUnBufferedSerialに分割される。こちらは未調査)\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/c6f15283cc94da632abde2f7e05623b76fbfb358/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323732373931372f34316261393836632d613239372d393562622d313337612d6136303563663364653030632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F41ba986c-a297-95bb-137a-a605cf3de00c.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=3f67bcf51c45b1816adf254cab4f77ca\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/41ba986c-a297-95bb-137a-a605cf3de00c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2727917%2F41ba986c-a297-95bb-137a-a605cf3de00c.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=fca9d8a19f49980434839e8debd56759 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch5 data-sourcepos=\"70:1-70:41\"\u003e\n\u003cspan id=\"31-rawserialクラスへの変更\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#31-rawserial%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%B8%E3%81%AE%E5%A4%89%E6%9B%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e3.1. RawSerialクラスへの変更\u003c/h5\u003e\n\u003cp data-sourcepos=\"71:1-71:171\"\u003e変更自体は簡単で、\u003ccode\u003eSerial 変数名(TX, RX)\u003c/code\u003eで宣言していたものを、\u003ccode\u003eRawSerial 変数名(TX, RX, baud[省略可])\u003c/code\u003eに変更するだけで可能です。\u003c/p\u003e\n\u003ch5 data-sourcepos=\"73:1-73:26\"\u003e\n\u003cspan id=\"32-構文の修正\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#32-%E6%A7%8B%E6%96%87%E3%81%AE%E4%BF%AE%E6%AD%A3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e3.2. 構文の修正\u003c/h5\u003e\n\u003cp data-sourcepos=\"74:1-75:136\"\u003e\u003ccode\u003e変数名.baud(####)\u003c/code\u003eなど、ピン宣言とは別でボーレートを指定していた場合、エラーを吐かれてしまいます(多分)。\u003cbr\u003e\nそのためbaud関数を削除し、代わりにボーレートの値をRawSerial宣言の第三引数に渡してあげましょう。\u003c/p\u003e\n\u003cp data-sourcepos=\"77:1-77:250\"\u003eまた、割込みのためにattach関数を使っている方も多いと思われますが、こちらは\u003ccode\u003eSerial::RxIrq\u003c/code\u003eという引数を、\u003ccode\u003eSerialBase::RxIrq\u003c/code\u003eに変更してあげましょう(送信割込みの場合はRxIrqの部分がTxIrq)。\u003c/p\u003e\n\u003cp data-sourcepos=\"80:1-80:42\"\u003e以下に修正例を示しておきます\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_cpp\" data-sourcepos=\"81:1-112:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003emain.cpp\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e#include \"mbed.h\"\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ePS3Data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"n\"\u003eSeial\u003c/span\u003e \u003cspan class=\"nf\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUSBTX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUSBRX\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"n\"\u003eSerial\u003c/span\u003e \u003cspan class=\"nf\"\u003econt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePA_9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ePA_10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\n\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003eRawSerial\u003c/span\u003e \u003cspan class=\"nf\"\u003epc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUSBTX\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eUSBRX\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003eRawSerial\u003c/span\u003e \u003cspan class=\"nf\"\u003econt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePA_9\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ePA_10\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9600\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ePS3\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//省略\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//初期設定\u003c/span\u003e\n\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e   \u003cspan class=\"n\"\u003econt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebaud\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9600\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e   \u003cspan class=\"n\"\u003econt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eattach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ePS3Data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSerial\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eRxIrq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e   \u003cspan class=\"n\"\u003econt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eattach\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ePS3Data\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSerialBase\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eRxIrq\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ePS3Data\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//省略\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch1 data-sourcepos=\"115:1-115:11\"\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\u003cp data-sourcepos=\"116:1-117:121\"\u003eおおよその方はこれで動くと思います。\u003cbr\u003e\n稀によく構文エラーが出ることがありますが、\u003cstrong\u003eなぜか\u003c/strong\u003eビルド通るので多分大丈夫です。\u003c/p\u003e\n\u003cp data-sourcepos=\"119:1-119:48\"\u003e引っ掛かりやすい部分をまとめると\u003c/p\u003e\n\u003cul data-sourcepos=\"121:1-124:0\"\u003e\n\u003cli data-sourcepos=\"121:1-121:48\"\u003eMbed OSへのバージョンアップが必要\u003c/li\u003e\n\u003cli data-sourcepos=\"122:1-122:104\"\u003eSerialクラスを使ってる場合は、Mbed OS 5の方がある程度互換効いて使いやすい\u003c/li\u003e\n\u003cli data-sourcepos=\"123:1-124:0\"\u003eRawSerialクラスへの移行に伴って、若干の構文変更が必要\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"125:1-127:174\"\u003eこの辺りだと思います。\u003cbr\u003e\n本来であれば最新のMbed OS 6を使用するべきであるとは思うのですが、Serial系クラスの一新などと面倒な仕様変更が入ったため、互換性や引継ぎのしやすさという面でMbed OS 5への説明という形で紹介させていただきました。\u003cbr\u003e\nもし6への移行が上手くいきそうなら、今後そちらも記事にまとめたいと思います。というより誰か作って欲しいです(他力本願)。\u003c/p\u003e\n\u003cp data-sourcepos=\"129:1-130:132\"\u003e12月にサービス終了という事で、取り急ぎ分かってる範囲でまとめてみました。\u003cbr\u003e\n不明瞭で間違ってる部分もあると思われますが、あくまで参考程度にしていただけると幸いです。\u003c/p\u003e\n\u003cp data-sourcepos=\"132:1-132:55\"\u003eということで、皆様も良いMbedライフを！\u003c/p\u003e\n",
    "body": "# はじめに\n12月にMbed Online Compilerがサービス終了するという事で、利用者はArm Keil Studioへ移行する必要が発生しました。\n\nディレクトリの移行自体は簡単なのですが、その後の操作が少し面倒なので、備忘録とロボコン部内共有も兼ねて、私自身が把握している範囲でですが記録しておこうと思います。\n\n※間違っている部分が多々あると思われますが、修正すべき点がありましたらコメント等お願い致します。\n\n※この記事は、[Arm Keil Studio Cloud User Guide](https://developer.arm.com/documentation/102497/1-5/?lang=en)を参考にしております。\n\n# この記事の主な対象者\n - 現在までMbed Online Compilerで開発を行っていた方\n - 今までMbed Online Compiler以外のMbed開発環境を触った事がない方\n - Arm Keil Studioにディレクトリ移行したのは良いものの、行き詰っている方\n\n# 移行手順\n移行手順は大きく分けて以下の3つとなります。\n 1. ディレクトリをKeil Studioに移行する\n 1. Mbed 2からMbed OS 5 or 6へアップグレードする\n 1. 互換性のない関数(主にUART周辺)を調整する\n\n## 1. ディレクトリをKeil Studioに移行する\nすでにここまではやってる方も多いかもしれませんが、一応書き記しておきます。\n幸いにもボタン数クリックで移行が可能なので、手早く行っていきます。\n\n#### 1.1. Keil Studioにログインする\n[Keil Studio](https://studio.keil.arm.com/)にアクセスし、ログインします。\nユーザー情報はOnline Compilerと同じですので、普段Online Compilerにログインする際と同じ感覚でやってもらって結構です。\n\n初回読み込みはかなり時間がかかった記憶がありますが、気長に待ちましょう。\n\n#### 1.2. Mbed Online Compilerからプロジェクトをインポートする\n##### 1.2.1. Keil Studioを初めて開く場合\nKeil Studioが開いたら、この場では何も操作せず、左側に画像のようなタブが出ているはずなので、一番下のImport projects from Mbed online Compilerを選択します。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/d98821da-7514-4c70-4b15-731cdde44e8b.png)\nすると選択画面が出てきますので、移行したいプロジェクトを選択し、Copy progamsをクリックします。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/eba6f55d-cb7c-3461-48d7-e116ad322e12.png)\n画像のように、新しくプロジェクトが追加されたら完了です。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/dcf6ded7-ef39-7e1b-e972-a763e3c0f44e.png)\n\n##### 1.2.2. Keil Studioに他のプロジェクトが存在する場合(追加読み込み)\nKeil Studioを開いたら、画面左上のFileタブをクリックします。Import from Mbed Online Compilerを選択したらプロジェクト一覧が出てくると思いますので、インポートしたいプロジェクトを選択してCopy programsをクリックします。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/282d3369-c6aa-6511-ac58-e05eda8e4651.png)\n左側に選択したプロジェクトが追加されていれば完了です。\n\n## 2. Mbed 2からMbed OS 5 or 6へアップグレードする\nKeil Studioにプロジェクトを追加した状態だと思いますが、このままではまだプログラムをコンパイルする事ができません。\nOnline CompilerではMbed 2を使っていましたが、Keil StudioではMbed OS 5または6にしか対応しておらず(多分)、アップグレードの作業が必要となります。\n\n##### 2.1. mbed.bldの削除\n画像の通り、Mbed 2から移行後のディレクトリ内に存在するmbed.bldを削除します。\nmbed.bldと書いてある上で右クリック、メニューの下の方にあるDeleteを押すことで削除できます。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/6c40be4c-6039-e199-3363-892eae8e4f91.png)\n\n##### 2.2. Mbed OSのインポート\nプロジェクト名の上で右クリック、メニューからAdd Mbed Library...を選択します。\nするとURLとライブラリ名を入力する画面が出てきますので、URLに`https://github.com/ARMmbed/mbed-os`と入力し、ライブラリ名はmbed-osのまま次に進みます。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/4ba0895e-4f3e-9676-a1f8-88bd328219f3.png)\n以下のような画面が出てきますので、過去にOnline Compilerを使用していた方のうち、**SerialクラスまたはRawSerialクラスを利用していた方は、プルダウンから\"mbed-os-5.xx.x\"を選択するようにしてください。** (それ以外の方は6でも問題ないかと思います。)\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/e77850d5-872f-6628-375a-cf2fca6a8842.png)\nFinishを押し、新たにmbed-osディレクトリが生成されていれば、インポート完了です。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/e604dfa2-b8dd-8cef-7673-466cac6cadd1.png)\n\n\n## 3. Serialクラス周辺を調整する(Online Compilerからの移行者向け)\nMbed OS 5ではSerialクラスが利用できず、代わりにRawSerialというクラスを利用する必要があります。\n(Mbed OS 6だとRawSerialも消え、BufferedSerialとUnBufferedSerialに分割される。こちらは未調査)\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2727917/41ba986c-a297-95bb-137a-a605cf3de00c.png)\n\n\n##### 3.1. RawSerialクラスへの変更\n変更自体は簡単で、`Serial 変数名(TX, RX)`で宣言していたものを、`RawSerial 変数名(TX, RX, baud[省略可])`に変更するだけで可能です。\n\n##### 3.2. 構文の修正\n`変数名.baud(####)`など、ピン宣言とは別でボーレートを指定していた場合、エラーを吐かれてしまいます(多分)。\nそのためbaud関数を削除し、代わりにボーレートの値をRawSerial宣言の第三引数に渡してあげましょう。\n\nまた、割込みのためにattach関数を使っている方も多いと思われますが、こちらは`Serial::RxIrq`という引数を、`SerialBase::RxIrq`に変更してあげましょう(送信割込みの場合はRxIrqの部分がTxIrq)。\n\n\n以下に修正例を示しておきます\n```diff_cpp:main.cpp\n#include \"mbed.h\"\n\nvoid Config(void);\nvoid PS3Data(void);\n\n- Seial pc(USBTX,USBRX);\n- Serial cont(PA_9, PA_10);\n\n+ RawSerial pc(USBTX,USBRX);\n+ RawSerial cont(PA_9, PA_10,9600);\n\nint PS3[7];\n\nint main(void)\n{\n    Config();\n    //省略\n}\n\nvoid Config(void){\n    //初期設定\n-   cont.baud(9600);\n-   cont.attach(\u0026PS3Data, Serial::RxIrq);\n+   cont.attach(\u0026PS3Data, SerialBase::RxIrq);\n}\n\nvoid PS3Data(void)\n{\n    //省略\n}\n```\n\n\n# まとめ\nおおよその方はこれで動くと思います。\n稀によく構文エラーが出ることがありますが、**なぜか**ビルド通るので多分大丈夫です。\n\n引っ掛かりやすい部分をまとめると\n\n- Mbed OSへのバージョンアップが必要\n- Serialクラスを使ってる場合は、Mbed OS 5の方がある程度互換効いて使いやすい\n- RawSerialクラスへの移行に伴って、若干の構文変更が必要\n\nこの辺りだと思います。\n本来であれば最新のMbed OS 6を使用するべきであるとは思うのですが、Serial系クラスの一新などと面倒な仕様変更が入ったため、互換性や引継ぎのしやすさという面でMbed OS 5への説明という形で紹介させていただきました。\nもし6への移行が上手くいきそうなら、今後そちらも記事にまとめたいと思います。というより誰か作って欲しいです(他力本願)。\n\n12月にサービス終了という事で、取り急ぎ分かってる範囲でまとめてみました。\n不明瞭で間違ってる部分もあると思われますが、あくまで参考程度にしていただけると幸いです。\n\nということで、皆様も良いMbedライフを！\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:53:28+09:00",
    "group": null,
    "id": "b053bc7ff2f28b3305f4",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "mbed", "versions": [] },
      { "name": "mbed-os", "versions": [] }
    ],
    "title": "Mbed Online CompilerからArm Keil Studioへの移行手順について",
    "updated_at": "2022-11-26T22:53:28+09:00",
    "url": "https://qiita.com/Udonge_hshs/items/b053bc7ff2f28b3305f4",
    "user": {
      "description": "南の島でロボコンやってます。よわよわです。後輩への技術継承や備忘録をしたためていきます。",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 6,
      "github_login_name": "ByakkoMatsumiya",
      "id": "Udonge_hshs",
      "items_count": 2,
      "linkedin_id": "",
      "location": "",
      "name": "Byakko Matsumiya",
      "organization": "沖縄工業高等専門学校　ロボット製作委員会",
      "permanent_id": 2727917,
      "profile_image_url": "https://pbs.twimg.com/profile_images/1512386801163730951/F1Bb1M2M_bigger.jpg",
      "team_only": false,
      "twitter_screen_name": "Udonge_hshs",
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"2:1-2:77\"\u003eYOLOを触ったことなかったので、YOLO v5を触ってみました。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"4:1-4:9\"\u003e\n\u003cspan id=\"参考\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考\u003c/h2\u003e\n\u003cp data-sourcepos=\"5:1-5:42\"\u003e２つの記事を参考にしました。\u003c/p\u003e\n\u003cp data-sourcepos=\"7:1-7:39\"\u003e\u003cqiita-embed-ogp src=\"https://laid-back-scientist.com/yolo-v5\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"9:1-9:38\"\u003e\u003cqiita-embed-ogp src=\"https://www.alpha.co.jp/blog/202108_02\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch2 data-sourcepos=\"11:1-11:21\"\u003e\n\u003cspan id=\"まずは動かす\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E5%8B%95%E3%81%8B%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまずは動かす\u003c/h2\u003e\n\u003cp data-sourcepos=\"12:1-12:87\"\u003eまずはYOLO v5lを使って、うちのネコ2匹を認識するか確認します。\u003c/p\u003e\n\u003cul data-sourcepos=\"13:1-19:0\"\u003e\n\u003cli data-sourcepos=\"13:1-14:126\"\u003e2匹ver.\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/ffe255d590f0f6f9388257ab454c260f3c5e83c8/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323631303330322f35386637383865622d346534392d626232652d303663652d6663323839353366656638632e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F58f788eb-4e49-bb2e-06ce-fc28953fef8c.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9f353247818de79575a6b137c54cd536\" alt=\"n_1 小.jpeg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/58f788eb-4e49-bb2e-06ce-fc28953fef8c.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F58f788eb-4e49-bb2e-06ce-fc28953fef8c.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=c2fe7b41a2927fa47e46a9cce03a4640 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"15:1-16:126\"\u003e1匹-1ver.\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/8916f67eecb21240c90ce8d4283a498d07196212/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323631303330322f36353531663766632d653830302d653165312d643161312d6363363161303965633964342e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F6551f7fc-e800-e1e1-d1a1-cc61a09ec9d4.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d8372deaa5fcb444cf1baeb82e3b00d2\" alt=\"n_2 小.jpeg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/6551f7fc-e800-e1e1-d1a1-cc61a09ec9d4.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F6551f7fc-e800-e1e1-d1a1-cc61a09ec9d4.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=214d43569470affa6f9d5990493dee0b 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"17:1-19:0\"\u003e1匹-2ver.\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/a8b5fb7cc9f042cd8445a2fb8f5a08a1525737a9/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323631303330322f66613539613231362d326434362d366439612d663965362d3634303739316234313061362e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2Ffa59a216-2d46-6d9a-f9e6-640791b410a6.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=fef09b9db790c861a99fbe799d00eb5a\" alt=\"n_3 小.jpeg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/fa59a216-2d46-6d9a-f9e6-640791b410a6.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2Ffa59a216-2d46-6d9a-f9e6-640791b410a6.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=d745628d494b50d3f0a96b8a072a7b07 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"20:1-20:140\"\u003e2枚目に2つ枠があって怪しい（違う何かと認識？？）ですが、とりあえずネコと認識してくれています。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"23:1-23:27\"\u003e\n\u003cspan id=\"学習させてみます\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AD%A6%E7%BF%92%E3%81%95%E3%81%9B%E3%81%A6%E3%81%BF%E3%81%BE%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e学習させてみます\u003c/h2\u003e\n\u003cp data-sourcepos=\"24:1-24:145\"\u003e全く別のものは認識してくれると思いますので、今回は2匹のネコをそれぞれ認識してくれるか確認します。\u003c/p\u003e\n\u003cp data-sourcepos=\"26:1-29:10\"\u003eでは、2匹のネコの名前で学習させます。\u003cbr\u003e\nTrain　50枚\u003cbr\u003e\nTest　5枚\u003cbr\u003e\nVal　5枚\u003c/p\u003e\n\u003cul data-sourcepos=\"31:1-39:0\"\u003e\n\u003cli data-sourcepos=\"31:1-32:126\"\u003e2匹ver.\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/9b1320176f782ea67cad89c59d4f97511758964c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323631303330322f66313865396532652d326137322d363239382d333631312d3530656166363437643866392e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2Ff18e9e2e-2a72-6298-3611-50eaf647d8f9.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=6aef1d3b782577430014315069d55c39\" alt=\"n_1 小.jpeg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/f18e9e2e-2a72-6298-3611-50eaf647d8f9.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2Ff18e9e2e-2a72-6298-3611-50eaf647d8f9.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=02d2692ce6b8a9f2eb07f31333435452 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"33:1-34:126\"\u003e1匹-1ver.\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/1b65a073de619e1cfad8a4156621d751fbc52ba4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323631303330322f31666662353333642d356361392d336331382d623732642d6366353239376337333536322e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F1ffb533d-5ca9-3c18-b72d-cf5297c73562.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=e2fe01fcd37bc349ca6492adc155ad1d\" alt=\"n_2 小.jpeg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/1ffb533d-5ca9-3c18-b72d-cf5297c73562.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F1ffb533d-5ca9-3c18-b72d-cf5297c73562.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=2b54d958fc7f57c282db425597ab911c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"35:1-39:0\"\u003e1匹-2ver.\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/7451df2bf5822ccac347e4a07504a4670413cb54/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323631303330322f34393538623065382d336164382d303531322d663665342d6632376361343761366261652e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F4958b0e8-3ad8-0512-f6e4-f27ca47a6bae.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=c118e126ad92302d45df9059200b9959\" alt=\"n_3 小.jpeg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/4958b0e8-3ad8-0512-f6e4-f27ca47a6bae.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2610302%2F4958b0e8-3ad8-0512-f6e4-f27ca47a6bae.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1f292b99aae91a963cd929aa61f08ec9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nネコであると同時にそれぞれの名前も認識してくれています。\u003cbr\u003e\n※3枚目の枠が2つあるけど、位置情報の設定間違えたかな・・・\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 data-sourcepos=\"40:1-40:11\"\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\u003cp data-sourcepos=\"41:1-42:138\"\u003eYOLO v5を触ってみましたが、学習までとても簡単に行えました。\u003cbr\u003e\nホコリを被っているラズパイを引っ張り出してネコ様悪巧み監視システムを作ってみようと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"44:1-44:30\"\u003eまたいつの日か・・・\u003c/p\u003e\n",
    "body": "# はじめに\nYOLOを触ったことなかったので、YOLO v5を触ってみました。\n\n## 参考\n２つの記事を参考にしました。\n\nhttps://laid-back-scientist.com/yolo-v5\n\nhttps://www.alpha.co.jp/blog/202108_02\n\n## まずは動かす\nまずはYOLO v5lを使って、うちのネコ2匹を認識するか確認します。\n* 2匹ver.\n![n_1 小.jpeg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/58f788eb-4e49-bb2e-06ce-fc28953fef8c.jpeg)\n* 1匹-1ver.\n![n_2 小.jpeg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/6551f7fc-e800-e1e1-d1a1-cc61a09ec9d4.jpeg)\n* 1匹-2ver.\n![n_3 小.jpeg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/fa59a216-2d46-6d9a-f9e6-640791b410a6.jpeg)\n\n2枚目に2つ枠があって怪しい（違う何かと認識？？）ですが、とりあえずネコと認識してくれています。\n\n\n## 学習させてみます\n全く別のものは認識してくれると思いますので、今回は2匹のネコをそれぞれ認識してくれるか確認します。\n\nでは、2匹のネコの名前で学習させます。\nTrain　50枚\nTest　5枚\nVal　5枚\n\n* 2匹ver.\n![n_1 小.jpeg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/f18e9e2e-2a72-6298-3611-50eaf647d8f9.jpeg)\n* 1匹-1ver.\n![n_2 小.jpeg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/1ffb533d-5ca9-3c18-b72d-cf5297c73562.jpeg)\n* 1匹-2ver.\n![n_3 小.jpeg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2610302/4958b0e8-3ad8-0512-f6e4-f27ca47a6bae.jpeg)\nネコであると同時にそれぞれの名前も認識してくれています。\n※3枚目の枠が2つあるけど、位置情報の設定間違えたかな・・・\n\n# まとめ\nYOLO v5を触ってみましたが、学習までとても簡単に行えました。\nホコリを被っているラズパイを引っ張り出してネコ様悪巧み監視システムを作ってみようと思います。\n\nまたいつの日か・・・\n\n\n\n\n\n\n\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:49:43+09:00",
    "group": null,
    "id": "4584a421ddb96c679c95",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "画像処理", "versions": [] },
      { "name": "機械学習", "versions": [] },
      { "name": "深層学習", "versions": [] },
      { "name": "物体検出", "versions": [] },
      { "name": "YOLO", "versions": [] }
    ],
    "title": "YOLOを触ってみた。",
    "updated_at": "2022-11-26T22:49:43+09:00",
    "url": "https://qiita.com/HIKARU_JY/items/4584a421ddb96c679c95",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 1,
      "followers_count": 0,
      "github_login_name": null,
      "id": "HIKARU_JY",
      "items_count": 4,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 2610302,
      "profile_image_url": "https://lh3.googleusercontent.com/a/AATXAJx6PbjHiT-o9ZrweasMbYmWKy2R26M8uAUJC30uYQ=s50-mo",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": null
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch2 data-sourcepos=\"1:1-1:18\"\u003e\n\u003cspan id=\"この記事は\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこの記事は\u003c/h2\u003e\n\u003cp data-sourcepos=\"3:1-3:262\"\u003eプライベートリポジトリをクローンするためのSSHの秘密鍵をSecretsに登録し、それを \u003ca href=\"https://github.com/docker/build-push-action\" rel=\"nofollow noopener\" target=\"_blank\"\u003edocker/build-pusht-actions\u003c/a\u003e で利用してコンテナをビルド・プッシュする方法です。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"5:1-5:15\"\u003e\n\u003cspan id=\"参考記事\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E8%A8%98%E4%BA%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考記事\u003c/h2\u003e\n\u003cp data-sourcepos=\"7:1-7:177\"\u003eGitHub Actionsのワークフローでプライベートリポジトリをクローンするよう方法やsecretsへの登録は以下の記事を参考にしてください。\u003c/p\u003e\n\u003col data-sourcepos=\"9:1-12:0\"\u003e\n\u003cli data-sourcepos=\"9:1-9:174\"\u003e\u003ca href=\"https://qiita.com/u_nation/items/8ff79a9831c05f3f1d1d#ssh%E6%96%B9%E5%BC%8F\" id=\"reference-3f8babb429f0aab5261b\"\u003eGithubActionsでプライベートリポジトリをsubmoduleとして取り込む#ssh方式\u003c/a\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"10:1-10:126\"\u003e\u003ca href=\"https://qiita.com/toyama0919/items/190eb19298e523094ba2\" id=\"reference-0b63568ed4d12764674c\"\u003edocker buildする際にhost側のssh keyを使ってbuildする\u003c/a\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"11:1-12:0\"\u003e\u003ca href=\"https://qiita.com/elyunim26/items/02a4f14bdf99874d8c16\" id=\"reference-a5d5d84d0199c1e36f91\"\u003eGitHub Actionsでビルドするコンテナ内でGitHubのprivate repositoryをセキュアに参照する\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp data-sourcepos=\"13:1-14:67\"\u003e3つ目の記事とやりたいことはほぼ同じですが、docker buildを独自ステップとして実装されています。\u003cbr\u003e\n今回はこれを \u003ccode\u003edocker/build-push-action\u003c/code\u003e で実現します。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"16:1-16:118\"\u003e\n\u003cspan id=\"dockerbuild-push-action-でホストのssh鍵を利用してプライベートリポジトリにアクセスする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#dockerbuild-push-action-%E3%81%A7%E3%83%9B%E3%82%B9%E3%83%88%E3%81%AEssh%E9%8D%B5%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003edocker/build-push-action でホストのSSH鍵を利用してプライベートリポジトリにアクセスする\u003c/h2\u003e\n\u003cp data-sourcepos=\"18:1-18:96\"\u003e\u003ca href=\"https://github.com/docker/build-push-action#customizing\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/docker/build-push-action#customizing\u003c/a\u003e の \u003ccode\u003essh: default\u003c/code\u003e を利用します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"20:1-26:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e     \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edocker/build-push-action@v3\u003c/span\u003e\n        \u003cspan class=\"s\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epush\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n          \u003cspan class=\"na\"\u003etags\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest\u003c/span\u003e\n          \u003cspan class=\"na\"\u003essh\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"28:1-28:116\"\u003eただし、このままでは \u003ccode\u003eSSH_AUTH_SOCK\u003c/code\u003e がない旨のエラーになり秘密鍵を共有できません。\u003c/p\u003e\n\u003cp data-sourcepos=\"30:1-32:144\"\u003e事前にSSHエージェントを起動、 \u003ccode\u003essh-add\u003c/code\u003e しておき、\u003ccode\u003edocker/build-push-action\u003c/code\u003e から参照できるようにしておく必要があります。\u003cbr\u003e\n\u003ccode\u003eeval $(ssh-agent -s)\u003c/code\u003e することでSSHエージェントが起動し \u003ccode\u003eSSH_AUTH_SOCK\u003c/code\u003e が設定されます。\u003cbr\u003e\nこれを環境変数に設定(GITHUB_ENVに追加)することで \u003ccode\u003ebuild-push-action\u003c/code\u003e のステップでも利用できるようにします。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"34:1-45:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eSet ENV for docker build\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eenv\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003eTOKEN\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ secrets.TOKEN }}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n          \u003cspan class=\"s\"\u003emkdir -p ~/.ssh\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eecho \"$TOKEN\" \u0026gt; ~/.ssh/id_rsa\u003c/span\u003e\n          \u003cspan class=\"s\"\u003echmod 600 ~/.ssh/id_rsa\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eeval $(ssh-agent -s)\u003c/span\u003e\n          \u003cspan class=\"s\"\u003essh-add ~/.ssh/id_rsa\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eecho \"SSH_AUTH_SOCK=$SSH_AUTH_SOCK\" \u0026gt;\u0026gt; $GITHUB_ENV\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"47:1-47:109\"\u003e共有された秘密鍵を利用してgit cloneする場合、Dockerfileでは以下のようにします。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"dockerfile\" data-sourcepos=\"49:1-51:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eRUN \u003c/span\u003e\u003cspan class=\"nt\"\u003e--mount\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003essh git clone xxx\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch2 data-sourcepos=\"53:1-53:65\"\u003e\n\u003cspan id=\"aws-ecrにcdするgithub-actionsワークフローサンプル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#aws-ecr%E3%81%ABcd%E3%81%99%E3%82%8Bgithub-actions%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eAWS ECRにCDするGitHub Actionsワークフローサンプル\u003c/h2\u003e\n\u003cp data-sourcepos=\"55:1-56:51\"\u003eメインブランチが更新され、CIが成功した場合にECRに向けたCDを走らせる例です。\u003cbr\u003e\nビルドキャッシュも利用しています。\u003c/p\u003e\n\u003cp data-sourcepos=\"58:1-58:142\"\u003eECRにプッシュするため事前にECRログインが必要なので、そのためのAWS CredentialsもSecretsに登録しています。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"60:1-120:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\n\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003ecd\u003c/span\u003e\n\u003cspan class=\"na\"\u003eon\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eworkflow_dispatch\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eworkflow_run\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eworkflows\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003eci\"\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebranches\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003emain\u003c/span\u003e\n    \u003cspan class=\"na\"\u003etypes\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"s\"\u003ecompleted\"\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003eenv\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003eECR_REPOSITORY\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eogawatti/test\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003ejobs\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ebuild-and-deploy\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eruns-on\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eubuntu-latest\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eif\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ github.event.workflow_run.conclusion == 'success' }}\u003c/span\u003e\n    \u003cspan class=\"na\"\u003esteps\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/checkout@v3\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edocker/setup-buildx-action@v1\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eactions/cache@v2\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e/tmp/.buildx-cache\u003c/span\u003e\n          \u003cspan class=\"na\"\u003ekey\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ runner.os }}-buildx-${{ github.sha }}\u003c/span\u003e\n          \u003cspan class=\"na\"\u003erestore-keys\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n            \u003cspan class=\"s\"\u003e${{ runner.os }}-buildx-\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eSet ENV for docker build\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eenv\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003eTOKEN\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ secrets.TOKEN }}\u003c/span\u003e\n        \u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n          \u003cspan class=\"s\"\u003emkdir -p ~/.ssh\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eecho \"$TOKEN\" \u0026gt; ~/.ssh/id_rsa\u003c/span\u003e\n          \u003cspan class=\"s\"\u003echmod 600 ~/.ssh/id_rsa\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eeval $(ssh-agent -s)\u003c/span\u003e\n          \u003cspan class=\"s\"\u003essh-add ~/.ssh/id_rsa\u003c/span\u003e\n          \u003cspan class=\"s\"\u003eecho \"SSH_AUTH_SOCK=$SSH_AUTH_SOCK\" \u0026gt;\u0026gt; $GITHUB_ENV\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eConfigure AWS Credentials\u003c/span\u003e\n        \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eaws-actions/configure-aws-credentials@v1\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003eaws-access-key-id\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ secrets.AWS_ACCESS_KEY_ID }}\u003c/span\u003e\n          \u003cspan class=\"na\"\u003eaws-secret-access-key\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ secrets.AWS_SECRET_ACCESS_KEY }}\u003c/span\u003e\n          \u003cspan class=\"na\"\u003eaws-region\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eap-northeast-1\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eLogin to Amazon ECR\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eid\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003elogin-ecr\u003c/span\u003e\n        \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eaws-actions/amazon-ecr-login@v1\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003euses\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edocker/build-push-action@v3\u003c/span\u003e\n        \u003cspan class=\"na\"\u003ewith\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n          \u003cspan class=\"na\"\u003epush\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"no\"\u003etrue\u003c/span\u003e\n          \u003cspan class=\"na\"\u003etags\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest\u003c/span\u003e\n          \u003cspan class=\"na\"\u003essh\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003edefault\u003c/span\u003e\n          \u003cspan class=\"na\"\u003ecache-from\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etype=local,src=/tmp/.buildx-cache\u003c/span\u003e\n          \u003cspan class=\"na\"\u003ecache-to\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003etype=local,dest=/tmp/.buildx-cache-new,mode=max\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eMove cache\u003c/span\u003e\n        \u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"pi\"\u003e|\u003c/span\u003e\n          \u003cspan class=\"s\"\u003erm -rf /tmp/.buildx-cache\u003c/span\u003e\n          \u003cspan class=\"s\"\u003emv /tmp/.buildx-cache-new /tmp/.buildx-cache\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch2 data-sourcepos=\"122:1-122:21\"\u003e\n\u003cspan id=\"ハマりどころ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%8F%E3%83%9E%E3%82%8A%E3%81%A9%E3%81%93%E3%82%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eハマりどころ\u003c/h2\u003e\n\u003cp data-sourcepos=\"124:1-125:124\"\u003eステップ内では \u003ccode\u003e***\u003c/code\u003e のように秘匿してくれますが、これを \u003ccode\u003eENV\u003c/code\u003e や  \u003ccode\u003ebuild-args\u003c/code\u003e 等でビルドに渡すことはできません。\u003cbr\u003e\n正確には、改行付きのSecretsを渡した場合に中身がどうなっているかが分かりませんでした。\u003c/p\u003e\n\u003cp data-sourcepos=\"127:1-127:274\"\u003eビルド中にコンテナ内で書き出した秘密鍵を \u003ccode\u003essh-add\u003c/code\u003e しようとしても \u003ccode\u003einvalid format\u003c/code\u003e になってしまい、 \u003ccode\u003ehead\u003c/code\u003e 等で確認しようにも、書き出された値が空だったり秘匿されていたりでデバッグがかなり苦しい。\u003c/p\u003e\n\u003cp data-sourcepos=\"129:1-129:179\"\u003eローカルでのビルドでは \u003ccode\u003ebuild-args\u003c/code\u003e を利用していたためそちらの方向で考えていましたが断念し、正攻法(?)で行くことになりました。\u003c/p\u003e\n",
    "body": "## この記事は\n\nプライベートリポジトリをクローンするためのSSHの秘密鍵をSecretsに登録し、それを [docker/build-pusht-actions](https://github.com/docker/build-push-action) で利用してコンテナをビルド・プッシュする方法です。\n\n## 参考記事\n\nGitHub Actionsのワークフローでプライベートリポジトリをクローンするよう方法やsecretsへの登録は以下の記事を参考にしてください。\n\n1. [GithubActionsでプライベートリポジトリをsubmoduleとして取り込む#ssh方式](https://qiita.com/u_nation/items/8ff79a9831c05f3f1d1d#ssh%E6%96%B9%E5%BC%8F)\n2. [docker buildする際にhost側のssh keyを使ってbuildする](https://qiita.com/toyama0919/items/190eb19298e523094ba2)\n3. [GitHub Actionsでビルドするコンテナ内でGitHubのprivate repositoryをセキュアに参照する](https://qiita.com/elyunim26/items/02a4f14bdf99874d8c16)\n\n3つ目の記事とやりたいことはほぼ同じですが、docker buildを独自ステップとして実装されています。\n今回はこれを `docker/build-push-action` で実現します。\n\n## docker/build-push-action でホストのSSH鍵を利用してプライベートリポジトリにアクセスする\n\nhttps://github.com/docker/build-push-action#customizing の `ssh: default` を利用します。\n\n```yaml\n     - uses: docker/build-push-action@v3\n        with:\n          push: true\n          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest\n          ssh: default\n```\n\nただし、このままでは `SSH_AUTH_SOCK` がない旨のエラーになり秘密鍵を共有できません。\n\n事前にSSHエージェントを起動、 `ssh-add` しておき、`docker/build-push-action` から参照できるようにしておく必要があります。\n`eval $(ssh-agent -s)` することでSSHエージェントが起動し `SSH_AUTH_SOCK` が設定されます。\nこれを環境変数に設定(GITHUB_ENVに追加)することで `build-push-action` のステップでも利用できるようにします。\n\n```yaml\n      - name: Set ENV for docker build\n        env:\n          TOKEN: ${{ secrets.TOKEN }}\n        run: |\n          mkdir -p ~/.ssh\n          echo \"$TOKEN\" \u003e ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          eval $(ssh-agent -s)\n          ssh-add ~/.ssh/id_rsa\n          echo \"SSH_AUTH_SOCK=$SSH_AUTH_SOCK\" \u003e\u003e $GITHUB_ENV\n```\n\n共有された秘密鍵を利用してgit cloneする場合、Dockerfileでは以下のようにします。\n\n```dockerfile\nRUN --mount=type=ssh git clone xxx\n```\n\n## AWS ECRにCDするGitHub Actionsワークフローサンプル\n\nメインブランチが更新され、CIが成功した場合にECRに向けたCDを走らせる例です。\nビルドキャッシュも利用しています。\n\nECRにプッシュするため事前にECRログインが必要なので、そのためのAWS CredentialsもSecretsに登録しています。\n\n```yaml\n---\nname: cd\non:\n  workflow_dispatch:\n  workflow_run:\n    workflows:\n      - \"ci\"\n    branches:\n      - main\n    types:\n      - \"completed\"\n\nenv:\n  ECR_REPOSITORY: ogawatti/test\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    if: ${{ github.event.workflow_run.conclusion == 'success' }}\n    steps:\n      - uses: actions/checkout@v3\n      - uses: docker/setup-buildx-action@v1\n      - uses: actions/cache@v2\n        with:\n          path: /tmp/.buildx-cache\n          key: ${{ runner.os }}-buildx-${{ github.sha }}\n          restore-keys: |\n            ${{ runner.os }}-buildx-\n      - name: Set ENV for docker build\n        env:\n          TOKEN: ${{ secrets.TOKEN }}\n        run: |\n          mkdir -p ~/.ssh\n          echo \"$TOKEN\" \u003e ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          eval $(ssh-agent -s)\n          ssh-add ~/.ssh/id_rsa\n          echo \"SSH_AUTH_SOCK=$SSH_AUTH_SOCK\" \u003e\u003e $GITHUB_ENV\n      - name: Configure AWS Credentials\n        uses: aws-actions/configure-aws-credentials@v1\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: ap-northeast-1\n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v1\n      - uses: docker/build-push-action@v3\n        with:\n          push: true\n          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest\n          ssh: default\n          cache-from: type=local,src=/tmp/.buildx-cache\n          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max\n      - name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n\n```\n\n## ハマりどころ\n\nステップ内では `***` のように秘匿してくれますが、これを `ENV` や  `build-args` 等でビルドに渡すことはできません。\n正確には、改行付きのSecretsを渡した場合に中身がどうなっているかが分かりませんでした。\n\nビルド中にコンテナ内で書き出した秘密鍵を `ssh-add` しようとしても `invalid format` になってしまい、 `head` 等で確認しようにも、書き出された値が空だったり秘匿されていたりでデバッグがかなり苦しい。\n\nローカルでのビルドでは `build-args` を利用していたためそちらの方向で考えていましたが断念し、正攻法(?)で行くことになりました。\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:36:59+09:00",
    "group": null,
    "id": "3fffe4728d19c82835d2",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Docker", "versions": [] },
      { "name": "GitHubActions", "versions": [] },
      { "name": "build-push-action", "versions": [] }
    ],
    "title": "GitHub Actionsでdocker/build-push-actionを利用してプライベートリポジトリをcloneする",
    "updated_at": "2022-11-26T22:36:59+09:00",
    "url": "https://qiita.com/ogawatti/items/3fffe4728d19c82835d2",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 20,
      "followers_count": 32,
      "github_login_name": "ogawatti",
      "id": "ogawatti",
      "items_count": 60,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 17647,
      "profile_image_url": "https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/17647/profile-images/1664754141",
      "team_only": false,
      "twitter_screen_name": "makotonality",
      "website_url": "https://github.com/ogawatti"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"2:1-2:29\"\u003e\n\u003cspan id=\"製作に至るきっかけ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A3%BD%E4%BD%9C%E3%81%AB%E8%87%B3%E3%82%8B%E3%81%8D%E3%81%A3%E3%81%8B%E3%81%91\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e製作に至るきっかけ\u003c/h1\u003e\n\u003cp data-sourcepos=\"3:1-3:152\"\u003eRaspberry Pi PICOをデジタルオシロスコープにできるソフトウエアを見つけました。ロジアナの機能も持っています。\u003c/p\u003e\n\u003cp data-sourcepos=\"5:1-5:74\"\u003e\u003ca href=\"https://oscilloscope.fhdm.xyz/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eScoppy - Oscilloscope and Logic Analyzer\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"7:1-9:336\"\u003eちょうどPICOを入手してはいたものの、何に使おうかと迷っていたところでしたので、早速試してみました。\u003cbr\u003e\nこれはなかなか優れたもので、スマホのアプリと連携して利用できるものです。\u003cbr\u003e\nこれまで電子工作のお供には中華製の格安DSOとUSBのロジアナを使っていましたが、この際、こちらに乗り換えたいなと思い、ちょっと不足する部分を補う意味で、前段のアナログアンプ機能、ロジアナ用のバッファー機能を製作することにしました。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"11:1-11:17\"\u003e\n\u003cspan id=\"コンセプト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%82%BB%E3%83%97%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンセプト\u003c/h1\u003e\n\u003cp data-sourcepos=\"13:1-13:78\"\u003eフロントエンドのサンプルはこちらに公開されています。\u003c/p\u003e\n\u003cp data-sourcepos=\"15:1-15:89\"\u003e\u003ca href=\"https://oscilloscope.fhdm.xyz/wiki/Analog-Front-End-Examples\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAnalog Front-End Examples\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"17:1-19:224\"\u003e上記の例では、高い電圧を分圧して、読み取ることを可能にするものがほとんどのようです。\u003cbr\u003e\nあまり高い電圧を使うこともないので、せっかくなのでゲインのあるアンプを前段に置くことにします。\u003cbr\u003e\n以下のGPIOピンを見ると各チャンネルが2\u0026amp;3と4\u0026amp;5でゲインの切り替えに対応していることがわかります、ということで、ゲインを4段階に切り替えるアンプを準備します。\u003c/p\u003e\n\u003cp data-sourcepos=\"21:1-21:54\"\u003e\u003ca href=\"https://oscilloscope.fhdm.xyz/wiki/GPIOs\" rel=\"nofollow noopener\" target=\"_blank\"\u003ePico GPIOs\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"23:1-23:129\"\u003eロジアナのバッファーはおまけ程度ですが、3.3Vと5Vの両方に対応したものにしたいと思います。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"26:1-26:8\"\u003e\n\u003cspan id=\"設計\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A8%AD%E8%A8%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e設計\u003c/h1\u003e\n\u003cp data-sourcepos=\"28:1-31:122\"\u003e構想としてはこういう感じです。\u003cbr\u003e\nゲインの切り替えは押しボタンスイッチで順次切り替えることにします、プログラマブルアンプを利用して、ゲインを設定します。\u003cbr\u003e\nこの部分のコントロール用にPICを準備して簡単な制御を実現します。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/8a29f3a9d317caa4ffa4fa79e743ea8316975967/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f313031353936392f66323964346532622d616564302d613465362d643237632d3032646566623531353532332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1015969%2Ff29d4e2b-aed0-a4e6-d27c-02defb515523.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=34538b3e6332dc50bbf7bc45fb7c3afb\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1015969/f29d4e2b-aed0-a4e6-d27c-02defb515523.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1015969%2Ff29d4e2b-aed0-a4e6-d27c-02defb515523.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=2033f654f31285527092ced6f93d79ff 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 data-sourcepos=\"34:1-34:21\"\u003e\n\u003cspan id=\"ハードウエア\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%8F%E3%83%BC%E3%83%89%E3%82%A6%E3%82%A8%E3%82%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eハードウエア\u003c/h2\u003e\n\u003cp data-sourcepos=\"36:1-37:132\"\u003e主要な部品は以下の通りです。\u003cbr\u003e\nPIC以外は秋月電子で入手できます。PICは必要なピン数があれば、ほかの型番でも問題ありません。\u003c/p\u003e\n\u003cul data-sourcepos=\"39:1-45:0\"\u003e\n\u003cli data-sourcepos=\"39:1-39:31\"\u003eバッファアンプ MCP6022\u003c/li\u003e\n\u003cli data-sourcepos=\"40:1-40:49\"\u003eプログラマブルゲインアンプ MCP6S21\u003c/li\u003e\n\u003cli data-sourcepos=\"41:1-41:49\"\u003e仮想グラウンド用オペアンプ AD8656\u003c/li\u003e\n\u003cli data-sourcepos=\"42:1-42:56\"\u003eアナログ電源用レギュレータ ADP151AUJZ-3.3\u003c/li\u003e\n\u003cli data-sourcepos=\"43:1-43:140\"\u003eレベルコンバーター AE-LLCNV8-DIP20(８ビット双方向ロジックレベル変換ブレークアウトモジュールキット)\u003c/li\u003e\n\u003cli data-sourcepos=\"44:1-45:0\"\u003ePIC 16F1503\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"46:1-47:122\"\u003e回路図はこちらになります。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/8e511c1f2ac2765f855dd1d12660473f82f93ede/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f313031353936392f32313538313434312d343739662d626430302d303038612d3533306164356263383433312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1015969%2F21581441-479f-bd00-008a-530ad5bc8431.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=1d0a53e462d3331676d4e253935e8825\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1015969/21581441-479f-bd00-008a-530ad5bc8431.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1015969%2F21581441-479f-bd00-008a-530ad5bc8431.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=bb7c6b7a1b35a2947d4898f276b49cc9 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 data-sourcepos=\"50:1-50:21\"\u003e\n\u003cspan id=\"ソフトウエア\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A8%E3%82%A2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eソフトウエア\u003c/h2\u003e\n\u003cp data-sourcepos=\"52:1-53:193\"\u003ePICの部分のソフトを作りました。\u003cbr\u003e\n押しボタンスイッチを押した時に割り込みを発生させ、順次SPIでプログラマブルアンプのゲインとPICOへの電圧設定ピンを切り替えていきます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"55:1-194:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e#include \"mcc_generated_files/mcc.h\"\n\n\nint amp1=0;\nint amp2=0;\n\nvoid SPICmd1(unsigned char adrs,unsigned char data)\n{\n    SPI_Open(SPI_DEFAULT);\n    IO_RA2_SetLow();\n    SPI_ExchangeByte(adrs);\n    SPI_ExchangeByte(data);\n    SPI_Close();\n    IO_RA2_SetHigh();\n}\n\nvoid SPICmd2(unsigned char adrs,unsigned char data)\n{\n    SPI_Open(SPI_DEFAULT);\n    IO_RC3_SetLow();\n    SPI_ExchangeByte(adrs);\n    SPI_ExchangeByte(data);\n    SPI_Close();\n    IO_RC3_SetHigh();\n}\n\nvoid BUTTON_1(void)\n{\n    unsigned char gain;    \n    // increment amp variable\n    amp1++;\n    amp1\u0026amp;=0b11;\n    // set amp gain 00=x1,01=x5,10=x10,11=x32\n    \n    // set multiplier to PICO\n    IO_RA5_PORT=amp1 \u0026amp; 0b1;\n    IO_RA4_PORT=(amp1 \u0026gt;\u0026gt;1) \u0026amp; 0b1;\n    //IO_RC0_Toggle();\n    \n    if (amp1 ==0) \n    {\n        gain=0;\n    } else \n    {\n        gain=((unsigned char)amp1\u0026lt;\u0026lt;1) | 1;\n    }\n    SPICmd1(0b01000000,gain);\n    \n    // wait a while (to avoid chataling)\n    DELAY_milliseconds(10);\n    while(IO_RA0_GetValue() ==0){}\n    DELAY_milliseconds(10);\n}\n\nvoid BUTTON_2(void)\n{\n    unsigned char gain;    \n    \n    // increment amp variable\n    amp2++;\n    amp2\u0026amp;=0b11;\n    // set amp gain\n    \n// set multiplier to PICO\n    IO_RC5_PORT=amp2 \u0026amp; 0b1;\n    IO_RC4_PORT=(amp2 \u0026gt;\u0026gt;1) \u0026amp; 0b1;\n    \n    \n    if (amp2 ==0) \n    {\n        gain=0;\n    } else \n    {\n        gain=((unsigned char)amp2\u0026lt;\u0026lt;1) | 1;\n    }\n    SPICmd2(0b01000000,gain);\n    \n    \n    // wait a while (to avoid chataling)\n    DELAY_milliseconds(10);\n    while(IO_RA1_GetValue() ==0){}\n    DELAY_milliseconds(10);\n}\n\n/*\n                         Main application\n */\nvoid main(void)\n{\n    // initialize the device\n    SYSTEM_Initialize();\n\n    // When using interrupts, you need to set the Global and Peripheral Interrupt Enable bits\n    // Use the following macros to:\n    IOCAF0_SetInterruptHandler(BUTTON_1);\n    IOCAF1_SetInterruptHandler(BUTTON_2);\n\n    // Enable the Global Interrupts\n    INTERRUPT_GlobalInterruptEnable();\n\n    // Enable the Peripheral Interrupts\n    INTERRUPT_PeripheralInterruptEnable();\n\n    // Disable the Global Interrupts\n    //INTERRUPT_GlobalInterruptDisable();\n\n    // Disable the Peripheral Interrupts\n    //INTERRUPT_PeripheralInterruptDisable();\n    \n    // Set initial state of RC port\n\n    //Set all low PICO div output\n    IO_RA4_SetLow();\n    IO_RA5_SetLow();\n    IO_RC4_SetLow();\n    IO_RC5_SetLow();\n\n    // SPI CS port set as HIGH\n    IO_RA2_SetHigh();\n    IO_RC3_SetHigh();\n            \n        \n    while (1)\n    {\n        // Add your application code\n        /*\n        if(IO_RA0_GetValue() ==0)\n        {\n            BUTTON_1();\n        }\n        if(IO_RA1_GetValue() ==0)\n        {\n            BUTTON_2();\n        }\n         */\n        SLEEP();\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"196:1-196:99\"\u003eと、ここまでを一度ブレッドボード上で実現して、動作を確認しました。\u003c/p\u003e\n\u003cp data-sourcepos=\"198:1-198:96\"\u003e今回はプリント基板を発注して製作しましたので、製作編に続きます。\u003c/p\u003e\n",
    "body": "\n# 製作に至るきっかけ\nRaspberry Pi PICOをデジタルオシロスコープにできるソフトウエアを見つけました。ロジアナの機能も持っています。\n\n[Scoppy - Oscilloscope and Logic Analyzer](https://oscilloscope.fhdm.xyz/)\n\nちょうどPICOを入手してはいたものの、何に使おうかと迷っていたところでしたので、早速試してみました。\nこれはなかなか優れたもので、スマホのアプリと連携して利用できるものです。\nこれまで電子工作のお供には中華製の格安DSOとUSBのロジアナを使っていましたが、この際、こちらに乗り換えたいなと思い、ちょっと不足する部分を補う意味で、前段のアナログアンプ機能、ロジアナ用のバッファー機能を製作することにしました。\n\n# コンセプト\n\nフロントエンドのサンプルはこちらに公開されています。\n\n[Analog Front-End Examples](https://oscilloscope.fhdm.xyz/wiki/Analog-Front-End-Examples)\n\n上記の例では、高い電圧を分圧して、読み取ることを可能にするものがほとんどのようです。\nあまり高い電圧を使うこともないので、せっかくなのでゲインのあるアンプを前段に置くことにします。\n以下のGPIOピンを見ると各チャンネルが2\u00263と4\u00265でゲインの切り替えに対応していることがわかります、ということで、ゲインを4段階に切り替えるアンプを準備します。\n\n[Pico GPIOs](https://oscilloscope.fhdm.xyz/wiki/GPIOs)\n\nロジアナのバッファーはおまけ程度ですが、3.3Vと5Vの両方に対応したものにしたいと思います。\n\n\n# 設計\n\n構想としてはこういう感じです。\nゲインの切り替えは押しボタンスイッチで順次切り替えることにします、プログラマブルアンプを利用して、ゲインを設定します。\nこの部分のコントロール用にPICを準備して簡単な制御を実現します。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1015969/f29d4e2b-aed0-a4e6-d27c-02defb515523.png)\n\n\n## ハードウエア\n\n主要な部品は以下の通りです。\nPIC以外は秋月電子で入手できます。PICは必要なピン数があれば、ほかの型番でも問題ありません。\n\n* バッファアンプ MCP6022\n* プログラマブルゲインアンプ MCP6S21\n* 仮想グラウンド用オペアンプ AD8656 \n* アナログ電源用レギュレータ ADP151AUJZ-3.3\n* レベルコンバーター AE-LLCNV8-DIP20(８ビット双方向ロジックレベル変換ブレークアウトモジュールキット)\n* PIC 16F1503\n\n回路図はこちらになります。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1015969/21581441-479f-bd00-008a-530ad5bc8431.png)\n\n\n## ソフトウエア\n\nPICの部分のソフトを作りました。\n押しボタンスイッチを押した時に割り込みを発生させ、順次SPIでプログラマブルアンプのゲインとPICOへの電圧設定ピンを切り替えていきます。\n\n```\n#include \"mcc_generated_files/mcc.h\"\n\n\nint amp1=0;\nint amp2=0;\n\nvoid SPICmd1(unsigned char adrs,unsigned char data)\n{\n    SPI_Open(SPI_DEFAULT);\n    IO_RA2_SetLow();\n    SPI_ExchangeByte(adrs);\n    SPI_ExchangeByte(data);\n    SPI_Close();\n    IO_RA2_SetHigh();\n}\n\nvoid SPICmd2(unsigned char adrs,unsigned char data)\n{\n    SPI_Open(SPI_DEFAULT);\n    IO_RC3_SetLow();\n    SPI_ExchangeByte(adrs);\n    SPI_ExchangeByte(data);\n    SPI_Close();\n    IO_RC3_SetHigh();\n}\n\nvoid BUTTON_1(void)\n{\n    unsigned char gain;    \n    // increment amp variable\n    amp1++;\n    amp1\u0026=0b11;\n    // set amp gain 00=x1,01=x5,10=x10,11=x32\n    \n    // set multiplier to PICO\n    IO_RA5_PORT=amp1 \u0026 0b1;\n    IO_RA4_PORT=(amp1 \u003e\u003e1) \u0026 0b1;\n    //IO_RC0_Toggle();\n    \n    if (amp1 ==0) \n    {\n        gain=0;\n    } else \n    {\n        gain=((unsigned char)amp1\u003c\u003c1) | 1;\n    }\n    SPICmd1(0b01000000,gain);\n    \n    // wait a while (to avoid chataling)\n    DELAY_milliseconds(10);\n    while(IO_RA0_GetValue() ==0){}\n    DELAY_milliseconds(10);\n}\n\nvoid BUTTON_2(void)\n{\n    unsigned char gain;    \n    \n    // increment amp variable\n    amp2++;\n    amp2\u0026=0b11;\n    // set amp gain\n    \n// set multiplier to PICO\n    IO_RC5_PORT=amp2 \u0026 0b1;\n    IO_RC4_PORT=(amp2 \u003e\u003e1) \u0026 0b1;\n    \n    \n    if (amp2 ==0) \n    {\n        gain=0;\n    } else \n    {\n        gain=((unsigned char)amp2\u003c\u003c1) | 1;\n    }\n    SPICmd2(0b01000000,gain);\n    \n    \n    // wait a while (to avoid chataling)\n    DELAY_milliseconds(10);\n    while(IO_RA1_GetValue() ==0){}\n    DELAY_milliseconds(10);\n}\n\n/*\n                         Main application\n */\nvoid main(void)\n{\n    // initialize the device\n    SYSTEM_Initialize();\n\n    // When using interrupts, you need to set the Global and Peripheral Interrupt Enable bits\n    // Use the following macros to:\n    IOCAF0_SetInterruptHandler(BUTTON_1);\n    IOCAF1_SetInterruptHandler(BUTTON_2);\n\n    // Enable the Global Interrupts\n    INTERRUPT_GlobalInterruptEnable();\n\n    // Enable the Peripheral Interrupts\n    INTERRUPT_PeripheralInterruptEnable();\n\n    // Disable the Global Interrupts\n    //INTERRUPT_GlobalInterruptDisable();\n\n    // Disable the Peripheral Interrupts\n    //INTERRUPT_PeripheralInterruptDisable();\n    \n    // Set initial state of RC port\n\n    //Set all low PICO div output\n    IO_RA4_SetLow();\n    IO_RA5_SetLow();\n    IO_RC4_SetLow();\n    IO_RC5_SetLow();\n\n    // SPI CS port set as HIGH\n    IO_RA2_SetHigh();\n    IO_RC3_SetHigh();\n            \n        \n    while (1)\n    {\n        // Add your application code\n        /*\n        if(IO_RA0_GetValue() ==0)\n        {\n            BUTTON_1();\n        }\n        if(IO_RA1_GetValue() ==0)\n        {\n            BUTTON_2();\n        }\n         */\n        SLEEP();\n    }\n}\n```\n\nと、ここまでを一度ブレッドボード上で実現して、動作を確認しました。\n\n今回はプリント基板を発注して製作しましたので、製作編に続きます。\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:28:31+09:00",
    "group": null,
    "id": "adc04e14020cc617a501",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "オシロスコープ", "versions": [] },
      { "name": "RaspberryPiPico", "versions": [] }
    ],
    "title": "Raspberry pi PICO デジタルオシロスコープ用フロントエンド　設計編",
    "updated_at": "2022-11-26T22:28:31+09:00",
    "url": "https://qiita.com/keitanak/items/adc04e14020cc617a501",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": null,
      "id": "keitanak",
      "items_count": 4,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 1015969,
      "profile_image_url": "https://lh5.googleusercontent.com/-gIKlUOqVHLM/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuck7AeLClTcDjFI23QBffF25BM-pYQ/s50/photo.jpg",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"3:1-5:65\"\u003eなんかサービス作るときに、DBどうする問題があると思います\u003cbr\u003e\nクラウドのDBはなかなかお高くて、低コストで運用したいなと思ったときに困ったので調べてました\u003cbr\u003e\n結果、Supabaseがよさそうだったので使ってみます\u003c/p\u003e\n\u003cp data-sourcepos=\"7:1-7:183\"\u003e単純にDBだけならPlanetScaleのほうが無料枠が充実していてよいかと思ったけど、ユーザ認証など今後も見据えてSupabaseをチョイスしました\u003c/p\u003e\n\u003cp data-sourcepos=\"9:1-9:77\"\u003e今回は、RailsからSupabaseのPostgreSQLに接続してみます \u003cimg alt=\":smile:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f604.png\" title=\":smile:\" width=\"20\" loading=\"lazy\"\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"11:1-11:21\"\u003e\u003cqiita-embed-ogp src=\"https://supabase.com/\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"13:1-13:24\"\u003e\u003cqiita-embed-ogp src=\"https://planetscale.com/\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"15:1-15:8\"\u003e\n\u003cspan id=\"環境\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%92%B0%E5%A2%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e環境\u003c/h1\u003e\n\u003cp data-sourcepos=\"16:1-17:17\"\u003eRails v7.0.4\u003cbr\u003e\nSupabase Postgres\u003c/p\u003e\n\u003ch1 data-sourcepos=\"19:1-19:18\"\u003e\n\u003cspan id=\"supabase-sing-up\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#supabase-sing-up\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSupabase Sing up\u003c/h1\u003e\n\u003cp data-sourcepos=\"20:1-20:68\"\u003eGitHubのアカウントがある人はGitHub認証すればOKです\u003c/p\u003e\n\u003ch1 data-sourcepos=\"22:1-22:25\"\u003e\n\u003cspan id=\"supabase-create-project\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#supabase-create-project\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSupabase Create Project\u003c/h1\u003e\n\u003ch2 data-sourcepos=\"23:1-23:28\"\u003e\n\u003cspan id=\"projectを作成します\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#project%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%BE%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eProjectを作成します\u003c/h2\u003e\n\u003cp data-sourcepos=\"25:1-27:99\"\u003eProject名はお好きな名前を入力\u003cbr\u003e\nDBのパスワードは、\u003ccode\u003eGenerate a password\u003c/code\u003eリンクをクリックしたら作ってくれます\u003cbr\u003e\nパスワード忘れちゃっても、あとでリセットできるので大丈夫です \u003cimg alt=\":smile:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f604.png\" title=\":smile:\" width=\"20\" loading=\"lazy\"\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"29:1-30:122\"\u003eリージョンはOriginがどこにあるかで決めるといいかもです\u003cbr\u003e\n今回のRailsアプリは東京リージョンにデプロイするので、同じ東京リージョンに作成します\u003c/p\u003e\n\u003cp data-sourcepos=\"32:1-32:74\"\u003e\u003ccode\u003eCreate new project\u003c/code\u003eをポッチとすれば作成できます \u003cimg alt=\":thumbsup:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f44d.png\" title=\":thumbsup:\" width=\"20\" loading=\"lazy\"\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"34:1-34:122\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/86f5d4f44c1e453eabe7eeca43eabf83bdf8e005/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f66653635356533392d643966342d616563382d363235352d6261373739646235393438632e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2Ffe655e39-d9f4-aec8-6255-ba779db5948c.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=9debde1932de1c55b4a71a273645decf\" alt=\"Supabase.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/fe655e39-d9f4-aec8-6255-ba779db5948c.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2Ffe655e39-d9f4-aec8-6255-ba779db5948c.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=516fbd80f0617183903bcb8032d419d1 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"36:1-36:30\"\u003e\n\u003cspan id=\"postgresqlのバージョン\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#postgresql%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePostgreSQLのバージョン\u003c/h1\u003e\n\u003ch2 data-sourcepos=\"37:1-37:82\"\u003e\n\u003cspan id=\"supabase-postgresqlのバージョンがきになったので調べてみます\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#supabase-postgresql%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%8C%E3%81%8D%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E3%81%AE%E3%81%A7%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%BE%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSupabase PostgreSQLのバージョンがきになったので調べてみます\u003c/h2\u003e\n\u003cp data-sourcepos=\"39:1-39:142\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/56cb2a825e9cd263b4da8c034a3f5a7e9a7a4a4e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f32643130646135652d346137662d393332632d666335382d6538393736643835333930312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F2d10da5e-4a7f-932c-fc58-e8976d853901.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=0eeaccbf20ba94c615f3dbcff2d331a8\" alt=\"examples-supabase___Supabase.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/2d10da5e-4a7f-932c-fc58-e8976d853901.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F2d10da5e-4a7f-932c-fc58-e8976d853901.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=39aecaac6347c3d72138c91eada47d58 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"41:1-41:54\"\u003eサイドバーの\u003ccode\u003eSQL Editor\u003c/code\u003eをクリックします\u003c/p\u003e\n\u003cp data-sourcepos=\"43:1-43:128\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/2a2235eb8cde49fb6abbae98ef0e10995c966707/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f35363236313364342d663362352d613231302d613831612d6161316565613238343365352e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F562613d4-f3b5-a210-a81a-aa1eea2843e5.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=b8d812e02cf19ab34ea8805746d9fb64\" alt=\"SQL___Supabase.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/562613d4-f3b5-a210-a81a-aa1eea2843e5.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F562613d4-f3b5-a210-a81a-aa1eea2843e5.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=ac15510f7f21b8091853730b17581a2c 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"45:1-45:98\"\u003eSQLを入力して、\u003ccode\u003eRun\u003c/code\u003eボタンをクリックしたらバージョンが表示されるはず\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"46:1-48:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003eselect version();\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"49:1-49:51\"\u003ePostgreSQLのバージョンはv14.1みたですね\u003c/p\u003e\n\u003cp data-sourcepos=\"51:1-51:128\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/3fdd3e0f2b2dd36ba957f670934ca935c643bdbd/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f39666464316462632d323465662d323634362d313230372d6233313765323839656464622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F9fdd1dbc-24ef-2646-1207-b317e289eddb.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d40908ba1bfe66b453a5556af5d6356b\" alt=\"SQL___Supabase.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/9fdd1dbc-24ef-2646-1207-b317e289eddb.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F9fdd1dbc-24ef-2646-1207-b317e289eddb.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=15f9946441758b57fb00fef6936c13e0 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"53:1-53:21\"\u003e\n\u003cspan id=\"postgresqlの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#postgresql%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePostgreSQLの設定\u003c/h1\u003e\n\u003cp data-sourcepos=\"54:1-55:87\"\u003eRailsで必要になるのは、\u003ccode\u003eHost\u003c/code\u003e、\u003ccode\u003eDatabase name\u003c/code\u003e, \u003ccode\u003eUser\u003c/code\u003e, \u003ccode\u003ePassword\u003c/code\u003e (さっき設定したやつ)\u003cbr\u003e\nあと、SSL接続したいので証明書をダウンロードしておきましょう\u003c/p\u003e\n\u003cp data-sourcepos=\"57:1-57:133\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/fea9ee45cbcf296df6fa05d469305e24dde57d8f/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f62396133373238322d363131342d653963352d373633382d6633323564626235393132302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2Fb9a37282-6114-e9c5-7638-f325dbb59120.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a85f3840523f64dbafe6824e31cc7c79\" alt=\"Database___Supabase.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/b9a37282-6114-e9c5-7638-f325dbb59120.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2Fb9a37282-6114-e9c5-7638-f325dbb59120.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=56c7ed83077cdba020bbb6fed9f1c455 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"59:1-59:49\"\u003e以上で\u003ccode\u003eSupabase\u003c/code\u003eの設定はおしまいです\u003c/p\u003e\n\u003ch1 data-sourcepos=\"61:1-61:13\"\u003e\n\u003cspan id=\"rails-setup\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rails-setup\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRails setup\u003c/h1\u003e\n\u003ch2 data-sourcepos=\"62:1-62:35\"\u003e\n\u003cspan id=\"railsアプリを作成します\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rails%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%BE%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRailsアプリを作成します\u003c/h2\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"64:1-67:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003egem install rails\nrails new -d postgresql examples-supabase\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch2 data-sourcepos=\"69:1-69:31\"\u003e\n\u003cspan id=\"configdatabaseymlを修正\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#configdatabaseyml%E3%82%92%E4%BF%AE%E6%AD%A3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003econfig/database.ymlを修正\u003c/h2\u003e\n\u003cp data-sourcepos=\"70:1-71:76\"\u003e\u003cimg alt=\":warning:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/26a0-fe0f.png\" title=\":warning:\" width=\"20\" loading=\"lazy\"\u003e 今回はお試しなので、developmentを修正してます \u003cimg alt=\":warning:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/26a0-fe0f.png\" title=\":warning:\" width=\"20\" loading=\"lazy\"\u003e\u003cbr\u003e\n通常、developmentはローカルDBを使えばよいかと思いますー\u003c/p\u003e\n\u003cp data-sourcepos=\"73:1-74:81\"\u003e先程、ダウンロードした証明書を\u003ccode\u003eexamples-supabase\u003c/code\u003eディレクトリにコピーします\u003cbr\u003e\n証明書をコミットしないようにgitignoreに追加しときましょう\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"76:1-92:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003edefault: \u0026amp;default\n  adapter: postgresql\n  encoding: unicode\n  # For details on connection pooling, see Rails configuration guide\n  # https://guides.rubyonrails.org/configuring.html#database-pooling\n  pool: \u0026lt;%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %\u0026gt;\n\ndevelopment:\n  \u0026lt;\u0026lt;: *default\n  host: \u0026lt;%= ENV[\"APP_DATABASE_HOST\"] %\u0026gt;\n  database: postgres\n  username: postgres\n  password: \u0026lt;%= ENV[\"APP_DATABASE_PASSWORD\"] %\u0026gt;\n  sslmode: verify-full\n  sslrootcert: prod-ca-2021.crt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch1 data-sourcepos=\"94:1-94:15\"\u003e\n\u003cspan id=\"rails-running\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rails-running\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRails Running\u003c/h1\u003e\n\u003ch2 data-sourcepos=\"95:1-95:71\"\u003e\n\u003cspan id=\"scaffoldして実際に動作するか確認してみましょう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#scaffold%E3%81%97%E3%81%A6%E5%AE%9F%E9%9A%9B%E3%81%AB%E5%8B%95%E4%BD%9C%E3%81%99%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%A6%E3%81%BF%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003escaffoldして、実際に動作するか確認してみましょう\u003c/h2\u003e\n\u003cp data-sourcepos=\"96:1-96:59\"\u003edatabaseはすでにあるので、migrateだけでOKです\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"98:1-130:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e$ rails g scaffold posts title:string\n\n invoke  active_record                                                             \n      create    db/migrate/20221126125618_create_posts.rb                                       \n      create    app/models/post.rb                                                              \n      invoke    test_unit                                                                       \n      create      test/models/post_test.rb                                                      \n      create      test/fixtures/posts.yml                                                       \n      invoke  resource_route                                                                    \n       route    resources :posts                                                                \n      invoke  scaffold_controller                                                               \n      create    app/controllers/posts_controller.rb                                             \n      invoke    erb                                                                             \n      create      app/views/posts                                                               \n      create      app/views/posts/index.html.erb                                                \n      create      app/views/posts/edit.html.erb                                                 \n      create      app/views/posts/show.html.erb                                                 \n      create      app/views/posts/new.html.erb                                                  \n      create      app/views/posts/_form.html.erb                                                \n      create      app/views/posts/_post.html.erb                                                \n      invoke    resource_route                                                                  \n      invoke    test_unit                                                                       \n      create      test/controllers/posts_controller_test.rb                                     \n      create      test/system/posts_test.rb                                                     \n      invoke    helper                                                                          \n      create      app/helpers/posts_helper.rb                                                   \n      invoke      test_unit                                                                     \n      invoke    jbuilder                                                                        \n      create      app/views/posts/index.json.jbuilder                                           \n      create      app/views/posts/show.json.jbuilder                                            \n      create      app/views/posts/_post.json.jbuilder  \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"132:1-139:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e$ bin/rails db:migrate\n\n== 20221126125618 CreatePosts: migrating ======================================\n-- create_table(:posts)\n   -\u0026gt; 0.1090s\n== 20221126125618 CreatePosts: migrated (0.1091s) =============================\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"141:1-141:30\"\u003eできたっぽいですねー\u003c/p\u003e\n\u003ch2 data-sourcepos=\"143:1-143:71\"\u003e\n\u003cspan id=\"railsを起動して実際にデータ登録してみましょう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rails%E3%82%92%E8%B5%B7%E5%8B%95%E3%81%97%E3%81%A6%E5%AE%9F%E9%9A%9B%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E7%99%BB%E9%8C%B2%E3%81%97%E3%81%A6%E3%81%BF%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRailsを起動して、実際にデータ登録してみましょう\u003c/h2\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"145:1-147:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003ebin/rails s\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"149:1-149:54\"\u003e\u003ccode\u003ehttp://localhost:3000/posts/\u003c/code\u003eへアクセスします\u003c/p\u003e\n\u003cp data-sourcepos=\"151:1-151:21\"\u003e登録できました\u003c/p\u003e\n\u003cp data-sourcepos=\"153:1-153:117\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/acea2a58e93849e0e4231d5761b404b47583396d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f39633632303761662d653761342d376330382d366437392d3061643963383039383930312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F9c6207af-e7a4-7c08-6d79-0ad9c8098901.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=f06d4f560580cc8448e8e77e65f26d98\" alt=\"App.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/9c6207af-e7a4-7c08-6d79-0ad9c8098901.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2F9c6207af-e7a4-7c08-6d79-0ad9c8098901.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=ea0ec8b0bd26e59b2f47216ac35a3b3d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 data-sourcepos=\"155:1-155:44\"\u003e\n\u003cspan id=\"supabaseでも確認してみましょう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#supabase%E3%81%A7%E3%82%82%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%A6%E3%81%BF%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSupabaseでも確認してみましょう\u003c/h2\u003e\n\u003cp data-sourcepos=\"156:1-156:47\"\u003eちゃんと登録できてますねー \u003cimg alt=\":tada:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f389.png\" title=\":tada:\" width=\"20\" loading=\"lazy\"\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"158:1-158:142\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/504686e30fff7af42f84891f6a409a00cb917cf5/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f363437302f62636133623361302d653866302d383831632d333530302d6632653938393039343061612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2Fbca3b3a0-e8f0-881c-3500-f2e9890940aa.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a39e0c05e5cff591973f93bb15d8afb9\" alt=\"examples-supabase___Supabase.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/bca3b3a0-e8f0-881c-3500-f2e9890940aa.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F6470%2Fbca3b3a0-e8f0-881c-3500-f2e9890940aa.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=387e1d96c5d80deecee165b0c30e0f08 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"160:1-160:11\"\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\u003ch2 data-sourcepos=\"161:1-161:7\"\u003e\n\u003cspan id=\"good\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#good\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGood\u003c/h2\u003e\n\u003cp data-sourcepos=\"162:1-163:53\"\u003eRailsでもSupabaseのPostgreSQLをかんたんに使うことができました\u003cbr\u003e\nSupabaseのセットアップもちょーかんたん\u003c/p\u003e\n\u003ch2 data-sourcepos=\"165:1-165:11\"\u003e\n\u003cspan id=\"not-good\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#not-good\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eNot Good\u003c/h2\u003e\n\u003cp data-sourcepos=\"166:1-167:95\"\u003eSupabaseのレスポンスが若干もたつくときがあるのでちょっと気になりました \u003cimg alt=\":thinking:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f914.png\" title=\":thinking:\" width=\"20\" loading=\"lazy\"\u003e\u003cbr\u003e\nといっても100msくらいで、自分のネット環境が微妙なのかもしれません\u003c/p\u003e\n\u003ch1 data-sourcepos=\"169:1-169:11\"\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h1\u003e\n\u003cp data-sourcepos=\"170:1-172:48\"\u003e導入自体はすごく簡単で、移行もすんなりいくんじゃないかなと思います\u003cbr\u003e\nただプロダクトで、無料枠内での利用は厳しそうですね。。。 \u003cimg alt=\":frowning2:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/2639.png\" title=\":frowning2:\" width=\"20\" loading=\"lazy\"\u003e\u003cbr\u003e\n僕はProで運用してみようと思います\u003c/p\u003e\n\u003cp data-sourcepos=\"174:1-175:15\"\u003eSupabaseの他の機能、認証やroleなんかも使っていきたいと思いますー\u003cbr\u003e\nではまたー\u003c/p\u003e\n",
    "body": "# はじめに\n\nなんかサービス作るときに、DBどうする問題があると思います\nクラウドのDBはなかなかお高くて、低コストで運用したいなと思ったときに困ったので調べてました\n結果、Supabaseがよさそうだったので使ってみます\n\n単純にDBだけならPlanetScaleのほうが無料枠が充実していてよいかと思ったけど、ユーザ認証など今後も見据えてSupabaseをチョイスしました\n\n今回は、RailsからSupabaseのPostgreSQLに接続してみます :smile: \n\nhttps://supabase.com/\n\nhttps://planetscale.com/\n\n# 環境\nRails v7.0.4\nSupabase Postgres\n\n# Supabase Sing up\nGitHubのアカウントがある人はGitHub認証すればOKです\n\n# Supabase Create Project\n## Projectを作成します\n\nProject名はお好きな名前を入力\nDBのパスワードは、`Generate a password`リンクをクリックしたら作ってくれます\nパスワード忘れちゃっても、あとでリセットできるので大丈夫です :smile: \n\nリージョンはOriginがどこにあるかで決めるといいかもです\n今回のRailsアプリは東京リージョンにデプロイするので、同じ東京リージョンに作成します\n\n`Create new project`をポッチとすれば作成できます :thumbsup: \n\n![Supabase.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/fe655e39-d9f4-aec8-6255-ba779db5948c.png)\n\n# PostgreSQLのバージョン\n## Supabase PostgreSQLのバージョンがきになったので調べてみます\n\n![examples-supabase___Supabase.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/2d10da5e-4a7f-932c-fc58-e8976d853901.png)\n\nサイドバーの`SQL Editor`をクリックします\n\n![SQL___Supabase.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/562613d4-f3b5-a210-a81a-aa1eea2843e5.png)\n\nSQLを入力して、`Run`ボタンをクリックしたらバージョンが表示されるはず\n```\nselect version();\n```\nPostgreSQLのバージョンはv14.1みたですね\n\n![SQL___Supabase.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/9fdd1dbc-24ef-2646-1207-b317e289eddb.png)\n\n# PostgreSQLの設定\nRailsで必要になるのは、`Host`、`Database name`, `User`, `Password` (さっき設定したやつ)\nあと、SSL接続したいので証明書をダウンロードしておきましょう\n\n![Database___Supabase.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/b9a37282-6114-e9c5-7638-f325dbb59120.png)\n\n以上で`Supabase`の設定はおしまいです\n\n# Rails setup\n## Railsアプリを作成します\n\n```\ngem install rails\nrails new -d postgresql examples-supabase\n```\n\n## config/database.ymlを修正\n:warning: 今回はお試しなので、developmentを修正してます :warning: \n通常、developmentはローカルDBを使えばよいかと思いますー\n\n先程、ダウンロードした証明書を`examples-supabase`ディレクトリにコピーします\n証明書をコミットしないようにgitignoreに追加しときましょう\n\n```\ndefault: \u0026default\n  adapter: postgresql\n  encoding: unicode\n  # For details on connection pooling, see Rails configuration guide\n  # https://guides.rubyonrails.org/configuring.html#database-pooling\n  pool: \u003c%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %\u003e\n\ndevelopment:\n  \u003c\u003c: *default\n  host: \u003c%= ENV[\"APP_DATABASE_HOST\"] %\u003e\n  database: postgres\n  username: postgres\n  password: \u003c%= ENV[\"APP_DATABASE_PASSWORD\"] %\u003e\n  sslmode: verify-full\n  sslrootcert: prod-ca-2021.crt\n```\n\n# Rails Running\n## scaffoldして、実際に動作するか確認してみましょう\ndatabaseはすでにあるので、migrateだけでOKです\n\n```\n$ rails g scaffold posts title:string\n\n invoke  active_record                                                             \n      create    db/migrate/20221126125618_create_posts.rb                                       \n      create    app/models/post.rb                                                              \n      invoke    test_unit                                                                       \n      create      test/models/post_test.rb                                                      \n      create      test/fixtures/posts.yml                                                       \n      invoke  resource_route                                                                    \n       route    resources :posts                                                                \n      invoke  scaffold_controller                                                               \n      create    app/controllers/posts_controller.rb                                             \n      invoke    erb                                                                             \n      create      app/views/posts                                                               \n      create      app/views/posts/index.html.erb                                                \n      create      app/views/posts/edit.html.erb                                                 \n      create      app/views/posts/show.html.erb                                                 \n      create      app/views/posts/new.html.erb                                                  \n      create      app/views/posts/_form.html.erb                                                \n      create      app/views/posts/_post.html.erb                                                \n      invoke    resource_route                                                                  \n      invoke    test_unit                                                                       \n      create      test/controllers/posts_controller_test.rb                                     \n      create      test/system/posts_test.rb                                                     \n      invoke    helper                                                                          \n      create      app/helpers/posts_helper.rb                                                   \n      invoke      test_unit                                                                     \n      invoke    jbuilder                                                                        \n      create      app/views/posts/index.json.jbuilder                                           \n      create      app/views/posts/show.json.jbuilder                                            \n      create      app/views/posts/_post.json.jbuilder  \n```\n\n```\n$ bin/rails db:migrate\n\n== 20221126125618 CreatePosts: migrating ======================================\n-- create_table(:posts)\n   -\u003e 0.1090s\n== 20221126125618 CreatePosts: migrated (0.1091s) =============================\n```\n\nできたっぽいですねー\n\n## Railsを起動して、実際にデータ登録してみましょう\n\n```\nbin/rails s\n```\n\n`http://localhost:3000/posts/`へアクセスします\n\n登録できました\n\n![App.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/9c6207af-e7a4-7c08-6d79-0ad9c8098901.png)\n\n## Supabaseでも確認してみましょう\nちゃんと登録できてますねー :tada: \n\n![examples-supabase___Supabase.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/6470/bca3b3a0-e8f0-881c-3500-f2e9890940aa.png)\n\n# まとめ\n## Good\nRailsでもSupabaseのPostgreSQLをかんたんに使うことができました\nSupabaseのセットアップもちょーかんたん\n\n## Not Good\nSupabaseのレスポンスが若干もたつくときがあるのでちょっと気になりました :thinking: \nといっても100msくらいで、自分のネット環境が微妙なのかもしれません\n\n# 最後に\n導入自体はすごく簡単で、移行もすんなりいくんじゃないかなと思います\nただプロダクトで、無料枠内での利用は厳しそうですね。。。 :frowning2:\n僕はProで運用してみようと思います\n\nSupabaseの他の機能、認証やroleなんかも使っていきたいと思いますー\nではまたー\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:26:29+09:00",
    "group": null,
    "id": "4a3baf2d8d38b768729c",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Rails", "versions": [] },
      { "name": "Supabase", "versions": [] }
    ],
    "title": "RailsでSupabaseのPostgreSQLを使ってみる",
    "updated_at": "2022-11-26T22:26:29+09:00",
    "url": "https://qiita.com/murajun1978/items/4a3baf2d8d38b768729c",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 11,
      "followers_count": 30,
      "github_login_name": "murajun1978",
      "id": "murajun1978",
      "items_count": 11,
      "linkedin_id": "",
      "location": "",
      "name": "Junichi Murata",
      "organization": "",
      "permanent_id": 6470,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/6470/profile-images/1473682909",
      "team_only": false,
      "twitter_screen_name": "murajun1978",
      "website_url": "http://murajun1978.hatenadiary.com/"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch2 data-sourcepos=\"1:1-1:15\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\u003cp data-sourcepos=\"3:1-3:223\"\u003eUbuntu を操作しているとよくビープ音（警告音）が鳴りますよね。長らくまぁいいかと思ってそのままにしていたのですが、やはり気に障るので消すことにしました。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"5:1-5:8\"\u003e\n\u003cspan id=\"tldr\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tldr\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eTL;DR\u003c/h2\u003e\n\u003cp data-sourcepos=\"7:1-7:59\"\u003e\u003ccode\u003eTerminal\u003c/code\u003e を開いて、以下を実行しましょう。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"sh\" data-sourcepos=\"9:1-11:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003egsettings \u003cspan class=\"nb\"\u003eset \u003c/span\u003eorg.gnome.desktop.wm.preferences audible-bell \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch2 data-sourcepos=\"13:1-13:45\"\u003e\n\u003cspan id=\"ビープ音タイプを変更する方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%93%E3%83%BC%E3%83%97%E9%9F%B3%E3%82%BF%E3%82%A4%E3%83%97%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eビープ音タイプを変更する方法\u003c/h2\u003e\n\u003cp data-sourcepos=\"15:1-16:151\"\u003eちなみに、ビープ音のタイプを変えたい場合は、\u003ccode\u003eシステム設定-\u0026gt;サウンド\u003c/code\u003eから変更できるようです。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/ade59eceeebc48ba6b1030b36a8bad77ec95fd47/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3334333931332f61323438663933312d366638652d323734332d613163632d6230633531386135376666662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F343913%2Fa248f931-6f8e-2743-a1cc-b0c518a57fff.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=81fefcc82283fc5085b1610b4fc5f520\" alt=\"Screenshot from 2022-11-26 19-15-12.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/343913/a248f931-6f8e-2743-a1cc-b0c518a57fff.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F343913%2Fa248f931-6f8e-2743-a1cc-b0c518a57fff.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=57452dc7515ce727c66901b1a5b8843b 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n",
    "body": "## はじめに\n\nUbuntu を操作しているとよくビープ音（警告音）が鳴りますよね。長らくまぁいいかと思ってそのままにしていたのですが、やはり気に障るので消すことにしました。\n\n## TL;DR\n\n`Terminal` を開いて、以下を実行しましょう。\n\n```sh\ngsettings set org.gnome.desktop.wm.preferences audible-bell false\n```\n\n## ビープ音タイプを変更する方法\n\nちなみに、ビープ音のタイプを変えたい場合は、`システム設定-\u003eサウンド`から変更できるようです。\n![Screenshot from 2022-11-26 19-15-12.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/343913/a248f931-6f8e-2743-a1cc-b0c518a57fff.png)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:22:54+09:00",
    "group": null,
    "id": "84e6ad70e6ad87d59872",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [{ "name": "Ubuntu22.04", "versions": [] }],
    "title": "Ubuntu 22.04 のビープ音を消す方法",
    "updated_at": "2022-11-26T22:22:54+09:00",
    "url": "https://qiita.com/touch_dash/items/84e6ad70e6ad87d59872",
    "user": {
      "description": "ねこまっしぐら",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 3,
      "github_login_name": "shoot16625",
      "id": "touch_dash",
      "items_count": 39,
      "linkedin_id": "",
      "location": "Tokyo",
      "name": "",
      "organization": "",
      "permanent_id": 343913,
      "profile_image_url": "https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/343913/5435a642a8357a7ad8cdff9c65a826509e992ae1/large.png?1573646992",
      "team_only": false,
      "twitter_screen_name": "touch_dash",
      "website_url": "https://spotify-extension.shijimi.work/"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:12\"\u003e\n\u003cspan id=\"motivation\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#motivation\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMotivation\u003c/h1\u003e\n\u003cp data-sourcepos=\"2:1-2:554\"\u003e長女が秋祭りの金魚すくいで金魚を持って帰ってきて、エアポンプ付きの小さな水槽買って環境整えて、長女も毎日餌やったり水槽の掃除したり世話してるともう2ヶ月以上元気に泳いでる。年末年始、帰省のため家を空けるので餌やりどうしようかなと思って自動餌やり器とか物色してみたが、このくらいなら自作できるんじゃね、ということでググったら、みんなLEDチカ並み?に自作してたので自作してみた。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"4:1-4:14\"\u003e\n\u003cspan id=\"prerequisite\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#prerequisite\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePrerequisite\u003c/h1\u003e\n\u003cp data-sourcepos=\"5:1-5:45\"\u003e新しく買ったものはありません。\u003c/p\u003e\n\u003cul data-sourcepos=\"6:1-9:0\"\u003e\n\u003cli data-sourcepos=\"6:1-6:259\"\u003eESP-WROOM-32D(Arduino互換マイコン): \u003ca href=\"https://qiita.com/kamotsuru/items/96daba5e217b31d27699\" id=\"reference-806f230ee3b85fbc64d5\"\u003eセンサデータをArduinoで取得して、ゲートウェイ経由でsyslogサーバに集めてみた\u003c/a\u003eで買ったものが遊んでたので、再利用\u003c/li\u003e\n\u003cli data-sourcepos=\"7:1-7:167\"\u003eMini Servo: 昔買った\u003ca href=\"https://wiki.seeedstudio.com/Sidekick_Basic_Kit_for_Arduino_V2/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eArduino Sidekick Basic Kit\u003c/a\u003eに入ってた。使ったことない。。。\u003c/li\u003e\n\u003cli data-sourcepos=\"8:1-9:0\"\u003eサーボを固定する治具とか餌を貯めておく容器: これも昔買った3Dプリンタ\u003ca href=\"https://micro.printm3d.com\" rel=\"nofollow noopener\" target=\"_blank\"\u003eMicro 3D\u003c/a\u003eで作った(後述)。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 data-sourcepos=\"10:1-10:36\"\u003e\n\u003cspan id=\"mini-servoをタイマ制御する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#mini-servo%E3%82%92%E3%82%BF%E3%82%A4%E3%83%9E%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMini Servoをタイマ制御する\u003c/h1\u003e\n\u003cp data-sourcepos=\"11:1-12:115\"\u003e\u003ca href=\"https://inomacreate.com/arduino-kingyo/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eはじめての電子工作　Arduinoで金魚の自動餌やり機を自作してみた\u003c/a\u003eを参考にMini Servoをタイマ制御しようとしたが、手持ちの純正Arduino Nano 33 BLE Senseではなく、あとで配線を戻しやすい上記ESP-WROOM-32Dを使おうとしたところ、まあ動かない。\u003cbr\u003e\nググったところ、CPUアーキテクチャ?が違うらしく、下記を参照してコード修正した。\u003c/p\u003e\n\u003cul data-sourcepos=\"13:1-15:0\"\u003e\n\u003cli data-sourcepos=\"13:1-13:76\"\u003e\u003ca href=\"https://dronebotworkshop.com/esp32-servo/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eUsing Servo Motors with ESP32\u003c/a\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"14:1-15:0\"\u003e\u003ca href=\"https://techtutorialsx.com/2021/08/07/esp32-ticker-library/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eESP32: Ticker library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"16:1-17:352\"\u003e下記コードは60秒毎に、初期位置から180度回転したのち、-180度戻るだけです。本番は12時間毎にします。\u003cbr\u003e\nESP-WROOM-32DにはWifiついてるので、\u003ca href=\"https://qiita.com/kamotsuru/items/96daba5e217b31d27699\"\u003eセンサデータをArduinoで取得して、ゲートウェイ経由でsyslogサーバに集めてみた\u003c/a\u003e同様、餌やりしたときにsyslogサーバにsyslog飛ばすようにしてます。ログだけは帰省先からでも見れる。。。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"19:1-143:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;ESP32Servo.h\u0026gt;\n//#include \u0026lt;MsTimer2.h\u0026gt;\n#include \u0026lt;Ticker.h\u0026gt;\n#include \u0026lt;WiFi.h\u0026gt;\n#include \u0026lt;WiFiUdp.h\u0026gt;\n#include \u0026lt;Syslog.h\u0026gt;\n\n#define SYSLOG_PORT 514\n\nServo myservo;  // create servo object to control a servo\nint pos = 0; // initial servo position (degree)\n\n//wifi configuration\nchar* ssid     = \"Wifi Network\";\nchar* password = \"guest\";\nIPAddress wifiIp;\nWiFiUDP udpClient;\n\nchar* server = \"192.168.0.11\"; // syslog server\nSyslog syslog(udpClient, server, SYSLOG_PORT, \"esp32\", LOG_KERN);\n\n// timer variables\nTicker periodicTicker;\nvolatile boolean tsw = false;\nint hour_cnt = 0;\nint min_cnt = 0;\nint sec_cnt = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  myservo.attach(2);  // attaches the servo on pin 2 to the servo object\n  Serial.begin(115200);\n  myservo.write(pos); // tell servo to go to position in variable 'pos'\n\n  periodicTicker.attach_ms(1000, timecnt);  //timecnt() is called every 1000ms\n\n  // We start by connecting to a WiFi network\n  delay(10);\n  if(Serial) {\n    Serial.println(ssid);\n  }\n  WiFi.begin(ssid, password);\n  while(WiFi.status() != WL_CONNECTED) {\n      delay(500);\n      if(Serial)\n        Serial.print(\".\");\n  }\n  wifiIp = WiFi.localIP();\n  if(Serial) {\n    Serial.println(\"\");\n    Serial.println(WiFi.localIP());\n  }\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  // timer action\n  if( tsw ){\n    motor_action();\n    syslog.log(LOG_INFO, \"motor_action()!\");\n    tsw=false;\n  }\n}\n\nvoid motor_action() {\n  for (pos = 0; pos \u0026lt;=180; pos += 1) { // goes from 0 degrees to 180 degrees\n    // in steps of 1 degree\n    myservo.write(pos);              // tell servo to go to position in variable 'pos'\n    delay(3);                        // waits 15ms for the servo to reach the position\n    if(Serial) {\n      if(pos%10 == 0) {\n        Serial.print(pos);\n        Serial.print(\", \");\n      }\n    }\n  }\n  if(Serial)\n    Serial.println(\"\");\n  for (pos = 180; pos \u0026gt;= 0; pos -= 1) { // goes from 0 degrees to 180 degrees\n    myservo.write(pos);              // tell servo to go to position in variable 'pos'\n    delay(3);                        // waits 15ms for the servo to reach the position\n    if(Serial) {\n      if(pos%10 == 0) {\n        Serial.print(pos);\n        Serial.print(\", \");\n      }\n    }\n  }\n  if(Serial)\n    Serial.println(\"\");\n}\n\nvoid timecnt() {\n  sec_cnt++;\n  if(Serial) {\n    Serial.print(hour_cnt);\n    Serial.print(\"h\");\n    Serial.print(min_cnt);\n    Serial.print(\"min\");\n    Serial.print(sec_cnt);\n    Serial.println(\"sec\");\n  }\n  if(sec_cnt \u0026gt; 59)\n  {\n    tsw=true; //1分おきに動く(試験目的)\n    syslog.logf(LOG_INFO, \"%d h %d min %d sec\", hour_cnt, min_cnt, sec_cnt);\n    min_cnt++;\n    sec_cnt=0;\n  \n  if(min_cnt \u0026gt; 59)\n  {\n    hour_cnt++;\n    min_cnt=0;\n  }\n  if( hour_cnt \u0026gt; 11 )\n  {\n//    tsw=true;\n//    syslog.logf(LOG_INFO, \"%d h %d min %d sec\", hour_cnt, min_cnt, sec_cont);\n    sec_cnt=0;\n    min_cnt=0;\n    hour_cnt=0;\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch1 data-sourcepos=\"145:1-145:74\"\u003e\n\u003cspan id=\"サーボを固定する治具とか餌を貯めておく容器を作る\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B5%E3%83%BC%E3%83%9C%E3%82%92%E5%9B%BA%E5%AE%9A%E3%81%99%E3%82%8B%E6%B2%BB%E5%85%B7%E3%81%A8%E3%81%8B%E9%A4%8C%E3%82%92%E8%B2%AF%E3%82%81%E3%81%A6%E3%81%8A%E3%81%8F%E5%AE%B9%E5%99%A8%E3%82%92%E4%BD%9C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eサーボを固定する治具とか餌を貯めておく容器を作る\u003c/h1\u003e\n\u003cp data-sourcepos=\"146:1-146:143\"\u003e\u003ca href=\"https://www.tinkercad.com/dashboard\" rel=\"nofollow noopener\" target=\"_blank\"\u003eAutodesk Tinkercat\u003c/a\u003eで下記の通り設計して、前述の通りMicro 3D使ってプリントアウト\u003c/p\u003e\n\u003cul data-sourcepos=\"147:1-155:0\"\u003e\n\u003cli data-sourcepos=\"147:1-148:150\"\u003e\n\u003ca href=\"https://www.tinkercad.com/things/fq0TqQw8xYu\" rel=\"nofollow noopener\" target=\"_blank\"\u003e水槽に固定する治具\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/e1b26249be673d544c6f41d1278f823c97bc8d2e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131373130302f63666639666433642d623535662d663039382d363536662d6137333166653333623565312e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2Fcff9fd3d-b55f-f098-656f-a731fe33b5e1.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=4b2530e73f7f977688d1346ec10c9f3a\" alt=\"Screen Shot 2022-11-26 at 20.57.55.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/cff9fd3d-b55f-f098-656f-a731fe33b5e1.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2Fcff9fd3d-b55f-f098-656f-a731fe33b5e1.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=54fc70b4fe0196a7845b012bbd7098ee 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"149:1-150:150\"\u003e\n\u003ca href=\"https://www.tinkercad.com/things/hw7LAjP3YpY\" rel=\"nofollow noopener\" target=\"_blank\"\u003e餌を貯めておく容器(蓋)\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/515786f3302e1ec94c51f50a1f183e50136b94c2/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131373130302f34363036663231352d303939612d626235662d646563662d3266646265363830633536392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2F4606f215-099a-bb5f-decf-2fdbe680c569.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=28de07fd821b561f06e9d6f9617a3884\" alt=\"Screen Shot 2022-11-26 at 20.58.26.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/4606f215-099a-bb5f-decf-2fdbe680c569.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2F4606f215-099a-bb5f-decf-2fdbe680c569.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3654b19e7e85bae0edf5d387484efe0a 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"151:1-155:0\"\u003e\n\u003ca href=\"https://www.tinkercad.com/things/apSD6OqoinY\" rel=\"nofollow noopener\" target=\"_blank\"\u003e餌を貯めておく容器(本体)\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/2904a2127c77834c6407598eb02f2c2a4a8d9ee2/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131373130302f31316637386433392d626335392d646636622d633238632d6631306165633138313966662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2F11f78d39-bc59-df6b-c28c-f10aec1819ff.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=fde71373358e9e5a4f11ae3e228faaa6\" alt=\"Screen Shot 2022-11-26 at 20.57.27.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/11f78d39-bc59-df6b-c28c-f10aec1819ff.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2F11f78d39-bc59-df6b-c28c-f10aec1819ff.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=6799b566e8de7a96fb5043fccc13b72d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\n餌を貯めておく容器の横に、回転させた時に餌が出てくるよう穴を5つ開けた。3Dプリントしたものとサーボを組み合わせるとこんな感じに\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/a49a7113ecd43ad3fa0559afe427e9dc844619f7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3131373130302f36346438396464662d343766302d303130322d373362392d3938383761663563313130642e6a706567\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2F64d89ddf-47f0-0102-73b9-9887af5c110d.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=44ae8d5d0168f291e50ca88478129279\" alt=\"IMG_1529.jpg\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/64d89ddf-47f0-0102-73b9-9887af5c110d.jpeg\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F117100%2F64d89ddf-47f0-0102-73b9-9887af5c110d.jpeg?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=df4d3b023fef80a3ce4125ff6f1623f5 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 data-sourcepos=\"156:1-156:8\"\u003e\n\u003cspan id=\"試験\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A9%A6%E9%A8%93\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e試験\u003c/h1\u003e\n\u003cp data-sourcepos=\"157:1-158:141\"\u003e\u003ca href=\"https://drive.google.com/file/d/1bQwylRUtkNYEdGxMaRxolq-XWYFOfB9R/view?usp=sharing\" rel=\"nofollow noopener\" target=\"_blank\"\u003e動画\u003c/a\u003e\u003cbr\u003e\n一応動いた。わかりにくいのですが、奥側の開けた穴が垂直下向きになった時に餌がちゃんと落ちます。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"160:1-160:11\"\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h1\u003e\n\u003cp data-sourcepos=\"161:1-161:93\"\u003e帰省時にセッティングしますが、年末年始もちゃんと動くはず。。。\u003c/p\u003e\n",
    "body": "# Motivation\n長女が秋祭りの金魚すくいで金魚を持って帰ってきて、エアポンプ付きの小さな水槽買って環境整えて、長女も毎日餌やったり水槽の掃除したり世話してるともう2ヶ月以上元気に泳いでる。年末年始、帰省のため家を空けるので餌やりどうしようかなと思って自動餌やり器とか物色してみたが、このくらいなら自作できるんじゃね、ということでググったら、みんなLEDチカ並み?に自作してたので自作してみた。\n\n# Prerequisite\n新しく買ったものはありません。\n- ESP-WROOM-32D(Arduino互換マイコン): [センサデータをArduinoで取得して、ゲートウェイ経由でsyslogサーバに集めてみた](https://qiita.com/kamotsuru/items/96daba5e217b31d27699)で買ったものが遊んでたので、再利用\n- Mini Servo: 昔買った[Arduino Sidekick Basic Kit](https://wiki.seeedstudio.com/Sidekick_Basic_Kit_for_Arduino_V2/)に入ってた。使ったことない。。。\n- サーボを固定する治具とか餌を貯めておく容器: これも昔買った3Dプリンタ[Micro 3D](https://micro.printm3d.com)で作った(後述)。\n\n# Mini Servoをタイマ制御する\n[はじめての電子工作　Arduinoで金魚の自動餌やり機を自作してみた](https://inomacreate.com/arduino-kingyo/)を参考にMini Servoをタイマ制御しようとしたが、手持ちの純正Arduino Nano 33 BLE Senseではなく、あとで配線を戻しやすい上記ESP-WROOM-32Dを使おうとしたところ、まあ動かない。\nググったところ、CPUアーキテクチャ?が違うらしく、下記を参照してコード修正した。\n- [Using Servo Motors with ESP32](https://dronebotworkshop.com/esp32-servo/)\n- [ESP32: Ticker library](https://techtutorialsx.com/2021/08/07/esp32-ticker-library/)\n\n下記コードは60秒毎に、初期位置から180度回転したのち、-180度戻るだけです。本番は12時間毎にします。\nESP-WROOM-32DにはWifiついてるので、[センサデータをArduinoで取得して、ゲートウェイ経由でsyslogサーバに集めてみた](https://qiita.com/kamotsuru/items/96daba5e217b31d27699)同様、餌やりしたときにsyslogサーバにsyslog飛ばすようにしてます。ログだけは帰省先からでも見れる。。。\n\n```\n#include \u003cESP32Servo.h\u003e\n//#include \u003cMsTimer2.h\u003e\n#include \u003cTicker.h\u003e\n#include \u003cWiFi.h\u003e\n#include \u003cWiFiUdp.h\u003e\n#include \u003cSyslog.h\u003e\n\n#define SYSLOG_PORT 514\n\nServo myservo;  // create servo object to control a servo\nint pos = 0; // initial servo position (degree)\n\n//wifi configuration\nchar* ssid     = \"Wifi Network\";\nchar* password = \"guest\";\nIPAddress wifiIp;\nWiFiUDP udpClient;\n\nchar* server = \"192.168.0.11\"; // syslog server\nSyslog syslog(udpClient, server, SYSLOG_PORT, \"esp32\", LOG_KERN);\n\n// timer variables\nTicker periodicTicker;\nvolatile boolean tsw = false;\nint hour_cnt = 0;\nint min_cnt = 0;\nint sec_cnt = 0;\n\nvoid setup() {\n  // put your setup code here, to run once:\n  myservo.attach(2);  // attaches the servo on pin 2 to the servo object\n  Serial.begin(115200);\n  myservo.write(pos); // tell servo to go to position in variable 'pos'\n\n  periodicTicker.attach_ms(1000, timecnt);  //timecnt() is called every 1000ms\n\n  // We start by connecting to a WiFi network\n  delay(10);\n  if(Serial) {\n    Serial.println(ssid);\n  }\n  WiFi.begin(ssid, password);\n  while(WiFi.status() != WL_CONNECTED) {\n      delay(500);\n      if(Serial)\n        Serial.print(\".\");\n  }\n  wifiIp = WiFi.localIP();\n  if(Serial) {\n    Serial.println(\"\");\n    Serial.println(WiFi.localIP());\n  }\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  // timer action\n  if( tsw ){\n    motor_action();\n    syslog.log(LOG_INFO, \"motor_action()!\");\n    tsw=false;\n  }\n}\n\nvoid motor_action() {\n  for (pos = 0; pos \u003c=180; pos += 1) { // goes from 0 degrees to 180 degrees\n    // in steps of 1 degree\n    myservo.write(pos);              // tell servo to go to position in variable 'pos'\n    delay(3);                        // waits 15ms for the servo to reach the position\n    if(Serial) {\n      if(pos%10 == 0) {\n        Serial.print(pos);\n        Serial.print(\", \");\n      }\n    }\n  }\n  if(Serial)\n    Serial.println(\"\");\n  for (pos = 180; pos \u003e= 0; pos -= 1) { // goes from 0 degrees to 180 degrees\n    myservo.write(pos);              // tell servo to go to position in variable 'pos'\n    delay(3);                        // waits 15ms for the servo to reach the position\n    if(Serial) {\n      if(pos%10 == 0) {\n        Serial.print(pos);\n        Serial.print(\", \");\n      }\n    }\n  }\n  if(Serial)\n    Serial.println(\"\");\n}\n\nvoid timecnt() {\n  sec_cnt++;\n  if(Serial) {\n    Serial.print(hour_cnt);\n    Serial.print(\"h\");\n    Serial.print(min_cnt);\n    Serial.print(\"min\");\n    Serial.print(sec_cnt);\n    Serial.println(\"sec\");\n  }\n  if(sec_cnt \u003e 59)\n  {\n    tsw=true; //1分おきに動く(試験目的)\n    syslog.logf(LOG_INFO, \"%d h %d min %d sec\", hour_cnt, min_cnt, sec_cnt);\n    min_cnt++;\n    sec_cnt=0;\n  \n  if(min_cnt \u003e 59)\n  {\n    hour_cnt++;\n    min_cnt=0;\n  }\n  if( hour_cnt \u003e 11 )\n  {\n//    tsw=true;\n//    syslog.logf(LOG_INFO, \"%d h %d min %d sec\", hour_cnt, min_cnt, sec_cont);\n    sec_cnt=0;\n    min_cnt=0;\n    hour_cnt=0;\n  }\n}\n```\n\n# サーボを固定する治具とか餌を貯めておく容器を作る\n[Autodesk Tinkercat](https://www.tinkercad.com/dashboard)で下記の通り設計して、前述の通りMicro 3D使ってプリントアウト\n- [水槽に固定する治具](https://www.tinkercad.com/things/fq0TqQw8xYu)\n![Screen Shot 2022-11-26 at 20.57.55.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/cff9fd3d-b55f-f098-656f-a731fe33b5e1.png)\n- [餌を貯めておく容器(蓋)](https://www.tinkercad.com/things/hw7LAjP3YpY)\n![Screen Shot 2022-11-26 at 20.58.26.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/4606f215-099a-bb5f-decf-2fdbe680c569.png)\n- [餌を貯めておく容器(本体)](https://www.tinkercad.com/things/apSD6OqoinY)\n![Screen Shot 2022-11-26 at 20.57.27.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/11f78d39-bc59-df6b-c28c-f10aec1819ff.png)\n餌を貯めておく容器の横に、回転させた時に餌が出てくるよう穴を5つ開けた。3Dプリントしたものとサーボを組み合わせるとこんな感じに\n![IMG_1529.jpg](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/117100/64d89ddf-47f0-0102-73b9-9887af5c110d.jpeg)\n\n# 試験\n[動画](https://drive.google.com/file/d/1bQwylRUtkNYEdGxMaRxolq-XWYFOfB9R/view?usp=sharing)\n一応動いた。わかりにくいのですが、奥側の開けた穴が垂直下向きになった時に餌がちゃんと落ちます。\n\n# 最後に\n帰省時にセッティングしますが、年末年始もちゃんと動くはず。。。\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:21:57+09:00",
    "group": null,
    "id": "e5ebb3a5bdb8e308b092",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Arduino", "versions": [] },
      { "name": "syslog", "versions": [] },
      { "name": "M3D", "versions": [] },
      { "name": "ESP32", "versions": [] },
      { "name": "Tinkercad", "versions": [] }
    ],
    "title": "金魚の自動餌やり機を作ってみた",
    "updated_at": "2022-11-26T22:21:57+09:00",
    "url": "https://qiita.com/kamotsuru/items/e5ebb3a5bdb8e308b092",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": null,
      "id": "kamotsuru",
      "items_count": 14,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 117100,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/117100/profile-images/1473713475",
      "team_only": false,
      "twitter_screen_name": "kamotsuru",
      "website_url": null
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-1:103\"\u003eSAMLの認証プログラムのサンプルを作る機会があったので手順を記述します。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"2:1-2:8\"\u003e\n\u003cspan id=\"環境\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%92%B0%E5%A2%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e環境\u003c/h1\u003e\n\u003cul data-sourcepos=\"3:1-7:0\"\u003e\n\u003cli data-sourcepos=\"3:1-3:14\"\u003e\n\u003cstrong\u003eIdp\u003c/strong\u003e Okta\u003c/li\u003e\n\u003cli data-sourcepos=\"4:1-4:25\"\u003e\n\u003cstrong\u003eWSL2\u003c/strong\u003e Ubuntu22.04.01\u003c/li\u003e\n\u003cli data-sourcepos=\"5:1-5:19\"\u003e\n\u003cstrong\u003eEditor\u003c/strong\u003e VSCode\u003c/li\u003e\n\u003cli data-sourcepos=\"6:1-7:0\"\u003e\n\u003cstrong\u003eDocker Image\u003c/strong\u003e mcr.microsoft.com/dotnet/sdk\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"8:1-8:46\"\u003e\u003cqiita-embed-ogp src=\"https://hub.docker.com/_/microsoft-dotnet-sdk/\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cul data-sourcepos=\"10:1-14:0\"\u003e\n\u003cli data-sourcepos=\"10:1-10:20\"\u003e\n\u003cstrong\u003e.NET\u003c/strong\u003e .NET 6 C#\u003c/li\u003e\n\u003cli data-sourcepos=\"11:1-14:0\"\u003e\n\u003cstrong\u003eNuGet Package\u003c/strong\u003e\n\u003cul data-sourcepos=\"12:5-14:0\"\u003e\n\u003cli data-sourcepos=\"12:5-12:36\"\u003eITfoxtec.Identity.Saml2 v4.8.2\u003c/li\u003e\n\u003cli data-sourcepos=\"13:5-14:0\"\u003eITfoxtec.Identity.Saml2.Mvc v4.8.2\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"15:1-15:38\"\u003e\u003cqiita-embed-ogp src=\"https://www.itfoxtec.com/IdentitySaml2\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"17:1-17:17\"\u003e\n\u003cspan id=\"参考サイト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E3%82%B5%E3%82%A4%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考サイト\u003c/h1\u003e\n\u003cp data-sourcepos=\"18:1-18:98\"\u003e\u003cqiita-embed-ogp src=\"https://developer.okta.com/blog/2020/10/23/how-to-authenticate-with-saml-in-aspnet-core-and-csharp\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"20:1-20:14\"\u003e\n\u003cspan id=\"環境構築\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e環境構築\u003c/h1\u003e\n\u003cp data-sourcepos=\"21:1-21:87\"\u003eWSLに.NET6をインストールし、ASP.NETのプロジェクトを作成します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"22:1-25:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003esudo \u003c/span\u003eapt \u003cspan class=\"nb\"\u003einstall \u003c/span\u003edotnet6\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003edotnet new webapp \u003cspan class=\"nt\"\u003e-o\u003c/span\u003e saml-example\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"26:1-26:154\"\u003esaml-exampleディレクトリに入りappsettings.Development.jsonに以下の行を追加してローカルで起動するポートを固定します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_json\" data-sourcepos=\"27:1-35:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eappsettings.Development.json\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"Logging\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"LogLevel\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"Default\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Information\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"Microsoft.AspNetCore\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Warning\"\u003c/span\u003e\n\u003cspan class=\"hdl\"\u003e\u003cspan class=\"err\"\u003e-\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"Urls\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"http://*:5000;https://*:5001\"\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp data-sourcepos=\"36:1-36:144\"\u003eDockerの設定ファイルです。Dockerfileの中でNuGetからパッケージをインストールと証明書の作成をしています。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"yaml\" data-sourcepos=\"37:1-50:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003edocker-compose.yml\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"na\"\u003eversion\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'\u003c/span\u003e\u003cspan class=\"s\"\u003e3.4'\u003c/span\u003e\n\n\u003cspan class=\"na\"\u003eservices\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"na\"\u003ewebapp\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eimage\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esamle-example-image\u003c/span\u003e\n    \u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e.\u003c/span\u003e\n    \u003cspan class=\"na\"\u003econtainer_name\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003esamle-example\u003c/span\u003e\n    \u003cspan class=\"na\"\u003eports\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e5000:5000\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e5001:5001\u003c/span\u003e\n    \u003cspan class=\"na\"\u003evolumes\u003c/span\u003e\u003cspan class=\"pi\"\u003e:\u003c/span\u003e\n      \u003cspan class=\"pi\"\u003e-\u003c/span\u003e \u003cspan class=\"s\"\u003e./saml-example:/opt/saml-example\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"dockerfile\" data-sourcepos=\"51:1-68:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eDockerfile\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e mcr.microsoft.com/dotnet/sdk:6.0\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# HTTPS通信のための証明書を作成しています。\u003c/span\u003e\n\u003cspan class=\"k\"\u003eRUN \u003c/span\u003e\u003cspan class=\"nb\"\u003emkdir\u003c/span\u003e /https\n\u003cspan class=\"k\"\u003eRUN \u003c/span\u003edotnet dev-certs https \u003cspan class=\"nt\"\u003e-ep\u003c/span\u003e /https/aspnetapp.pfx \u003cspan class=\"nt\"\u003e-p\u003c/span\u003e password\n\n\u003cspan class=\"k\"\u003eENV\u003c/span\u003e\u003cspan class=\"s\"\u003e ASPNETCORE_Kestrel__Certificates__Default__Password=password\u003c/span\u003e\n\u003cspan class=\"k\"\u003eENV\u003c/span\u003e\u003cspan class=\"s\"\u003e ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e\u003cspan class=\"s\"\u003e saml-example /opt/saml-example\u003c/span\u003e\n\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /opt/saml-example\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# NuGetパッケージをインストールしています。\u003c/span\u003e\n\u003cspan class=\"k\"\u003eRUN \u003c/span\u003edotnet add package ITfoxtec.Identity.Saml2 \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e 4.8.2\n\u003cspan class=\"k\"\u003eRUN \u003c/span\u003edotnet add package ITfoxtec.Identity.Saml2.MvcCore \u003cspan class=\"nt\"\u003e--version\u003c/span\u003e 4.8.2\n\n\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e\u003cspan class=\"s\"\u003e [ \"dotnet\", \"watch\", \"run\" ]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp data-sourcepos=\"69:1-69:12\"\u003e今の構成\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"70:1-77:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003edocker-compose.yml\nDockerfile\nsaml-example\n  |- appsettings.Development.json\n  |- \n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"78:1-79:120\"\u003eここまででASP.NETの初期画面が起動することを確認します。\u003ccode\u003edocker-compose up -d\u003c/code\u003eを実行し、  \u003ca href=\"https://localhost:5001\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://localhost:5001\u003c/a\u003e にアクセスして確認してください。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/54efe0d69610e5014e340e5d009cd935abdc47b4/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f34393531316233312d356564612d623433362d623639382d6237643831613735323933342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F49511b31-5eda-b436-b698-b7d81a752934.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=356d1de8ebe756c593ad3104c8296680\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/49511b31-5eda-b436-b698-b7d81a752934.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F49511b31-5eda-b436-b698-b7d81a752934.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=dd3ba001451dff1742636898d78734e6 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"81:1-81:23\"\u003e\n\u003cspan id=\"プログラム実装\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E5%AE%9F%E8%A3%85\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプログラム実装\u003c/h1\u003e\n\u003cdetails\u003e\u003csummary\u003eプログラムが長いので折りたたみにしました\u003c/summary\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_c_sharp\" data-sourcepos=\"85:1-120:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eProgram.cs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2.Schemas.Metadata\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2.MvcCore.Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWebApplication\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreateBuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// Add services to the container.\u003c/span\u003e\n\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAddRazorPages\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfigure\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfiguration\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGetSection\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Saml2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfigure\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"n\"\u003esaml2Configuration\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"n\"\u003esaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAllowedAudienceUris\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAdd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIssuer\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eentityDescriptor\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eEntityDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"n\"\u003eentityDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadIdPSsoDescriptorFromUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eUri\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eConfiguration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Saml2:IdPMetadata\"\u003c/span\u003e\u003cspan class=\"p\"\u003e]));\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eentityDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdPSsoDescriptor\u003c/span\u003e \u003cspan class=\"p\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"n\"\u003esaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSingleSignOnDestination\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eentityDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdPSsoDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSingleSignOnServices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFirst\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eLocation\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"n\"\u003esaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSignatureValidationCertificates\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAddRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eentityDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdPSsoDescriptor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSigningCertificates\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eException\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"IdPSsoDescriptor not loaded from metadata.\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eServices\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAddSaml2\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\n\u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUseRouting\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eMapDefaultControllerRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUseSaml2\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_c_sharp\" data-sourcepos=\"121:1-190:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eAuthController.cs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2.Schemas\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2.MvcCore\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Collections.Generic\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Threading.Tasks\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.AspNetCore.Authorization\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.AspNetCore.Mvc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003esaml_example.Identity\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.Extensions.Options\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Security.Authentication\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003esaml_example.Controllers\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eAllowAnonymous\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nf\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Auth\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAuthController\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eController\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003econst\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003erelayStateReturnUrl\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"ReturnUrl\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003ereadonly\u003c/span\u003e \u003cspan class=\"n\"\u003eSaml2Configuration\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eAuthController\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIOptions\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSaml2Configuration\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003econfigAccessor\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"n\"\u003econfig\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003econfigAccessor\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nf\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eIActionResult\u003c/span\u003e \u003cspan class=\"nf\"\u003eLogin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003ereturnUrl\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSaml2RedirectBinding\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eSetRelayStateQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eDictionary\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003erelayStateReturnUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereturnUrl\u003c/span\u003e \u003cspan class=\"p\"\u003e??\u003c/span\u003e \u003cspan class=\"n\"\u003eUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"~/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eBind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSaml2AuthnRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e)).\u003c/span\u003e\u003cspan class=\"nf\"\u003eToActionResult\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nf\"\u003eRoute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"AssertionConsumerService\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"n\"\u003eTask\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eIActionResult\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eAssertionConsumerService\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSaml2PostBinding\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003esaml2AuthnResponse\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSaml2AuthnResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eReadSamlResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToGenericHttpRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003esaml2AuthnResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esaml2AuthnResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eStatus\u003c/span\u003e \u003cspan class=\"p\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eSaml2StatusCodes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSuccess\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e                \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eAuthenticationException\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e$\"SAML Response status: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003esaml2AuthnResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eStatus\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eUnbind\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eToGenericHttpRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003esaml2AuthnResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"n\"\u003esaml2AuthnResponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCreateSession\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpContext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eclaimsTransform\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclaimsPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eClaimsTransform\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eTransform\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclaimsPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003erelayStateQuery\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eGetRelayStateQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ereturnUrl\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erelayStateQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContainsKey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erelayStateReturnUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003erelayStateQuery\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003erelayStateReturnUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"~/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ereturnUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nf\"\u003eHttpPost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Logout\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eValidateAntiForgeryToken\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003easync\u003c/span\u003e \u003cspan class=\"n\"\u003eTask\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eIActionResult\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eLogout\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(!\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIsAuthenticated\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eContent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"~/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ebinding\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSaml2PostBinding\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003esaml2LogoutRequest\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eawait\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eSaml2LogoutRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eDeleteSession\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpContext\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eRedirect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"~/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_c_sharp\" data-sourcepos=\"191:1-247:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eClaimsTransform.cs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eITfoxtec.Identity.Saml2.Claims\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Collections.Generic\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Linq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Security.Claims\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003esaml_example.Identity\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eClaimsTransform\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"nf\"\u003eTransform\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(!\u003c/span\u003e\u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIsAuthenticated\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e                \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eCreateClaimsPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"nf\"\u003eCreateClaimsPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eclaims\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"c1\"\u003e// All claims\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"n\"\u003eclaims\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eAddRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClaims\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"c1\"\u003e// Or custom claims\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"c1\"\u003e//claims.AddRange(GetSaml2LogoutClaims(incomingPrincipal));\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"c1\"\u003e//claims.Add(new Claim(ClaimTypes.NameIdentifier, GetClaimValue(incomingPrincipal, ClaimTypes.NameIdentifier)));\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eClaimsPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eClaimsIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclaims\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthenticationType\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eClaimTypes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNameIdentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eClaimTypes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eRole\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e                \u003cspan class=\"n\"\u003eBootstrapContext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eincomingPrincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003eBootstrapContext\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eIEnumerable\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetSaml2LogoutClaims\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eyield\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSaml2ClaimTypes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNameId\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eyield\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSaml2ClaimTypes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNameIdFormat\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003eyield\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eSaml2ClaimTypes\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eSessionIndex\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"n\"\u003eClaim\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003eclaimType\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIdentity\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003eClaims\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eWhere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eType\u003c/span\u003e \u003cspan class=\"p\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003eclaimType\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003eFirstOrDefault\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetClaimValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsPrincipal\u003c/span\u003e \u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003eclaimType\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eclaim\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetClaim\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprincipal\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eclaimType\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eclaim\u003c/span\u003e \u003cspan class=\"p\"\u003e!=\u003c/span\u003e \u003cspan class=\"k\"\u003enull\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eclaim\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eValue\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_http\" data-sourcepos=\"248:1-282:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e_Layout.cshtml\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;li class=\"nav-item\"\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;a class=\"nav-link text-dark\" asp-area=\"\" asp-page=\"/Index\"\u0026gt;Home\u0026lt;/a\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;li class=\"nav-item\"\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;a class=\"nav-link text-dark\" asp-area=\"\" asp-page=\"/Privacy\"\u0026gt;Privacy\u0026lt;/a\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;/li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e@if (((System.Security.Claims.ClaimsIdentity)User.Identity).IsAuthenticated)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;li class=\"nav-item\"\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        \u0026lt;a class=\"nav-link text-dark\" asp-area=\"\" asp-page=\"/Claims\"\u0026gt;SAML Claims\u0026lt;/a\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;/li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        @if (User.Identity.Name != null)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        {\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e            \u0026lt;span class=\"navbar-text\"\u0026gt;Hello, @User.Identity.Name!\u0026lt;/span\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        }\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        else\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        {\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e            \u0026lt;span class=\"navbar-text\"\u0026gt;Hello\u0026lt;/span\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        }\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;/li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        \u0026lt;form class=\"form-inline\" asp-controller=\"Auth\" asp-action=\"Logout\"\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e            \u0026lt;button type=\"submit\" class=\"nav-link btn btn-link text-dark\"\u0026gt;Logout\u0026lt;/button\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        \u0026lt;/form\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;/li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003eelse\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;li class=\"nav-item\"\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e        \u0026lt;a class=\"nav-link text-dark\" asp-controller=\"Auth\" asp-action=\"Login\"\u0026gt;Login\u0026lt;/a\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e    \u0026lt;/li\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_html\" data-sourcepos=\"283:1-301:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eClaims.cshtml\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e@page\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+ @model ClaimsModel\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+ @{\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+     ViewData[\"Title\"] = \"Home page\";\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+ }\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+ \n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+ \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"row\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+     \u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"col-md-12\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+         \u003cspan class=\"nt\"\u003e\u0026lt;h2\u0026gt;\u003c/span\u003eThe users Claims (Iteration on User.Claims)\u003cspan class=\"nt\"\u003e\u0026lt;/h2\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+         \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+             @foreach (var claim in User.Claims)\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+             {\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+                 \u003cspan class=\"nt\"\u003e\u0026lt;strong\u0026gt;\u003c/span\u003e@claim.Type\u003cspan class=\"nt\"\u003e\u0026lt;/strong\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;br\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;span\u003c/span\u003e \u003cspan class=\"na\"\u003estyle=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"padding-left: 10px\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003eValue: @claim.Value\u003cspan class=\"nt\"\u003e\u0026lt;/span\u0026gt;\u003c/span\u003e \u003cspan class=\"nt\"\u003e\u0026lt;br\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+             }\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+         \u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+     \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e+ \u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_c_sharp\" data-sourcepos=\"302:1-330:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eClaims.cshtml.cs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Collections.Generic\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Linq\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem.Threading.Tasks\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.AspNetCore.Mvc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.AspNetCore.Mvc.RazorPages\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.AspNetCore.Authorization\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eMicrosoft.Extensions.Logging\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003esaml_example.Pages\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eAuthorize\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eClaimsModel\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ePageModel\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003eprivate\u003c/span\u003e \u003cspan class=\"k\"\u003ereadonly\u003c/span\u003e \u003cspan class=\"n\"\u003eILogger\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsModel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e_logger\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eClaimsModel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eILogger\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eClaimsModel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e            \u003cspan class=\"n\"\u003e_logger\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elogger\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eOnGet\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/details\u003e\n\u003ch2 data-sourcepos=\"334:1-334:22\"\u003e\n\u003cspan id=\"oktaアプリ作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#okta%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eOktaアプリ作成\u003c/h2\u003e\n\u003cp data-sourcepos=\"335:1-342:120\"\u003eApplications \u0026gt; Create App Integration \u0026gt; SAML 2.0\u003cbr\u003e\nApp Name: 任意の値（ex. SAML_SAMPLE）\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/2e61913455a6895b24c9c6f82f8e41abd93e6e6c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f35656664336462612d643661322d303035342d336565662d6431326132636631313536322e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F5efd3dba-d6a2-0054-3eef-d12a2cf11562.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d3929fc97ae751641a85441386f6544a\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/5efd3dba-d6a2-0054-3eef-d12a2cf11562.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F5efd3dba-d6a2-0054-3eef-d12a2cf11562.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=949c6800ac0a947b1d4370dbde01ce20 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nSingle sign on URL: \u003ca href=\"https://localhost:5001/Auth/AssertionConsumerService\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://localhost:5001/Auth/AssertionConsumerService\u003c/a\u003e\u003cbr\u003e\nAudience URI(SP Entity ID): 任意の値（ex. SAML_SAMPLE）\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/955a17db6e3d1e6e2998e922456f72b1aaee71f7/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f66353039616435612d633530662d613765372d346166392d3030303332383237626136342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2Ff509ad5a-c50f-a7e7-4af9-00032827ba64.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d55bae1ae1cf9df7ba75e8e9986255a4\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/f509ad5a-c50f-a7e7-4af9-00032827ba64.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2Ff509ad5a-c50f-a7e7-4af9-00032827ba64.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=3cad9c3a5c56162dd4790fd5e9830176 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nアプリ作成後、Sign OnタブのSAML Signing CertificatesのStatusがActive \u0026gt; Actions \u0026gt; View IdP metadataのリンクをコピーしておきます。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/bcca72b5e7c184228361f58464c28d3966fb6668/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f66653635666537342d643864612d353538342d343761372d3436343536356466313261362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2Ffe65fe74-d8da-5584-47a7-464565df12a6.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=921f8f2880ecef2e3d3c3da24b6c491a\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/fe65fe74-d8da-5584-47a7-464565df12a6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2Ffe65fe74-d8da-5584-47a7-464565df12a6.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=a4e2655cbf72f53303db8b1304c5c6bb 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 data-sourcepos=\"344:1-344:13\"\u003e\n\u003cspan id=\"saml設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#saml%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSAML設定\u003c/h2\u003e\n\u003cp data-sourcepos=\"345:1-347:31\"\u003eIdPMetadata: メタデータのURL\u003cbr\u003e\nIssuer: Audience URI(SP Entity ID)と同じ値\u003cbr\u003e\nCertificateValidationMode: None\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_json\" data-sourcepos=\"348:1-357:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eappsettings.json\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"AllowedHosts\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"*\"\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"Saml2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"IdPMetadata\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"https://trial-2479249.okta.com/app/exk3fk23t0ToAVGwU697/sso/saml/metadata\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"Issuer\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"SAML_Example\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"SignatureAlgorithm\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"CertificateValidationMode\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"None\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nl\"\u003e\"RevocationMode\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\"NoCheck\"\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"err\"\u003e+\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch1 data-sourcepos=\"358:1-358:14\"\u003e\n\u003cspan id=\"動作確認\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e動作確認\u003c/h1\u003e\n\u003cp data-sourcepos=\"359:1-364:120\"\u003eLoginボタンをクリックします。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/fffa5a1b20f739f45c646296d7aaaf04145556eb/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f61636131356365642d613936322d326263342d343638662d3435616365633161396662362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2Faca15ced-a962-2bc4-468f-45acec1a9fb6.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=def0109e689fa370a71a5003a0002d20\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/aca15ced-a962-2bc4-468f-45acec1a9fb6.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2Faca15ced-a962-2bc4-468f-45acec1a9fb6.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1c4449e2029efb292b9dcbc8ee8af7cf 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nOktaのログイン画面が表示されるのでログインします。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/c0f9cf85c75fb7040422e9bbd0e428e4822ddd4e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f33346637636637662d353532632d666561352d373335382d3862373665356665383836622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F34f7cf7f-552c-fea5-7358-8b76e5fe886b.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=5627ed718f03c4fbc3449af9aaeb6d0a\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/34f7cf7f-552c-fea5-7358-8b76e5fe886b.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F34f7cf7f-552c-fea5-7358-8b76e5fe886b.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1753505c092df129f0b441170f09efe6 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nアプリにログインしOktaのユーザー名が表示されます。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/fe8b9dd079ec38587ad80a305b0982aff4287fe0/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f32393332342f36343836323533632d333764622d633738622d373030642d6337616635643733373935662e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F6486253c-37db-c78b-700d-c7af5d73795f.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=7ee77b93aa2144e75b6e1cb321843bce\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/6486253c-37db-c78b-700d-c7af5d73795f.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F29324%2F6486253c-37db-c78b-700d-c7af5d73795f.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=f0efbc808479c1a4d2d2182f104e786d 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"366:1-366:11\"\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\u003cp data-sourcepos=\"368:1-368:81\"\u003eここまでの構成です。編集したファイルのみ記述してます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"370:1-386:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003edocker-compose.yml\nDockerfile\nsaml-example\n  |- appsettings.Development.json\n  |- appsettings.json\n  |- Program.cs\n  |- ClaimsTransform.cs\n  |- Pages\n    |- Claims.cshtml\n    |- Claims.cshtml.cs\n    |- Shared\n      |- _Layout.cshtml\n  |- Controllers\n    |- AuthController.cs\n  ...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"388:1-388:169\"\u003eこの実装はSP-Initiatedです。以下のようなフローとなります。今回使用したパッケージはIdp-Initiatedにも対応しているようです。\u003c/p\u003e\n\u003cqiita-mermaid data-content='{\"data\":\"sequenceDiagram\\n actor U as User\\n participant A as WebApp\\n participant I as Idp\\n U-\u0026gt;\u0026gt;+A: 1. Loginボタン押下\\n A-\u0026gt;\u0026gt;+I: 2. リダイレクト\\n deactivate A\\n I--\u0026gt;\u0026gt;U: 3. Idpのログイン画面\\n U--\u0026gt;\u0026gt;I: 4. ログイン情報入力\\n I--\u0026gt;\u0026gt;-U: 5. SAMLアサーション\\n U--\u0026gt;\u0026gt;+A: 6. リダイレクト\\n A--\u0026gt;\u0026gt;-U: 7. ログイン成功\",\"key\":\"83982032625b178431afb2588a70871f\"}'\u003e\u003c/qiita-mermaid\u003e\n\u003ch1 data-sourcepos=\"404:1-404:17\"\u003e\n\u003cspan id=\"個人の感想\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%80%8B%E4%BA%BA%E3%81%AE%E6%84%9F%E6%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e個人の感想\u003c/h1\u003e\n\u003cp data-sourcepos=\"406:1-407:233\"\u003e日本製のSaaSだとSAML機能が付いているサービスがそもそも少なく、対応していたとしても追加料金で10,000/月以上、あるいはもっと、掛かる場合があってちょっとぼったくりかなぁと思ったりしました。\u003cbr\u003e\n海外製はSAMLに対応しているサービスが多く、追加料金が掛からないイメージです。この辺に海外との差を感じました。SAMLくらいは標準プランで対応すべきです→日本企業。\u003c/p\u003e\n",
    "body": "SAMLの認証プログラムのサンプルを作る機会があったので手順を記述します。\n# 環境\n- __Idp__ Okta\n- __WSL2__ Ubuntu22.04.01\n- __Editor__ VSCode\n- __Docker Image__ mcr.microsoft.com/dotnet/sdk\n\nhttps://hub.docker.com/_/microsoft-dotnet-sdk/\n\n- __.NET__ .NET 6 C#\n- __NuGet Package__\n    - ITfoxtec.Identity.Saml2 v4.8.2\n    - ITfoxtec.Identity.Saml2.Mvc v4.8.2\n\nhttps://www.itfoxtec.com/IdentitySaml2\n\n# 参考サイト\nhttps://developer.okta.com/blog/2020/10/23/how-to-authenticate-with-saml-in-aspnet-core-and-csharp\n\n# 環境構築\nWSLに.NET6をインストールし、ASP.NETのプロジェクトを作成します。\n```bash\n$ sudo apt update \u0026\u0026 sudo apt install dotnet6\n$ dotnet new webapp -o saml-example\n```\nsaml-exampleディレクトリに入りappsettings.Development.jsonに以下の行を追加してローカルで起動するポートを固定します。\n```diff_json:appsettings.Development.json\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft.AspNetCore\": \"Warning\"\n-   }\n+   },\n+   \"Urls\": \"http://*:5000;https://*:5001\"\n```\nDockerの設定ファイルです。Dockerfileの中でNuGetからパッケージをインストールと証明書の作成をしています。\n```yaml:docker-compose.yml\nversion: '3.4'\n\nservices:\n  webapp:\n    image: samle-example-image\n    build: .\n    container_name: samle-example\n    ports:\n      - 5000:5000\n      - 5001:5001\n    volumes:\n      - ./saml-example:/opt/saml-example\n```\n```dockerfile:Dockerfile\nFROM mcr.microsoft.com/dotnet/sdk:6.0\n\n# HTTPS通信のための証明書を作成しています。\nRUN mkdir /https\nRUN dotnet dev-certs https -ep /https/aspnetapp.pfx -p password\n\nENV ASPNETCORE_Kestrel__Certificates__Default__Password=password\nENV ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx\n\nCOPY saml-example /opt/saml-example\nWORKDIR /opt/saml-example\n# NuGetパッケージをインストールしています。\nRUN dotnet add package ITfoxtec.Identity.Saml2 --version 4.8.2\nRUN dotnet add package ITfoxtec.Identity.Saml2.MvcCore --version 4.8.2\n\nCMD [ \"dotnet\", \"watch\", \"run\" ]\n```\n今の構成\n```\ndocker-compose.yml\nDockerfile\nsaml-example\n  |- appsettings.Development.json\n  |- \n  ...\n```\nここまででASP.NETの初期画面が起動することを確認します。`docker-compose up -d`を実行し、  https://localhost:5001 にアクセスして確認してください。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/49511b31-5eda-b436-b698-b7d81a752934.png)\n\n# プログラム実装\n\n\u003cdetails\u003e\u003csummary\u003eプログラムが長いので折りたたみにしました\u003c/summary\u003e\n\n```diff_c_sharp:Program.cs\n+ using ITfoxtec.Identity.Saml2;\n+ using ITfoxtec.Identity.Saml2.Schemas.Metadata;\n+ using ITfoxtec.Identity.Saml2.MvcCore.Configuration;\n\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\nbuilder.Services.AddRazorPages();\n\n+ builder.Services.Configure\u003cSaml2Configuration\u003e(builder.Configuration.GetSection(\"Saml2\"));\n+ builder.Services.Configure\u003cSaml2Configuration\u003e(saml2Configuration =\u003e\n+ {\n+     saml2Configuration.AllowedAudienceUris.Add(saml2Configuration.Issuer);\n+\n+     var entityDescriptor = new EntityDescriptor();\n+     entityDescriptor.ReadIdPSsoDescriptorFromUrl(new Uri(builder.Configuration[\"Saml2:IdPMetadata\"]));\n+     if (entityDescriptor.IdPSsoDescriptor != null)\n+     {\n+         saml2Configuration.SingleSignOnDestination = entityDescriptor.IdPSsoDescriptor.SingleSignOnServices.First().Location;\n+         saml2Configuration.SignatureValidationCertificates.AddRange(entityDescriptor.IdPSsoDescriptor.SigningCertificates);\n+     }\n+     else\n+     {\n+         throw new Exception(\"IdPSsoDescriptor not loaded from metadata.\");\n+     }\n+ });\n+ builder.Services.AddSaml2();\n\n...\n\napp.UseRouting();\n+ app.MapDefaultControllerRoute();\n+ app.UseSaml2();\n```\n```diff_c_sharp:AuthController.cs\n+ using ITfoxtec.Identity.Saml2;\n+ using ITfoxtec.Identity.Saml2.Schemas;\n+ using ITfoxtec.Identity.Saml2.MvcCore;\n+ using System.Collections.Generic;\n+ using System.Threading.Tasks;\n+ using Microsoft.AspNetCore.Authorization;\n+ using Microsoft.AspNetCore.Mvc;\n+ using saml_example.Identity;\n+ using Microsoft.Extensions.Options;\n+ using System.Security.Authentication;\n+ \n+ namespace saml_example.Controllers\n+ {\n+     [AllowAnonymous]\n+     [Route(\"Auth\")]\n+     public class AuthController : Controller\n+     {\n+         const string relayStateReturnUrl = \"ReturnUrl\";\n+         private readonly Saml2Configuration config;\n+ \n+         public AuthController(IOptions\u003cSaml2Configuration\u003e configAccessor)\n+         {\n+             config = configAccessor.Value;\n+         }\n+ \n+         [Route(\"Login\")]\n+         public IActionResult Login(string returnUrl = null)\n+         {\n+             var binding = new Saml2RedirectBinding();\n+             binding.SetRelayStateQuery(new Dictionary\u003cstring, string\u003e { { relayStateReturnUrl, returnUrl ?? Url.Content(\"~/\") } });\n+ \n+             return binding.Bind(new Saml2AuthnRequest(config)).ToActionResult();\n+         }\n+ \n+         [Route(\"AssertionConsumerService\")]\n+         public async Task\u003cIActionResult\u003e AssertionConsumerService()\n+         {\n+             var binding = new Saml2PostBinding();\n+             var saml2AuthnResponse = new Saml2AuthnResponse(config);\n+ \n+             binding.ReadSamlResponse(Request.ToGenericHttpRequest(), saml2AuthnResponse);\n+             if (saml2AuthnResponse.Status != Saml2StatusCodes.Success)\n+             {\n+                 throw new AuthenticationException($\"SAML Response status: {saml2AuthnResponse.Status}\");\n+             }\n+             binding.Unbind(Request.ToGenericHttpRequest(), saml2AuthnResponse);\n+             await saml2AuthnResponse.CreateSession(HttpContext, claimsTransform: (claimsPrincipal) =\u003e ClaimsTransform.Transform(claimsPrincipal));\n+ \n+             var relayStateQuery = binding.GetRelayStateQuery();\n+             var returnUrl = relayStateQuery.ContainsKey(relayStateReturnUrl) ? relayStateQuery[relayStateReturnUrl] : Url.Content(\"~/\");\n+             return Redirect(returnUrl);\n+         }\n+ \n+         [HttpPost(\"Logout\")]\n+         [ValidateAntiForgeryToken]\n+         public async Task\u003cIActionResult\u003e Logout()\n+         {\n+             if (!User.Identity.IsAuthenticated)\n+             {\n+                 return Redirect(Url.Content(\"~/\"));\n+             }\n+ \n+             var binding = new Saml2PostBinding();\n+             var saml2LogoutRequest = await new Saml2LogoutRequest(config, User).DeleteSession(HttpContext);\n+             return Redirect(\"~/\");\n+         }\n+     }\n+ }\n```\n```diff_c_sharp:ClaimsTransform.cs\n+ using ITfoxtec.Identity.Saml2.Claims;\n+ using System.Collections.Generic;\n+ using System.Linq;\n+ using System.Security.Claims;\n+ \n+ namespace saml_example.Identity\n+ {\n+     public static class ClaimsTransform\n+     {\n+         public static ClaimsPrincipal Transform(ClaimsPrincipal incomingPrincipal)\n+         {\n+             if (!incomingPrincipal.Identity.IsAuthenticated)\n+             {\n+                 return incomingPrincipal;\n+             }\n+ \n+             return CreateClaimsPrincipal(incomingPrincipal);\n+         }\n+ \n+         private static ClaimsPrincipal CreateClaimsPrincipal(ClaimsPrincipal incomingPrincipal)\n+         {\n+             var claims = new List\u003cClaim\u003e();\n+ \n+             // All claims\n+             claims.AddRange(incomingPrincipal.Claims);\n+ \n+             // Or custom claims\n+             //claims.AddRange(GetSaml2LogoutClaims(incomingPrincipal));\n+             //claims.Add(new Claim(ClaimTypes.NameIdentifier, GetClaimValue(incomingPrincipal, ClaimTypes.NameIdentifier)));\n+ \n+             return new ClaimsPrincipal(new ClaimsIdentity(claims, incomingPrincipal.Identity.AuthenticationType, ClaimTypes.NameIdentifier, ClaimTypes.Role)\n+             {\n+                 BootstrapContext = ((ClaimsIdentity)incomingPrincipal.Identity).BootstrapContext\n+             });\n+         }\n+ \n+         private static IEnumerable\u003cClaim\u003e GetSaml2LogoutClaims(ClaimsPrincipal principal)\n+         {\n+             yield return GetClaim(principal, Saml2ClaimTypes.NameId);\n+             yield return GetClaim(principal, Saml2ClaimTypes.NameIdFormat);\n+             yield return GetClaim(principal, Saml2ClaimTypes.SessionIndex);\n+         }\n+ \n+         private static Claim GetClaim(ClaimsPrincipal principal, string claimType)\n+         {\n+             return ((ClaimsIdentity)principal.Identity).Claims.Where(c =\u003e c.Type == claimType).FirstOrDefault();\n+         }\n+ \n+         private static string GetClaimValue(ClaimsPrincipal principal, string claimType)\n+         {\n+             var claim = GetClaim(principal, claimType);\n+             return claim != null ? claim.Value : null;\n+         }\n+     }\n+ }\n```\n```diff_http:_Layout.cshtml\n- \u003cli class=\"nav-item\"\u003e\n-     \u003ca class=\"nav-link text-dark\" asp-area=\"\" asp-page=\"/Index\"\u003eHome\u003c/a\u003e\n- \u003c/li\u003e\n- \u003cli class=\"nav-item\"\u003e\n-     \u003ca class=\"nav-link text-dark\" asp-area=\"\" asp-page=\"/Privacy\"\u003ePrivacy\u003c/a\u003e\n- \u003c/li\u003e\n+ @if (((System.Security.Claims.ClaimsIdentity)User.Identity).IsAuthenticated)\n+ {\n+     \u003cli class=\"nav-item\"\u003e\n+         \u003ca class=\"nav-link text-dark\" asp-area=\"\" asp-page=\"/Claims\"\u003eSAML Claims\u003c/a\u003e\n+     \u003c/li\u003e\n+     \u003cli\u003e\n+         @if (User.Identity.Name != null)\n+         {\n+             \u003cspan class=\"navbar-text\"\u003eHello, @User.Identity.Name!\u003c/span\u003e\n+         }\n+         else\n+         {\n+             \u003cspan class=\"navbar-text\"\u003eHello\u003c/span\u003e\n+         }\n+     \u003c/li\u003e\n+     \u003cli\u003e\n+         \u003cform class=\"form-inline\" asp-controller=\"Auth\" asp-action=\"Logout\"\u003e\n+             \u003cbutton type=\"submit\" class=\"nav-link btn btn-link text-dark\"\u003eLogout\u003c/button\u003e\n+         \u003c/form\u003e\n+     \u003c/li\u003e\n+ }\n+ else\n+ {\n+     \u003cli class=\"nav-item\"\u003e\n+         \u003ca class=\"nav-link text-dark\" asp-controller=\"Auth\" asp-action=\"Login\"\u003eLogin\u003c/a\u003e\n+     \u003c/li\u003e\n+ }\n```\n```diff_html:Claims.cshtml\n+ @page\n+ @model ClaimsModel\n+ @{\n+     ViewData[\"Title\"] = \"Home page\";\n+ }\n+ \n+ \u003cdiv class=\"row\"\u003e\n+     \u003cdiv class=\"col-md-12\"\u003e\n+         \u003ch2\u003eThe users Claims (Iteration on User.Claims)\u003c/h2\u003e\n+         \u003cp\u003e\n+             @foreach (var claim in User.Claims)\n+             {\n+                 \u003cstrong\u003e@claim.Type\u003c/strong\u003e \u003cbr /\u003e \u003cspan style=\"padding-left: 10px\"\u003eValue: @claim.Value\u003c/span\u003e \u003cbr /\u003e\n+             }\n+         \u003c/p\u003e\n+     \u003c/div\u003e\n+ \u003c/div\u003e\n```\n```diff_c_sharp:Claims.cshtml.cs\n+ using System;\n+ using System.Collections.Generic;\n+ using System.Linq;\n+ using System.Threading.Tasks;\n+ using Microsoft.AspNetCore.Mvc;\n+ using Microsoft.AspNetCore.Mvc.RazorPages;\n+ using Microsoft.AspNetCore.Authorization;\n+ using Microsoft.Extensions.Logging;\n+ \n+ namespace saml_example.Pages\n+ {\n+     [Authorize]\n+     public class ClaimsModel : PageModel\n+     {\n+         private readonly ILogger\u003cClaimsModel\u003e _logger;\n+ \n+         public ClaimsModel(ILogger\u003cClaimsModel\u003e logger)\n+         {\n+             _logger = logger;\n+         }\n+ \n+         public void OnGet()\n+         {\n+ \n+         }\n+     }\n+ }\n```\n\n\u003c/details\u003e\n\n## Oktaアプリ作成\nApplications \u003e Create App Integration \u003e SAML 2.0\nApp Name: 任意の値（ex. SAML_SAMPLE）\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/5efd3dba-d6a2-0054-3eef-d12a2cf11562.png)\nSingle sign on URL: https://localhost:5001/Auth/AssertionConsumerService\nAudience URI(SP Entity ID): 任意の値（ex. SAML_SAMPLE）\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/f509ad5a-c50f-a7e7-4af9-00032827ba64.png)\nアプリ作成後、Sign OnタブのSAML Signing CertificatesのStatusがActive \u003e Actions \u003e View IdP metadataのリンクをコピーしておきます。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/fe65fe74-d8da-5584-47a7-464565df12a6.png)\n\n## SAML設定\nIdPMetadata: メタデータのURL\nIssuer: Audience URI(SP Entity ID)と同じ値\nCertificateValidationMode: None\n```diff_json:appsettings.json\n+  \"AllowedHosts\": \"*\",\n+  \"Saml2\": {\n+      \"IdPMetadata\": \"https://trial-2479249.okta.com/app/exk3fk23t0ToAVGwU697/sso/saml/metadata\",\n+      \"Issuer\": \"SAML_Example\",\n+      \"SignatureAlgorithm\": \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n+      \"CertificateValidationMode\": \"None\",\n+      \"RevocationMode\": \"NoCheck\"\n+  }\n```\n# 動作確認\nLoginボタンをクリックします。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/aca15ced-a962-2bc4-468f-45acec1a9fb6.png)\nOktaのログイン画面が表示されるのでログインします。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/34f7cf7f-552c-fea5-7358-8b76e5fe886b.png)\nアプリにログインしOktaのユーザー名が表示されます。\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/6486253c-37db-c78b-700d-c7af5d73795f.png)\n\n# まとめ\n\nここまでの構成です。編集したファイルのみ記述してます。\n\n```\ndocker-compose.yml\nDockerfile\nsaml-example\n  |- appsettings.Development.json\n  |- appsettings.json\n  |- Program.cs\n  |- ClaimsTransform.cs\n  |- Pages\n    |- Claims.cshtml\n    |- Claims.cshtml.cs\n    |- Shared\n      |- _Layout.cshtml\n  |- Controllers\n    |- AuthController.cs\n  ...\n```\n\nこの実装はSP-Initiatedです。以下のようなフローとなります。今回使用したパッケージはIdp-Initiatedにも対応しているようです。\n```mermaid\nsequenceDiagram\n  actor U as User\n  participant A as WebApp\n  participant I as Idp\n  U-\u003e\u003e+A: 1. Loginボタン押下\n  A-\u003e\u003e+I: 2. リダイレクト\n  deactivate A\n  I--\u003e\u003eU: 3. Idpのログイン画面\n  U--\u003e\u003eI: 4. ログイン情報入力\n  I--\u003e\u003e-U: 5. SAMLアサーション\n  U--\u003e\u003e+A: 6. リダイレクト\n  A--\u003e\u003e-U: 7. ログイン成功\n```\n\n# 個人の感想\n\n日本製のSaaSだとSAML機能が付いているサービスがそもそも少なく、対応していたとしても追加料金で10,000/月以上、あるいはもっと、掛かる場合があってちょっとぼったくりかなぁと思ったりしました。\n海外製はSAMLに対応しているサービスが多く、追加料金が掛からないイメージです。この辺に海外との差を感じました。SAMLくらいは標準プランで対応すべきです→日本企業。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:18:04+09:00",
    "group": null,
    "id": "85eb2d0e25b3cd290e14",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "C#", "versions": [] },
      { "name": ".NET", "versions": [] },
      { "name": "SAML", "versions": [] },
      { "name": "WSL", "versions": [] },
      { "name": ".net6", "versions": [] }
    ],
    "title": "[C#]SAMLサンプル（.NET6）",
    "updated_at": "2022-11-26T22:18:04+09:00",
    "url": "https://qiita.com/urushibata/items/85eb2d0e25b3cd290e14",
    "user": {
      "description": "インフラエンジニアやっています。\r\n…(´･ω･｀)",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 12,
      "github_login_name": "urushibata",
      "id": "urushibata",
      "items_count": 47,
      "linkedin_id": "",
      "location": "Tokyo, Japan",
      "name": "urushibata shinya",
      "organization": "",
      "permanent_id": 29324,
      "profile_image_url": "https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/29324/profile-images/1557655751",
      "team_only": false,
      "twitter_screen_name": "s_urushibata",
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:23\"\u003e\n\u003cspan id=\"この記事の内容\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%81%AE%E8%A8%98%E4%BA%8B%E3%81%AE%E5%86%85%E5%AE%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこの記事の内容\u003c/h1\u003e\n\u003cp data-sourcepos=\"3:1-4:206\"\u003eGo言語の学習のため、『テスト駆動開発』\u003csup\u003e\u003ca href=\"#fn-1\" id=\"fnref-1\"\u003e1\u003c/a\u003e\u003c/sup\u003eの第Ⅰ部 多国通貨をやってみました。\u003cbr\u003e\n言語の違いから書籍のとおりにいかないことはあると思いますが、そういった部分も含めて「Goでどのようにできるのか」を学んでいくという趣旨です。\u003c/p\u003e\n\u003cdiv data-sourcepos=\"7:1-9:3\" class=\"note warn\"\u003e\n\u003cspan class=\"fa fa-fw fa-exclamation-circle\"\u003e\u003c/span\u003e\u003cdiv\u003e\n\u003cp data-sourcepos=\"8:1-8:39\"\u003eGo、Javaともにビギナーです。\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003ch1 data-sourcepos=\"11:1-11:52\"\u003e\n\u003cspan id=\"testingパッケージにはassertxxxが無い\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#testing%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AB%E3%81%AFassertxxx%E3%81%8C%E7%84%A1%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003etesting\u003c/code\u003eパッケージには\u003ccode\u003eassertXXX\u003c/code\u003eが無い\u003c/h1\u003e\n\u003cp data-sourcepos=\"13:1-13:167\"\u003e最初のテストで\u003ccode\u003eassertEquals\u003c/code\u003eの代替を探すことになったのですが、\u003ccode\u003etesting\u003c/code\u003eパッケージにはそのようなものはありませんでした。\u003c/p\u003e\n\u003cp data-sourcepos=\"15:1-15:50\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/Jxck_/items/8717a5982547cfa54ebc\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"17:1-18:243\"\u003eFAQにも目を通しましたが、「エラーメッセージをきちんと書こう」とか「必要なものはすでにある」というのが理由だそうです。\u003cbr\u003e\nなるほどと思いつつも「一つのアサーションで３行になるのは長いな」と思うこともありました。そのあたりはテストを工夫したりヘルパーを用意するなどが必要になるでしょう。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"20:1-20:38\"\u003e\n\u003cspan id=\"publicprivateとテストのpackate\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#publicprivate%E3%81%A8%E3%83%86%E3%82%B9%E3%83%88%E3%81%AEpackate\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003epublic/privateとテストのpackate\u003c/h1\u003e\n\u003cp data-sourcepos=\"22:1-23:268\"\u003eGoでは「メソッド名の先頭の文字が大文字か小文字か」でpublic/privateが決まります。\u003cbr\u003e\nしかし私は本来publicにすべきメソッドがprivateであることにしばらく気が付きませんでした。もちろん慣れの問題もあるのですが、大きな原因はテストとプロダクトが同じパッケージだったからです。\u003c/p\u003e\n\u003cp data-sourcepos=\"25:1-26:142\"\u003eGoでは同じパッケージ同士であればprivateにアクセスできますが、私の経験では通常の手段でテストからprivateメソッドにアクセスすることは出来なかったので、これは新しい経験です。\u003cbr\u003e\nprivateメソッドを直接テストするケースは少ないので、この点についてどう考えるべきか調べてみました。\u003c/p\u003e\n\u003cp data-sourcepos=\"28:1-28:199\"\u003eいくつかのフレームワークを見てみましたが、一部のテストは\u003ccode\u003exxx_test\u003c/code\u003eというパッケージになっていました。どうやら使い分けをしているようです。\u003c/p\u003e\n\u003cp data-sourcepos=\"30:1-31:132\"\u003eそして、同様の疑問についての回答をみつけました。\u003cbr\u003e\n「ブラックボックステストをするかホワイトボックステストするか」で考えるのが良さそうです。\u003c/p\u003e\n\u003cp data-sourcepos=\"33:1-33:99\"\u003e\u003cqiita-embed-ogp src=\"https://stackoverflow.com/questions/19998250/proper-package-naming-for-testing-with-the-go-language\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"35:1-35:26\"\u003e\n\u003cspan id=\"継承をどうするか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B6%99%E6%89%BF%E3%82%92%E3%81%A9%E3%81%86%E3%81%99%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e継承をどうするか\u003c/h1\u003e\n\u003cp data-sourcepos=\"37:1-37:201\"\u003eGoにはクラスが無いので当然その継承もありません。\u003ccode\u003eDollar\u003c/code\u003eクラスや\u003ccode\u003eFranc\u003c/code\u003eクラスから\u003ccode\u003eMoney\u003c/code\u003eクラスに移行していく過程は悩みどころが多い部分でした。\u003c/p\u003e\n\u003cp data-sourcepos=\"39:1-39:114\"\u003eまずクラスは構造体、継承は構造体の埋め込みとインターフェースで対応しました。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"go\" data-sourcepos=\"41:1-54:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e大雑把な構造\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eMoneyInterface\u003c/span\u003e \u003cspan class=\"k\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMoneyInterface\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eDollar\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp data-sourcepos=\"56:1-56:69\"\u003e特に困ったのはFrancとDollarを比較する部分です。\u003csup\u003e\u003ca href=\"#fn-2\" id=\"fnref-2\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"java\" data-sourcepos=\"59:1-65:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nc\"\u003eMoney\u003c/span\u003e \u003cspan class=\"n\"\u003emoney\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nc\"\u003eMoney\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eobject\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003emoney\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eamount\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003egetClass\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emoney\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetClass\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"67:1-68:242\"\u003eこの\u003ccode\u003egetClass()\u003c/code\u003eにどう対応したものかと\u003ccode\u003ereflect\u003c/code\u003eパッケージや型アサーションなどを模索したのですが、「これは言語の違いでどうしようもない」という結論になりました。\u003cbr\u003e\n（もともとは歩幅を小さくしてこのような過程を踏んでいるので頑張ってやるものでも無いのですが、最初に示したようにGoを理解するためなので何か手段は無いのか探りました）\u003c/p\u003e\n\u003cp data-sourcepos=\"70:1-70:89\"\u003e具体的には、直前の章で一般化した\u003ccode\u003eEquals\u003c/code\u003eを次のようにしました。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"go\" data-sourcepos=\"72:1-89:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e通貨の比較はDollarとFrancそれぞれで、amountはMoneyで\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e// Dollar\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e \u003cspan class=\"n\"\u003eDollar\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e \u003cspan class=\"n\"\u003eMoneyInterface\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereflect\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ereflect\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Franc\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"n\"\u003eFranc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e \u003cspan class=\"n\"\u003eMoneyInterface\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ereflect\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003ereflect\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTypeOf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e// Money\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emi\u003c/span\u003e \u003cspan class=\"n\"\u003eMoneyInterface\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003emi\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cul data-sourcepos=\"91:1-93:0\"\u003e\n\u003cli data-sourcepos=\"91:1-91:25\" class=\"task-list-item\"\u003e\n\u003cinput type=\"checkbox\" class=\"task-list-item-checkbox\" checked disabled\u003eequals の一般化\u003c/li\u003e\n\u003cli data-sourcepos=\"92:1-93:0\" class=\"task-list-item\"\u003e\n\u003cinput type=\"checkbox\" class=\"task-list-item-checkbox\" disabled\u003e改めて equals の一般化 \u003cstrong\u003eNEW\u003c/strong\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 data-sourcepos=\"94:1-94:20\"\u003e\n\u003cspan id=\"構造体の比較\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A7%8B%E9%80%A0%E4%BD%93%E3%81%AE%E6%AF%94%E8%BC%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e構造体の比較\u003c/h1\u003e\n\u003cp data-sourcepos=\"96:1-96:156\"\u003e\u003ccode\u003eMoney\u003c/code\u003eから\u003ccode\u003eExpression\u003c/code\u003eへ一般化するため、\u003ccode\u003eTimes\u003c/code\u003eメソッドの戻り値を置き換えたとき、テストがレッドになりました。\u003csup\u003e\u003ca href=\"#fn-3\" id=\"fnref-3\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_go\" data-sourcepos=\"99:1-116:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"k\"\u003einterface\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eReduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBank\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eTimes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emultiplier\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eTimes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emultiplier\u003c/span\u003e \u003cspan class=\"kt\"\u003eint64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eExpression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003emultiplier\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrency\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eTestMultiplication\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etesting\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efive\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eNewDollar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eNewDollar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTimes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eten\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatalf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`amount is not equal. expect: 10, actual: %d`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"118:1-118:230\"\u003e\u003ccode\u003eExpression\u003c/code\u003eインターフェースには\u003ccode\u003eEquals\u003c/code\u003eメソッド無いためです。JavaではObjectクラスに実装されているため問題なく実行できるのでしょうが、Goでは異なる結果となりました。\u003c/p\u003e\n\u003cp data-sourcepos=\"120:1-120:114\"\u003eここで書籍の流れに沿うためにあえて目をそらしていた構造体の比較に注目します。\u003c/p\u003e\n\u003cp data-sourcepos=\"122:1-122:54\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/Sekky0905/items/1ff4979d80b163e0aeb6\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"124:1-124:206\"\u003eGoでは構造体の各フィールドが同じ値であれば\u003ccode\u003e==\u003c/code\u003eで等価と判断されるようです。現状ではそれで十分なので、\u003ccode\u003eEquals\u003c/code\u003eメソッドを廃止することにしました。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_go\" data-sourcepos=\"126:1-140:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003em\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emoney\u003c/span\u003e \u003cspan class=\"n\"\u003eMoney\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003ebool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003emoney\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eamount\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e        \u003cspan class=\"n\"\u003em\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrency\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003emoney\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrency\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003eTestMultiplication\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003etesting\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efive\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eNewDollar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eten\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003eNewDollar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"hdl\"\u003e\u003cspan class=\"o\"\u003e- \u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTimes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eten\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eEquals\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"n\"\u003efive\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTimes\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"n\"\u003eNewDollar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e        \u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eFatalf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e`amount is not equal. expect: 10, actual: %d`\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eproduct\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eAmount\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch1 data-sourcepos=\"142:1-142:11\"\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\u003cp data-sourcepos=\"144:1-145:183\"\u003e異なる言語で実装されたものを「Goでどのように実装するか」という形でやってみたところ、Goの特徴がよく見えたと思います。\u003cbr\u003e\nマニュアルやチュートリアルをやっているだけでは得られない学びがあるので、複数の言語での実装を試してみてはいかがでしょうか。\u003c/p\u003e\n\u003csection class=\"footnotes\"\u003e\n\u003col\u003e\n\u003cli id=\"fn-1\"\u003e\n\u003cp data-sourcepos=\"5:6-5:55\"\u003e\u003ca href=\"https://shop.ohmsha.co.jp/shopdetail/000000004967/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://shop.ohmsha.co.jp/shopdetail/000000004967/\u003c/a\u003e \u003ca href=\"#fnref-1\" class=\"\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn-2\"\u003e\n\u003cp data-sourcepos=\"57:6-57:48\"\u003e第７章 疑念をテストに翻訳する \u003ca href=\"#fnref-2\" class=\"\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli id=\"fn-3\"\u003e\n\u003cp data-sourcepos=\"97:6-97:57\"\u003e第１５章 テスト任せとコンパイラ任せ \u003ca href=\"#fnref-3\" class=\"\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/section\u003e\n",
    "body": "# この記事の内容\n\nGo言語の学習のため、『テスト駆動開発』[^1]の第Ⅰ部 多国通貨をやってみました。\n言語の違いから書籍のとおりにいかないことはあると思いますが、そういった部分も含めて「Goでどのようにできるのか」を学んでいくという趣旨です。\n[^1]:https://shop.ohmsha.co.jp/shopdetail/000000004967/\n\n:::note warn\nGo、Javaともにビギナーです。\n:::\n\n# `testing`パッケージには`assertXXX`が無い\n\n最初のテストで`assertEquals`の代替を探すことになったのですが、`testing`パッケージにはそのようなものはありませんでした。\n\nhttps://qiita.com/Jxck_/items/8717a5982547cfa54ebc\n\nFAQにも目を通しましたが、「エラーメッセージをきちんと書こう」とか「必要なものはすでにある」というのが理由だそうです。\nなるほどと思いつつも「一つのアサーションで３行になるのは長いな」と思うこともありました。そのあたりはテストを工夫したりヘルパーを用意するなどが必要になるでしょう。\n\n# public/privateとテストのpackate\n\nGoでは「メソッド名の先頭の文字が大文字か小文字か」でpublic/privateが決まります。\nしかし私は本来publicにすべきメソッドがprivateであることにしばらく気が付きませんでした。もちろん慣れの問題もあるのですが、大きな原因はテストとプロダクトが同じパッケージだったからです。\n\nGoでは同じパッケージ同士であればprivateにアクセスできますが、私の経験では通常の手段でテストからprivateメソッドにアクセスすることは出来なかったので、これは新しい経験です。\nprivateメソッドを直接テストするケースは少ないので、この点についてどう考えるべきか調べてみました。\n\nいくつかのフレームワークを見てみましたが、一部のテストは`xxx_test`というパッケージになっていました。どうやら使い分けをしているようです。\n\nそして、同様の疑問についての回答をみつけました。\n「ブラックボックステストをするかホワイトボックステストするか」で考えるのが良さそうです。\n\nhttps://stackoverflow.com/questions/19998250/proper-package-naming-for-testing-with-the-go-language\n\n# 継承をどうするか\n\nGoにはクラスが無いので当然その継承もありません。`Dollar`クラスや`Franc`クラスから`Money`クラスに移行していく過程は悩みどころが多い部分でした。\n\nまずクラスは構造体、継承は構造体の埋め込みとインターフェースで対応しました。\n\n```go:大雑把な構造\ntype MoneyInterface interface {\n    Amount() int64\n    Equals(MoneyInterface) bool\n}\n\ntype Money struct {\n    amount int64\n}\n\ntype Dollar struct {\n    Money\n}\n```\n\n特に困ったのはFrancとDollarを比較する部分です。[^2]\n[^2]:第７章 疑念をテストに翻訳する\n\n```java\npublic boolean equals(Object object) {\n    Money money = (Money) object;\n    return amount == money.amount\n        \u0026\u0026 getClass().equals(money.getClass());\n}\n```\n\nこの`getClass()`にどう対応したものかと`reflect`パッケージや型アサーションなどを模索したのですが、「これは言語の違いでどうしようもない」という結論になりました。\n（もともとは歩幅を小さくしてこのような過程を踏んでいるので頑張ってやるものでも無いのですが、最初に示したようにGoを理解するためなので何か手段は無いのか探りました）\n\n具体的には、直前の章で一般化した`Equals`を次のようにしました。\n\n```go:通貨の比較はDollarとFrancそれぞれで、amountはMoneyで\n// Dollar\nfunc (d Dollar) Equals(mi MoneyInterface) bool {\n    return d.Money.Equals(mi) \u0026\u0026\n        reflect.TypeOf(d).Name() == reflect.TypeOf(mi).Name()\n}\n\n// Franc\nfunc (f Franc) Equals(mi MoneyInterface) bool {\n    return f.Money.Equals(mi) \u0026\u0026\n        reflect.TypeOf(f).Name() == reflect.TypeOf(mi).Name()\n}\n\n// Money\nfunc (m Money) Equals(mi MoneyInterface) bool {\n    return m.amount == mi.Amount()\n}\n```\n\n- [x] equals の一般化\n- [ ] 改めて equals の一般化 **NEW**\n\n# 構造体の比較\n\n`Money`から`Expression`へ一般化するため、`Times`メソッドの戻り値を置き換えたとき、テストがレッドになりました。[^3]\n[^3]:第１５章 テスト任せとコンパイラ任せ\n\n```diff_go\ntype Expression interface {\n    Reduce(Bank, string) Money\n}\n\n- func (m Money) Times(multiplier int64) Money {\n+ func (m Money) Times(multiplier int64) Expression {\n    return Money{m.amount * multiplier, m.currency}\n}\n\nfunc TestMultiplication(t *testing.T) {\n    five := NewDollar(5)\n    ten := NewDollar(10)\n    if product := five.Times(2); !ten.Equals(product) {\n        t.Fatalf(`amount is not equal. expect: 10, actual: %d`, product.Amount())\n    }\n}\n```\n\n`Expression`インターフェースには`Equals`メソッド無いためです。JavaではObjectクラスに実装されているため問題なく実行できるのでしょうが、Goでは異なる結果となりました。\n\nここで書籍の流れに沿うためにあえて目をそらしていた構造体の比較に注目します。\n\nhttps://qiita.com/Sekky0905/items/1ff4979d80b163e0aeb6\n\nGoでは構造体の各フィールドが同じ値であれば`==`で等価と判断されるようです。現状ではそれで十分なので、`Equals`メソッドを廃止することにしました。\n\n```diff_go\n- func (m Money) Equals(money Money) bool {\n-     return m.amount == money.amount \u0026\u0026\n-         m.currency == money.currency\n- }\n\nfunc TestMultiplication(t *testing.T) {\n    five := NewDollar(5)\n    ten := NewDollar(10)\n-   if product := five.Times(2); !ten.Equals(product) {\n+   if product := five.Times(2); product != NewDollar(10) {\n        t.Fatalf(`amount is not equal. expect: 10, actual: %d`, product.Amount())\n    }\n}\n```\n\n# まとめ\n\n異なる言語で実装されたものを「Goでどのように実装するか」という形でやってみたところ、Goの特徴がよく見えたと思います。\nマニュアルやチュートリアルをやっているだけでは得られない学びがあるので、複数の言語での実装を試してみてはいかがでしょうか。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:14:29+09:00",
    "group": null,
    "id": "b02dd87299c8e57799fa",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Go", "versions": [] },
      { "name": "TDD", "versions": [] },
      { "name": "テスト駆動開発", "versions": [] }
    ],
    "title": "GoでTDD本の多国通貨やってみた",
    "updated_at": "2022-11-26T22:14:29+09:00",
    "url": "https://qiita.com/blue32a/items/b02dd87299c8e57799fa",
    "user": {
      "description": "アオノはHNです。\r\nレガシーコードと戦うソフトウェアエンジニア。プログラマー。\r\n興味：リファクタリング、保守性の高い設計、モデリング、開発を駆動するテスト",
      "facebook_id": "",
      "followees_count": 8,
      "followers_count": 18,
      "github_login_name": "blue32a",
      "id": "blue32a",
      "items_count": 25,
      "linkedin_id": "",
      "location": "北海道",
      "name": "アオノ",
      "organization": "",
      "permanent_id": 595926,
      "profile_image_url": "https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/595926/profile-images/1648113064",
      "team_only": false,
      "twitter_screen_name": "blue32a_jp",
      "website_url": "https://github.com/blue32a"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"2:1-4:67\"\u003e意識したことがないとあまり気づかないと思うのですが、\u003cbr\u003e\n\u003ccode\u003eMenu\u003c/code\u003e内のボタンの表示される順番は、\u003cbr\u003e\n\u003ccode\u003eMenu\u003c/code\u003eの\u003ccode\u003elabel\u003c/code\u003eに近い方向から順番に表示されます。\u003c/p\u003e\n\u003ctable data-sourcepos=\"6:1-8:331\"\u003e\n\u003cthead\u003e\n\u003ctr data-sourcepos=\"6:1-6:3\"\u003e\n\u003cth data-sourcepos=\"6:2-6:1\"\u003e\u003c/th\u003e\n\u003cth data-sourcepos=\"6:3-6:2\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr data-sourcepos=\"8:1-8:331\"\u003e\n\u003ctd data-sourcepos=\"8:2-8:165\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/2f74f191366658e87046d4e8636716d49827054e/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f313734353337312f37306635656431362d656331372d313334352d323361642d3432633635373439373234612e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2F70f5ed16-ec17-1345-23ad-42c65749724a.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=d6787b6fd26a7c4c0a95653d7f08c462\" alt=\"スクリーンショット 2022-11-26 22.09.16.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/70f5ed16-ec17-1345-23ad-42c65749724a.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2F70f5ed16-ec17-1345-23ad-42c65749724a.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=b9a0cca7505548cee1e98006d50a58da 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd data-sourcepos=\"8:167-8:330\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/2dde18798fefc71cdabf6bb536b591cdda78f58d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f313734353337312f39333436353335332d373138362d353736302d353665662d6330313461343930613564372e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2F93465353-7186-5760-56ef-c014a490a5d7.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=bcfa3de0d4b9c4664176f533a949ebee\" alt=\"スクリーンショット 2022-11-26 22.09.24.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/93465353-7186-5760-56ef-c014a490a5d7.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2F93465353-7186-5760-56ef-c014a490a5d7.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=595b01cd326e13aecaf1a3fb959b543f 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp data-sourcepos=\"10:1-11:63\"\u003eどこに配置されていても上から表示されてほしい場合があります。\u003cbr\u003e\nそんな時の解決方法を紹介しようと思います。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"13:1-13:14\"\u003e\n\u003cspan id=\"解決方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決方法\u003c/h1\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"diff_swift\" data-sourcepos=\"14:1-44:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"kd\"\u003eimport\u003c/span\u003e \u003cspan class=\"kt\"\u003eSwiftUI\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"kt\"\u003eContentView\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kt\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kd\"\u003esome\u003c/span\u003e \u003cspan class=\"kt\"\u003eView\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kt\"\u003eVStack\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kt\"\u003eMenu\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン5\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nv\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"メニューボタン\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e          \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emenuOrder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efixed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e            \u003cspan class=\"kt\"\u003eSpacer\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"kt\"\u003eMenu\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"ボタン5\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nv\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"kt\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"メニューボタン\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"hil\"\u003e\u003cspan class=\"o\"\u003e+ \u003c/span\u003e          \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emenuOrder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efixed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ctable data-sourcepos=\"46:1-48:331\"\u003e\n\u003cthead\u003e\n\u003ctr data-sourcepos=\"46:1-46:3\"\u003e\n\u003cth data-sourcepos=\"46:2-46:1\"\u003e\u003c/th\u003e\n\u003cth data-sourcepos=\"46:3-46:2\"\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr data-sourcepos=\"48:1-48:331\"\u003e\n\u003ctd data-sourcepos=\"48:2-48:165\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/6b60c70cba71402bd98ccaed174779773c1cde51/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f313734353337312f65356536346636302d653336362d613235342d383036302d3933613132633563343939382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2Fe5e64f60-e366-a254-8060-93a12c5c4998.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=fbbcdc7d1c30df28e5525719edf9c25a\" alt=\"スクリーンショット 2022-11-26 22.12.25.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/e5e64f60-e366-a254-8060-93a12c5c4998.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2Fe5e64f60-e366-a254-8060-93a12c5c4998.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=1c45f73abd87c13d433a8ddbb85d7823 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/td\u003e\n\u003ctd data-sourcepos=\"48:167-48:330\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/1db26112d11f8d3faf6fefc57a99b837e025aa2c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f313734353337312f65636138366537392d346236642d623732362d663333662d6231323434643731643738392e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2Feca86e79-4b6d-b726-f33f-b1244d71d789.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=6d0fb7094231cc092469457c108493bd\" alt=\"スクリーンショット 2022-11-26 22.12.15.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/eca86e79-4b6d-b726-f33f-b1244d71d789.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F1745371%2Feca86e79-4b6d-b726-f33f-b1244d71d789.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=a8e522f20d23e30f4ce60a612da402e8 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch1 data-sourcepos=\"50:1-50:11\"\u003e\n\u003cspan id=\"おわり\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%82%8F%E3%82%8A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおわり\u003c/h1\u003e\n\u003cp data-sourcepos=\"51:1-51:39\"\u003eiOS16からしか使えないです😭\u003c/p\u003e\n\u003cp data-sourcepos=\"53:1-53:68\"\u003e\u003cqiita-embed-ogp src=\"https://developer.apple.com/documentation/swiftui/grid/menuorder(_:)\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n",
    "body": "# はじめに\n意識したことがないとあまり気づかないと思うのですが、\n`Menu`内のボタンの表示される順番は、\n`Menu`の`label`に近い方向から順番に表示されます。\n\n|||\n|-|-|\n|![スクリーンショット 2022-11-26 22.09.16.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/70f5ed16-ec17-1345-23ad-42c65749724a.png)|![スクリーンショット 2022-11-26 22.09.24.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/93465353-7186-5760-56ef-c014a490a5d7.png)|\n\nどこに配置されていても上から表示されてほしい場合があります。\nそんな時の解決方法を紹介しようと思います。\n\n# 解決方法\n```diff_swift\nimport SwiftUI\n\nstruct ContentView: View {\n    var body: some View {\n        VStack {\n            Menu {\n                Button(\"ボタン1\") { }\n                Button(\"ボタン2\") { }\n                Button(\"ボタン3\") { }\n                Button(\"ボタン4\") { }\n                Button(\"ボタン5\") { }\n            } label: {\n                Text(\"メニューボタン\")\n            }\n+           .menuOrder(.fixed)\n            Spacer()\n            Menu {\n                Button(\"ボタン1\") { }\n                Button(\"ボタン2\") { }\n                Button(\"ボタン3\") { }\n                Button(\"ボタン4\") { }\n                Button(\"ボタン5\") { }\n            } label: {\n                Text(\"メニューボタン\")\n            }\n+           .menuOrder(.fixed)\n        }\n    }\n}\n```\n\n|||\n|-|-|\n|![スクリーンショット 2022-11-26 22.12.25.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/e5e64f60-e366-a254-8060-93a12c5c4998.png)|![スクリーンショット 2022-11-26 22.12.15.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1745371/eca86e79-4b6d-b726-f33f-b1244d71d789.png)|\n\n# おわり\niOS16からしか使えないです😭\n\nhttps://developer.apple.com/documentation/swiftui/grid/menuorder(_:)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T22:14:21+09:00",
    "group": null,
    "id": "f801e9abde1e459bc8bf",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 1,
    "tags": [
      { "name": "iOS", "versions": [] },
      { "name": "Swift", "versions": [] },
      { "name": "menu", "versions": [] },
      { "name": "SwiftUI", "versions": [] }
    ],
    "title": "【SwiftUI】Menuのボタン順番について",
    "updated_at": "2022-11-26T22:14:21+09:00",
    "url": "https://qiita.com/SNQ-2001/items/f801e9abde1e459bc8bf",
    "user": {
      "description": "24卒",
      "facebook_id": "",
      "followees_count": 14,
      "followers_count": 22,
      "github_login_name": "SNQ-2001",
      "id": "SNQ-2001",
      "items_count": 236,
      "linkedin_id": "",
      "location": "Japan",
      "name": "SNQ",
      "organization": "",
      "permanent_id": 1745371,
      "profile_image_url": "https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/1745371/16fffb96aaa9ea64e44d21f407f053ca3445a99b/x_large.png?1633600430",
      "team_only": false,
      "twitter_screen_name": "SNQ2001",
      "website_url": "https://taishin-miyamoto.com"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-2:104\"\u003eプログラミング言語には、目的別に様々なものがあり、できることや書き方が異なります。\u003cbr\u003e\n今回は、いくつかのプログラミング言語の特徴とHello Worldの例を紹介します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"\" data-sourcepos=\"3:1-5:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e実行例\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003eHello, world!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"6:1-6:4\"\u003e\n\u003cspan id=\"c\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#c\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eC\u003c/h2\u003e\n\u003cp data-sourcepos=\"7:1-7:90\"\u003eこの言語は長い歴史があり、今でも多くの用途に使われています。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"c\" data-sourcepos=\"8:1-15:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehello.c\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;studio.h\u0026gt;\n\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Hello, world\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"16:1-16:13\"\u003e\n\u003cspan id=\"javascript\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#javascript\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eJavaScript\u003c/h2\u003e\n\u003cp data-sourcepos=\"17:1-18:59\"\u003e主にフロントエンドで使用される言語。\u003cbr\u003e\nHTML/CSSとともに、ブラウザ上で動作します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"js\" data-sourcepos=\"19:1-21:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehello.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"s2\"\u003eHello, world!\u003c/span\u003e\u003cspan class=\"dl\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"22:1-22:7\"\u003e\n\u003cspan id=\"ruby\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ruby\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRuby\u003c/h2\u003e\n\u003cp data-sourcepos=\"23:1-23:33\"\u003e日本で開発された言語。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"rb\" data-sourcepos=\"24:1-26:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehello.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello, world!\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"27:1-27:9\"\u003e\n\u003cspan id=\"python\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#python\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePython\u003c/h2\u003e\n\u003cp data-sourcepos=\"28:1-29:81\"\u003eAIから科学計算まで様々な用途で使用されている言語。\u003cbr\u003e\n構文が単純なため、入門用として使われることが多いです。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"py\" data-sourcepos=\"30:1-32:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehello.py\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"Hello, world!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"33:1-33:6\"\u003e\n\u003cspan id=\"php\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#php\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePHP\u003c/h2\u003e\n\u003cp data-sourcepos=\"34:1-35:75\"\u003eWebアプリ用のプログラムを作るための言語。\u003cbr\u003e\nサーバーサイドで動作するプログラムを作成できます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"php\" data-sourcepos=\"36:1-40:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehello.php\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan class=\"k\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"Hello, world!\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e?\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"41:1-41:8\"\u003e\n\u003cspan id=\"basic\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#basic\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBASIC\u003c/h2\u003e\n\u003cp data-sourcepos=\"42:1-43:37\"\u003ePCが一般に普及し始めた頃に普及し、多くのPCに標準搭載された言語。\u003cbr\u003e\n1行ずつ命令を実行します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bas\" data-sourcepos=\"44:1-46:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehello.bas\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003ePRINT \"Hello, world!\";\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n",
    "body": "プログラミング言語には、目的別に様々なものがあり、できることや書き方が異なります。\n今回は、いくつかのプログラミング言語の特徴とHello Worldの例を紹介します。\n```:実行例\nHello, world!\n```\n## C\nこの言語は長い歴史があり、今でも多くの用途に使われています。\n```c:hello.c\n#include \u003cstudio.h\u003e\nint main(void)\n{\n printf(\"Hello, world\\n\");\n return 0;\n}\n```\n## JavaScript\n主にフロントエンドで使用される言語。\nHTML/CSSとともに、ブラウザ上で動作します。\n```js:hello.js\nconsole.log(\"Hello, world!\")\n```\n## Ruby\n日本で開発された言語。\n```rb:hello.rb\nputs \"Hello, world!\"\n```\n## Python\nAIから科学計算まで様々な用途で使用されている言語。\n構文が単純なため、入門用として使われることが多いです。\n```py:hello.py\nprint(\"Hello, world!\")\n```\n## PHP\nWebアプリ用のプログラムを作るための言語。\nサーバーサイドで動作するプログラムを作成できます。\n```php:hello.php\n\u003c?php\necho \"Hello, world!\";\n?\u003e\n```\n## BASIC\nPCが一般に普及し始めた頃に普及し、多くのPCに標準搭載された言語。\n1行ずつ命令を実行します。\n```bas:hello.bas\nPRINT \"Hello, world!\";\n```\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:59:30+09:00",
    "group": null,
    "id": "a8d10bda43ffe974076b",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "比較", "versions": [] },
      { "name": "HelloWorld", "versions": [] },
      { "name": "プログラミング言語", "versions": [] }
    ],
    "title": "プログラミング言語の種類",
    "updated_at": "2022-11-26T21:59:30+09:00",
    "url": "https://qiita.com/yukikmt/items/a8d10bda43ffe974076b",
    "user": {
      "description": "主にフロントエンドを得意としています。",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": "yukikmt",
      "id": "yukikmt",
      "items_count": 9,
      "linkedin_id": "",
      "location": "Hyogo, Japan",
      "name": "Yuki Kamata",
      "organization": "School 8x9",
      "permanent_id": 2983272,
      "profile_image_url": "https://avatars.githubusercontent.com/u/114860516?v=4",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": "https://yukikmt.github.io"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"2:1-2:273\"\u003e今回は、Cookieについて説明する。現在、Webサイト訪問時にCookieの使用について、許可を求められることが多くなっている。そのCookieについて誰が管理し、どのような役割で使用されているのか説明する。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"4:1-4:17\"\u003e\n\u003cspan id=\"cookieとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cookie%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCookieとは？\u003c/h1\u003e\n\u003cp data-sourcepos=\"5:1-6:66\"\u003e一言で言うと、ブラウザに一時的に保存されるユーザのWebサイト閲覧データのこと。\u003cbr\u003e\n各ドメインごとにブラウザにデータを保持する。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"8:1-8:32\"\u003e\n\u003cspan id=\"cookieは何で必要なの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cookie%E3%81%AF%E4%BD%95%E3%81%A7%E5%BF%85%E8%A6%81%E3%81%AA%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCookieは何で必要なの？\u003c/h1\u003e\n\u003cp data-sourcepos=\"9:1-11:108\"\u003eここで述べている、Cookieは、HTTP Cookieでありステートフルで状態を保持する。\u003cbr\u003e\nHTTPプロトコルはステートレスで、状態を保存しない。\u003cbr\u003e\nステートレスとステートフルの違いについては、以下の有名な例がわかりやすい\u003c/p\u003e\n\u003cp data-sourcepos=\"13:1-13:255\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/mtakehara21/items/efcbbc3ba58a62c10eb6#%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%AC%E3%82%B9%E3%81%A8%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%95%E3%83%AB%E3%81%A3%E3%81%A6%E7%B5%90%E5%B1%80%E3%81%A9%E3%81%86%E9%81%95%E3%81%86%E3%81%AE\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"15:1-15:258\"\u003eサーバー側がステートレスなのは、大量のHTTPリクエストを受けてHTTPレスポンスを作成するため、一つひとつのクライアントの状態(ユーザIDやパスワード)を保持すると非効率的だからである。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"17:1-17:17\"\u003e\n\u003cspan id=\"cookieの種類\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cookie%E3%81%AE%E7%A8%AE%E9%A1%9E\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCookieの種類\u003c/h1\u003e\n\u003cp data-sourcepos=\"18:1-18:46\"\u003eCookieには以下の2つの種類がある。\u003c/p\u003e\n\u003cul data-sourcepos=\"19:1-21:0\"\u003e\n\u003cli data-sourcepos=\"19:1-19:35\"\u003eファーストパーティCookie\u003c/li\u003e\n\u003cli data-sourcepos=\"20:1-21:0\"\u003eサードパーティCookie\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"22:1-22:352\"\u003eブラウザへの保存場所は同じだが、管理者と用途が異なる。違いを端的に述べると、\u003cstrong\u003e管理者が訪問したWebサイトかどうか\u003c/strong\u003eである。そのWebサイトが管理している場合ファーストパーティCookieであり、別のWebサイトが管理している場合サードパーティCookieである。\u003c/p\u003e\n\u003cp data-sourcepos=\"24:1-24:57\"\u003e以下で違いについて例をもとに説明する。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"26:1-26:36\"\u003e\n\u003cspan id=\"ファーストパーティcookie\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%95%E3%82%A1%E3%83%BC%E3%82%B9%E3%83%88%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3cookie\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eファーストパーティCookie\u003c/h2\u003e\n\u003cp data-sourcepos=\"27:1-29:66\"\u003eファーストパーティCookieは訪問したWebサイトのドメインが管理している。\u003cbr\u003e\n例えるなら会員証のイメージで、ユーザIDやパスワードを保存する。\u003cbr\u003e\nまた、動画を閲覧した際に再生位置も保存する。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"31:1-31:30\"\u003e\n\u003cspan id=\"サードパーティcookie\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B5%E3%83%BC%E3%83%89%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3cookie\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eサードパーティCookie\u003c/h2\u003e\n\u003cp data-sourcepos=\"32:1-35:288\"\u003eサードパーティCookieは、訪問したWebサイト以外の外部のドメインが管理している。\u003cbr\u003e\nリターゲティング広告のこと。先ほどみたWebサイトの商品と同じものが別のWebサイトの広告に表示されとき、サードパーティCookieが使用されている。\u003cbr\u003e\n主に外部のドメインから読み込んだWebサイト内の広告を、個人用にカスタマイズするために使用される。複数のWebサイトをまたいでCookieの内容をトラッキングする。\u003cbr\u003e\nWebサイトを訪問した際に、以下のような「Cookieの使用を許可しますか？」等のダイアログが表示されるのは、サードパーティCookieを使用してユーザの閲覧履歴などを取得する許可をユーザに求めているものである。\u003c/p\u003e\n\u003cp data-sourcepos=\"37:1-37:164\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/4193b6265e53163e2d4a6695ff483636570475bf/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323539323839342f36656234373639372d623063622d393964362d353238332d3732643565306163653462622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2592894%2F6eb47697-b0cb-99d6-5283-72d5e0ace4bb.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=4e2bef00c0ead07c83ff883ec0ef0246\" alt=\"スクリーンショット 2022-11-26 12.44.15.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2592894/6eb47697-b0cb-99d6-5283-72d5e0ace4bb.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2592894%2F6eb47697-b0cb-99d6-5283-72d5e0ace4bb.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=cfcb68976e957fd00b34fbe90538c675 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"40:1-40:177\"\u003e技術は異なるが、スマホでアプリを横断してトラッキングする許可を求めるのも同様の目的でユーザの情報を使用するためである。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"43:1-43:39\"\u003e\n\u003cspan id=\"サードパーティcookieの問題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B5%E3%83%BC%E3%83%89%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3cookie%E3%81%AE%E5%95%8F%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eサードパーティCookieの問題\u003c/h2\u003e\n\u003cp data-sourcepos=\"44:1-44:554\"\u003eサードパーティCookieについては、複数のWebサイトにまたがってユーザの閲覧情報が保持できる。そのため、プライバシー上の問題が指摘され、Googleなどの大手が廃止予定を宣言している。GoogleではサードパーティCookieに代わり、最新のプライバシー保護技術であるプライバシーサンドボックスが使用される予定だ。2022年11月現在において、2023年第3四半期からプライバシーサンドボックスが提供開始予定である。\u003c/p\u003e\n\u003cp data-sourcepos=\"46:1-46:135\"\u003eプライバシーサンドボックスの提供開始時期など最新のスケジュールについては以下が参考になる。\u003c/p\u003e\n\u003cp data-sourcepos=\"48:1-48:76\"\u003e\u003cqiita-embed-ogp src=\"https://privacysandbox.com/intl/ja_jp/open-web/#the-privacy-sandbox-timeline\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"50:1-50:14\"\u003e\n\u003cspan id=\"参考文献\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e参考文献\u003c/h1\u003e\n\u003cp data-sourcepos=\"51:1-51:54\"\u003e\u003cqiita-embed-ogp src=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Cookies\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"53:1-53:51\"\u003e\u003cqiita-embed-ogp src=\"https://japan.googleblog.com/2022/07/blog-post.html\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"55:1-55:43\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=uGduGHUVcTI\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"57:1-57:14\"\u003e\n\u003cspan id=\"おわりに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおわりに\u003c/h1\u003e\n\u003cp data-sourcepos=\"58:1-58:123\"\u003e今回はCookieについて説明した。技術は、確実に時代の変化に伴い変化することを実感した。\u003c/p\u003e\n",
    "body": "# はじめに\n今回は、Cookieについて説明する。現在、Webサイト訪問時にCookieの使用について、許可を求められることが多くなっている。そのCookieについて誰が管理し、どのような役割で使用されているのか説明する。\n\n# Cookieとは？\n一言で言うと、ブラウザに一時的に保存されるユーザのWebサイト閲覧データのこと。\n各ドメインごとにブラウザにデータを保持する。\n\n# Cookieは何で必要なの？\nここで述べている、Cookieは、HTTP Cookieでありステートフルで状態を保持する。\nHTTPプロトコルはステートレスで、状態を保存しない。\nステートレスとステートフルの違いについては、以下の有名な例がわかりやすい\n\nhttps://qiita.com/mtakehara21/items/efcbbc3ba58a62c10eb6#%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%AC%E3%82%B9%E3%81%A8%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%95%E3%83%AB%E3%81%A3%E3%81%A6%E7%B5%90%E5%B1%80%E3%81%A9%E3%81%86%E9%81%95%E3%81%86%E3%81%AE\n\nサーバー側がステートレスなのは、大量のHTTPリクエストを受けてHTTPレスポンスを作成するため、一つひとつのクライアントの状態(ユーザIDやパスワード)を保持すると非効率的だからである。\n\n# Cookieの種類\nCookieには以下の2つの種類がある。\n* ファーストパーティCookie\n* サードパーティCookie\n\nブラウザへの保存場所は同じだが、管理者と用途が異なる。違いを端的に述べると、**管理者が訪問したWebサイトかどうか**である。そのWebサイトが管理している場合ファーストパーティCookieであり、別のWebサイトが管理している場合サードパーティCookieである。\n\n以下で違いについて例をもとに説明する。\n\n## ファーストパーティCookie\nファーストパーティCookieは訪問したWebサイトのドメインが管理している。\n例えるなら会員証のイメージで、ユーザIDやパスワードを保存する。\nまた、動画を閲覧した際に再生位置も保存する。\n\n## サードパーティCookie\nサードパーティCookieは、訪問したWebサイト以外の外部のドメインが管理している。\nリターゲティング広告のこと。先ほどみたWebサイトの商品と同じものが別のWebサイトの広告に表示されとき、サードパーティCookieが使用されている。\n主に外部のドメインから読み込んだWebサイト内の広告を、個人用にカスタマイズするために使用される。複数のWebサイトをまたいでCookieの内容をトラッキングする。\nWebサイトを訪問した際に、以下のような「Cookieの使用を許可しますか？」等のダイアログが表示されるのは、サードパーティCookieを使用してユーザの閲覧履歴などを取得する許可をユーザに求めているものである。\n\n![スクリーンショット 2022-11-26 12.44.15.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2592894/6eb47697-b0cb-99d6-5283-72d5e0ace4bb.png)\n\n\n技術は異なるが、スマホでアプリを横断してトラッキングする許可を求めるのも同様の目的でユーザの情報を使用するためである。\n\n\n## サードパーティCookieの問題\nサードパーティCookieについては、複数のWebサイトにまたがってユーザの閲覧情報が保持できる。そのため、プライバシー上の問題が指摘され、Googleなどの大手が廃止予定を宣言している。GoogleではサードパーティCookieに代わり、最新のプライバシー保護技術であるプライバシーサンドボックスが使用される予定だ。2022年11月現在において、2023年第3四半期からプライバシーサンドボックスが提供開始予定である。\n\nプライバシーサンドボックスの提供開始時期など最新のスケジュールについては以下が参考になる。\n\nhttps://privacysandbox.com/intl/ja_jp/open-web/#the-privacy-sandbox-timeline\n\n# 参考文献\nhttps://developer.mozilla.org/ja/docs/Web/HTTP/Cookies\n\nhttps://japan.googleblog.com/2022/07/blog-post.html\n\nhttps://www.youtube.com/watch?v=uGduGHUVcTI\n\n# おわりに\n今回はCookieについて説明した。技術は、確実に時代の変化に伴い変化することを実感した。\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:53:25+09:00",
    "group": null,
    "id": "848b52a6b87d6a6bf806",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [{ "name": "cookie", "versions": [] }],
    "title": "Cookieの種類",
    "updated_at": "2022-11-26T21:56:04+09:00",
    "url": "https://qiita.com/shinobear01/items/848b52a6b87d6a6bf806",
    "user": {
      "description": "フロントエンドエンジニア。技術これから。",
      "facebook_id": "",
      "followees_count": 2,
      "followers_count": 1,
      "github_login_name": null,
      "id": "shinobear01",
      "items_count": 15,
      "linkedin_id": "",
      "location": "",
      "name": "Shino",
      "organization": "",
      "permanent_id": 2592894,
      "profile_image_url": "https://lh3.googleusercontent.com/a/AATXAJx6H66IkGYe86YK_aii3FlNfGAMoKaNGvYw6_ra=s50-mo",
      "team_only": false,
      "twitter_screen_name": "shinobear01",
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-1:713\"\u003eディープラーニングの根幹ともいえるPythonのNumPyですが、多次元配列を把握するのはややもすると難しく感じられます。特に軸(axis)については混乱することがあります。３次元までは何とか空間的にイメージできますが、４次元以降となると難しくなります。物理学とかでテンソルを学んだ場合はそうではないのかもしれませんが、機械学習で初めてテンソルに出会った人（私）にとってはそうでしょう。この記事は知っている人にとっては、当たり前のことかもしれませんが、自分の備忘録としても残しておきたいと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"3:1-4:113\"\u003enp.sumを例に軸のイメージをつかみます。直感的な理解としては以下のブログが役立ちます。\u003cbr\u003e\n\u003ca href=\"https://deepage.net/features/numpy-axis.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eNumPyの軸(axis)と次元数(ndim)とは何を意味するのか\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"7:1-19:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e([[[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]],\u003c/span\u003e\n\n           \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e]]])\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ec0\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eaxis\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ec1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eaxis\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ec2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eaxis\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"21:1-32:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\n\u003cspan class=\"n\"\u003ec2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e([[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e]])\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ec1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e([[\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e]])\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ec0\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earray\u003c/span\u003e\u003cspan class=\"p\"\u003e([[\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e]])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"35:1-35:289\"\u003e以下のように、\u003cstrong\u003e直感に頼らない軸の理解を、添字を使って行いたいと思います。\u003c/strong\u003e 次元が増えても添字が増えるだけなので、理解できると期待できます。4次元空間とか5次元空間をイメージする必要はありません。\u003c/p\u003e\n\u003cdiv data-sourcepos=\"38:1-76:3\" class=\"note info\"\u003e\n\u003cspan class=\"fa fa-fw fa-check-circle\"\u003e\u003c/span\u003e\u003cdiv\u003e\n\u003cp data-sourcepos=\"39:1-39:33\"\u003e直感に頼らない軸の操作\u003c/p\u003e\n\u003cp data-sourcepos=\"41:1-41:13\"\u003e${{x_n}_m}_l$\u003c/p\u003e\n\u003cul data-sourcepos=\"42:1-45:0\"\u003e\n\u003cli data-sourcepos=\"42:1-42:25\"\u003en : 0次元軸の座標\u003c/li\u003e\n\u003cli data-sourcepos=\"43:1-43:25\"\u003em : 1次元軸の座標\u003c/li\u003e\n\u003cli data-sourcepos=\"44:1-45:0\"\u003el : 2次元軸の座標\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"46:1-46:142\"\u003eaxis = k （次元軸） で sum を取るというのは、k軸以外の軸で同じ添字のものの総和を取るということです。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"math\" data-sourcepos=\"48:1-74:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\\begin{align}\na = \n\u0026amp;[ \\; [{{x_1}_1}_1 \\; {{x_1}_1}_2],\\\\\n\u0026amp;\\;\\; [{{x_1}_2}_1 \\; {{x_1}_2}_2],\\\\\n\u0026amp;\\;\\; [{{x_1}_3}_1 \\; {{x_1}_3}_2] \\; ],\\\\\n\u0026amp;[ \\; [{{x_2}_1}_1 \\; {{x_2}_1}_2],\\\\\n\u0026amp;\\;\\; [{{x_2}_2}_1 \\; {{x_2}_2}_2],\\\\\n\u0026amp;\\;\\; [{{x_2}_3}_1 \\; {{x_2}_3}_2] \\; ]\\\\\n\\\\\n\\\\\nnp.sum(a, axis=2) = [\n\u0026amp;[ \\sum_{k=1}^2 {{x_1}_1}_k ,\\; \\sum_{k=1}^2 {{x_1}_2}_k ,\\; \\sum_{k=1}^2 {{x_1}_3}_k], \\\\\n\u0026amp;[ \\sum_{k=1}^2 {{x_2}_1}_k ,\\; \\sum_{k=1}^2 {{x_2}_2}_k ,\\; \\sum_{k=1}^2 {{x_2}_3}_k]] \\\\\n\\\\\n\\\\\nnp.sum(a, axis=1) = [\n\u0026amp;[ \\sum_{k=1}^3 {{x_1}_k}_1 ,\\; \\sum_{k=1}^3 {{x_1}_k}_2], \\\\\n\u0026amp;[ \\sum_{k=1}^3 {{x_2}_k}_1 ,\\; \\sum_{k=1}^3 {{x_2}_k}_2]] \\\\\n\\\\\n\\\\\nnp.sum(a, axis=0) = [\n\u0026amp;[ \\sum_{k=1}^2 {{x_k}_1}_1 ,\\; \\sum_{k=1}^2 {{x_k}_1}_2], \\\\\n\u0026amp;[ \\sum_{k=1}^2 {{x_k}_2}_1 ,\\; \\sum_{k=1}^2 {{x_k}_2}_2]], \\\\\n\u0026amp;[ \\sum_{k=1}^2 {{x_k}_3}_1 ,\\; \\sum_{k=1}^2 {{x_k}_3}_2]] \\\\\n\\end{align}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003cp data-sourcepos=\"79:1-79:24\"\u003e今回は以上です。\u003c/p\u003e\n",
    "body": "ディープラーニングの根幹ともいえるPythonのNumPyですが、多次元配列を把握するのはややもすると難しく感じられます。特に軸(axis)については混乱することがあります。３次元までは何とか空間的にイメージできますが、４次元以降となると難しくなります。物理学とかでテンソルを学んだ場合はそうではないのかもしれませんが、機械学習で初めてテンソルに出会った人（私）にとってはそうでしょう。この記事は知っている人にとっては、当たり前のことかもしれませんが、自分の備忘録としても残しておきたいと思います。\n\nnp.sumを例に軸のイメージをつかみます。直感的な理解としては以下のブログが役立ちます。\n[NumPyの軸(axis)と次元数(ndim)とは何を意味するのか](https://deepage.net/features/numpy-axis.html)\n\n\n```python:\nb = array([[[0, 1],\n            [2, 3],\n            [4, 5]],\n\n           [[0, 1],\n            [2, 3],\n            [4, 5]]])\n\nc0 = np.sum(b, axis=0)\nc1 = np.sum(b, axis=1)\nc2 = np.sum(b, axis=2)\n```\n\n```python:\n\nc2 = array([[1, 5, 9],\n           [1, 5, 9]])\n\nc1 = array([[6, 9],\n            [6, 9]])\n\nc0 = array([[ 0,  2],\n            [ 4,  6],\n            [ 8, 10]])\n```\n\n\n以下のように、**直感に頼らない軸の理解を、添字を使って行いたいと思います。** 次元が増えても添字が増えるだけなので、理解できると期待できます。4次元空間とか5次元空間をイメージする必要はありません。\n\n\n::: note info\n直感に頼らない軸の操作\n\n${{x_n}_m}_l$\n* n : 0次元軸の座標\n* m : 1次元軸の座標\n* l : 2次元軸の座標\n\naxis = k （次元軸） で sum を取るというのは、k軸以外の軸で同じ添字のものの総和を取るということです。\n\n```math:\n\\begin{align}\na = \n\u0026[ \\; [{{x_1}_1}_1 \\; {{x_1}_1}_2],\\\\\n\u0026\\;\\; [{{x_1}_2}_1 \\; {{x_1}_2}_2],\\\\\n\u0026\\;\\; [{{x_1}_3}_1 \\; {{x_1}_3}_2] \\; ],\\\\\n\u0026[ \\; [{{x_2}_1}_1 \\; {{x_2}_1}_2],\\\\\n\u0026\\;\\; [{{x_2}_2}_1 \\; {{x_2}_2}_2],\\\\\n\u0026\\;\\; [{{x_2}_3}_1 \\; {{x_2}_3}_2] \\; ]\\\\\n\\\\\n\\\\\nnp.sum(a, axis=2) = [\n\u0026[ \\sum_{k=1}^2 {{x_1}_1}_k ,\\; \\sum_{k=1}^2 {{x_1}_2}_k ,\\; \\sum_{k=1}^2 {{x_1}_3}_k], \\\\\n\u0026[ \\sum_{k=1}^2 {{x_2}_1}_k ,\\; \\sum_{k=1}^2 {{x_2}_2}_k ,\\; \\sum_{k=1}^2 {{x_2}_3}_k]] \\\\\n\\\\\n\\\\\nnp.sum(a, axis=1) = [\n\u0026[ \\sum_{k=1}^3 {{x_1}_k}_1 ,\\; \\sum_{k=1}^3 {{x_1}_k}_2], \\\\\n\u0026[ \\sum_{k=1}^3 {{x_2}_k}_1 ,\\; \\sum_{k=1}^3 {{x_2}_k}_2]] \\\\\n\\\\\n\\\\\nnp.sum(a, axis=0) = [\n\u0026[ \\sum_{k=1}^2 {{x_k}_1}_1 ,\\; \\sum_{k=1}^2 {{x_k}_1}_2], \\\\\n\u0026[ \\sum_{k=1}^2 {{x_k}_2}_1 ,\\; \\sum_{k=1}^2 {{x_k}_2}_2]], \\\\\n\u0026[ \\sum_{k=1}^2 {{x_k}_3}_1 ,\\; \\sum_{k=1}^2 {{x_k}_3}_2]] \\\\\n\\end{align}\n```\n\n:::\n\n\n今回は以上です。\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:50:10+09:00",
    "group": null,
    "id": "f75f2428f8841d2eae80",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Python", "versions": [] },
      { "name": "numpy", "versions": [] }
    ],
    "title": "NumPyの軸(axis)について",
    "updated_at": "2022-11-26T21:58:18+09:00",
    "url": "https://qiita.com/sand/items/f75f2428f8841d2eae80",
    "user": {
      "description": "フリーのプログラマです。\r\n仕事ではPython、Node、React、Vueなどを使うことが多いです。\r\n個人的にはHaskell、Elm、Elixir、Phoenixなど関数型言語が好きです。\r\n関数型はシンプルで直感的だから好きですが、オブジェクト指向は複雑で見通しが悪いので苦手です。\r\n確率統計を勉強中。",
      "facebook_id": "",
      "followees_count": 9,
      "followers_count": 93,
      "github_login_name": null,
      "id": "sand",
      "items_count": 233,
      "linkedin_id": "",
      "location": "埼玉",
      "name": "sand mypress",
      "organization": "フリー",
      "permanent_id": 61915,
      "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/61915/profile-images/1511829854",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-1:60\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/sasao-genmaicha/items/0234f7ac12bbd54c2602\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"3:1-3:148\"\u003e前回の記事👆ではAPIを使って欲しい情報を取得したので今回はブラウザ上にそれらを表示したいと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"6:1-6:36\"\u003e\u003cqiita-embed-ogp src=\"https://app-rank-git1.herokuapp.com/\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"8:1-8:143\"\u003e👆こちらは完成したアプリです。GitHubでスター数が多い人気リポジトリーTOP5をスクレイピングしてます。\u003c/p\u003e\n\u003cp data-sourcepos=\"13:1-13:21\"\u003eまずはresults.html\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"15:1-32:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eresult.html\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eextends\u003c/span\u003e \u003cspan class=\"s\"\u003e'base.html'\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eblock\u003c/span\u003e \u003cspan class=\"n\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ediv\u003c/span\u003e \u003cspan class=\"n\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"card text-center\"\u003c/span\u003e \u003cspan class=\"n\"\u003estyle\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"margin: 150px;\"\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eresults\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \n       \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eh3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{{\u003c/span\u003e \u003cspan class=\"n\"\u003eresult\u003c/span\u003e \u003cspan class=\"p\"\u003e}}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003eh3\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \n     \n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eendfor\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e \u003cspan class=\"n\"\u003eaction\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ebutton\u003c/span\u003e \u003cspan class=\"n\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"btn btn-secondary\"\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"submit\"\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003e戻る\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003ebutton\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003eform\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003ediv\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e   \n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"n\"\u003eendblock\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp data-sourcepos=\"34:1-34:97\"\u003eこちらのHTMLはシンプルに仕上げました。まずは上から順に説明します。\u003c/p\u003e\n\u003cp\u003e{% extends 'base.html' %}\u003c/p\u003e\nこちらはflaskのお決まりの呪文。HTMLタグやHEADタグは別のbase.htmlに置いてそこから引っ張ってきてます。コードがスッキリしていい感じ。\n\u003cp\u003e{% block body %}\u003c/p\u003e\nそしてこちらのblockからbody部分を書いていきたいと思います。\n\u003cp data-sourcepos=\"42:1-42:172\"\u003e（注: block直下のdivタグですがこれはbootstrapでデザインを整えてます。今回は結果表示の解説メインなのでこちらは割愛します）\u003c/p\u003e\n\u003cp data-sourcepos=\"44:1-47:69\"\u003eまず５つ取った結果をfor文で回し表示させます。FlaskではHTMLでもfor文が使えるので大変ありがたい。\u003cbr\u003e\n使い方は波括弧とパーセント記号で囲むだけ。ただ注意したいのは結果を入れた変数（今回はresult）は二重の波括弧で囲う必要があります。\u003cbr\u003e\nそして最後に再び波括弧とパーセントでendforと書くだけ。\u003cbr\u003e\n慣れてしまえば割と記述方法は簡単だと思います。\u003c/p\u003e\n\u003cp data-sourcepos=\"52:1-54:34\"\u003eちなみにこの右側の変数resultsはどこから来ているのかというと、\u003cbr\u003e\n{% for result in results %}\u003cbr\u003e\n　　　　　　　　👆これ\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"python\" data-sourcepos=\"56:1-62:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp.py\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"n\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'/results'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e'POST'\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edo_scraping\u003c/span\u003e\u003cspan class=\"p\"\u003e():\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eresults\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003egit_api\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erender_template\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e'results.html'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresults\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eresults\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cp data-sourcepos=\"63:1-63:60\"\u003e前に他の記事で紹介したapp.pyから来てます。\u003c/p\u003e\n\u003cp data-sourcepos=\"65:1-65:239\"\u003e関数do_scraping()の中でTOP5の結果が入ってる別の関数git_api()を引っ張ってきてresultsに格納してます。そしてそのresultsは直下のrender_templateでさらに同じ名前のresultsに格納してます。\u003c/p\u003e\n\u003cp data-sourcepos=\"67:1-67:48\"\u003e・・・なんかわかりずらいですね汗\u003c/p\u003e\n\u003cp data-sourcepos=\"69:1-71:140\"\u003e順番としては..\u003cbr\u003e\n前回紹介したファイルgit.pyをインポートしそのファイル内にある関数git_api()を呼び出してます。\u003cbr\u003e\npythonのお決まりの書き方で.pyを省略して書きます。なのでgit.git_api()に書き直して変数resultsに入れます。\u003c/p\u003e\n\u003cp data-sourcepos=\"73:1-73:207\"\u003eこの時点でresultsには関数git_api()が入ってます。関数git_api()には既にTOP5の結果が入ってます。・・ということはresultsにはもうTOP５が入ってるワケですね。\u003c/p\u003e\n\u003cp data-sourcepos=\"75:1-75:92\"\u003eそしてそのTOP5をさらにrender_template内で変数resultsに入れます（！？）\u003c/p\u003e\n\u003cp data-sourcepos=\"78:1-78:183\"\u003eこれ名前が一緒だからややこしいんですがこの時のresults=resultsは、右側がたった今TOP５を入れたresults、左側がHTMLで使うresultsなんです。\u003c/p\u003e\n\u003cp data-sourcepos=\"80:1-80:85\"\u003eそう、さっきfor文で回したresultsはここで作られてたんですね。\u003c/p\u003e\n\u003cp data-sourcepos=\"82:1-82:421\"\u003e（ちなみにこの二つの変数、名前を一緒にする必要はありません。なので左側をたとえばresults_for_htmlみたいな名前にしてもオッケーです。ただ他の方々が解説してるのを見ると名前の統一は一般的みたいです。その方がシンプルな記述になるからだと思いますが慣れない内は変数名を変えて工夫してみましょう）\u003c/p\u003e\n\u003cp data-sourcepos=\"84:1-84:53\"\u003eこれでやっとHTMLにTOP5が表示できます。\u003c/p\u003e\n\u003cp data-sourcepos=\"86:1-88:164\"\u003e仕上げにformタグでボタンを作って最初のページに戻れるようにしましょう。\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/f247ffc4c405324ab84cf85deb37d97cbf541f9d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f323938303133352f65366533663562322d393534332d633036652d376663352d3261363663313165396133342e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2980135%2Fe6e3f5b2-9543-c06e-7fc5-2a66c11e9a34.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=87812b245fae2c8520d2ea41e255da27\" alt=\"スクリーンショット 2022-11-26 13.29.17.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2980135/e6e3f5b2-9543-c06e-7fc5-2a66c11e9a34.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2980135%2Fe6e3f5b2-9543-c06e-7fc5-2a66c11e9a34.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=67b3d39a466322d9852f452ea1ed99da 1x\" loading=\"lazy\"\u003e\u003c/a\u003e\u003cbr\u003e\nactionでTOPページのURLについてるスラッシュを指定します。buttonを作りTOPページに戻れるように\"submit\"\u003cimg alt=\":stuck_out_tongue_closed_eyes:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f61d.png\" title=\":stuck_out_tongue_closed_eyes:\" width=\"20\" loading=\"lazy\"\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"91:1-91:120\"\u003eこれでひとまず最低限の機能を備えたスクレイピングアプリが完成しましたね。ふぅ・・\u003c/p\u003e\n\u003cp data-sourcepos=\"94:1-95:72\"\u003eこれからもっとデザインを調整したり機能を追加してポートフォリオにしたいと思います。\u003cbr\u003e\n次はbootstrapをマスターしてその辺の解説も追加予定。\u003c/p\u003e\n\u003cp data-sourcepos=\"97:1-98:28\"\u003eまだまだ課題は残ってますがこれでひとまずスクレイピングアプリ編は終了。\u003cbr\u003e\nはぁ、長かった・・w\u003c/p\u003e\n\u003cp data-sourcepos=\"106:1-106:202\"\u003eここまで読んでくださった方、本当にありがとうございます。次回はbootstrapとか、もっとスクレイピングに特化した記事を書きたいと思います\u003cimg alt=\":grinning:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f600.png\" title=\":grinning:\" width=\"20\" loading=\"lazy\"\u003e\u003c/p\u003e\n",
    "body": "https://qiita.com/sasao-genmaicha/items/0234f7ac12bbd54c2602\n\n前回の記事👆ではAPIを使って欲しい情報を取得したので今回はブラウザ上にそれらを表示したいと思います。\n\n\nhttps://app-rank-git1.herokuapp.com/\n\n👆こちらは完成したアプリです。GitHubでスター数が多い人気リポジトリーTOP5をスクレイピングしてます。\n\n\n\n\nまずはresults.html\n\n```python:result.html\n{% extends 'base.html' %}\n\n{% block body %}\n\u003cdiv class=\"card text-center\" style=\"margin: 150px;\"\u003e\n    \n{% for result in results %}\n    \n       \u003ch3\u003e{{ result }}\u003c/h3\u003e \n     \n{% endfor %}\n\n\u003cform action=\"/\"\u003e\n    \u003cbutton class=\"btn btn-secondary\" type=\"submit\"\u003e戻る\u003c/button\u003e\n\u003c/form\u003e\n\u003c/div\u003e   \n{% endblock %}\n```\n\nこちらのHTMLはシンプルに仕上げました。まずは上から順に説明します。\n\n\u003cp\u003e{% extends 'base.html' %}\u003c/p\u003e\nこちらはflaskのお決まりの呪文。HTMLタグやHEADタグは別のbase.htmlに置いてそこから引っ張ってきてます。コードがスッキリしていい感じ。\n\n\u003cp\u003e{% block body %}\u003c/p\u003e\nそしてこちらのblockからbody部分を書いていきたいと思います。\n\n（注: block直下のdivタグですがこれはbootstrapでデザインを整えてます。今回は結果表示の解説メインなのでこちらは割愛します）\n\nまず５つ取った結果をfor文で回し表示させます。FlaskではHTMLでもfor文が使えるので大変ありがたい。\n使い方は波括弧とパーセント記号で囲むだけ。ただ注意したいのは結果を入れた変数（今回はresult）は二重の波括弧で囲う必要があります。\nそして最後に再び波括弧とパーセントでendforと書くだけ。\n慣れてしまえば割と記述方法は簡単だと思います。\n\n\n\n\nちなみにこの右側の変数resultsはどこから来ているのかというと、\n{% for result in results %}\n　　　　　　　　👆これ\n\n```python:app.py\napp.route('/results', methods=['POST'])\ndef do_scraping():\n    results = git.git_api()\n    return render_template('results.html', results=results)\n\n```\n前に他の記事で紹介したapp.pyから来てます。\n\n関数do_scraping()の中でTOP5の結果が入ってる別の関数git_api()を引っ張ってきてresultsに格納してます。そしてそのresultsは直下のrender_templateでさらに同じ名前のresultsに格納してます。\n\n・・・なんかわかりずらいですね汗\n\n順番としては..\n前回紹介したファイルgit.pyをインポートしそのファイル内にある関数git_api()を呼び出してます。\npythonのお決まりの書き方で.pyを省略して書きます。なのでgit.git_api()に書き直して変数resultsに入れます。\n\nこの時点でresultsには関数git_api()が入ってます。関数git_api()には既にTOP5の結果が入ってます。・・ということはresultsにはもうTOP５が入ってるワケですね。\n\nそしてそのTOP5をさらにrender_template内で変数resultsに入れます（！？）\n\n\nこれ名前が一緒だからややこしいんですがこの時のresults=resultsは、右側がたった今TOP５を入れたresults、左側がHTMLで使うresultsなんです。\n\nそう、さっきfor文で回したresultsはここで作られてたんですね。\n\n（ちなみにこの二つの変数、名前を一緒にする必要はありません。なので左側をたとえばresults_for_htmlみたいな名前にしてもオッケーです。ただ他の方々が解説してるのを見ると名前の統一は一般的みたいです。その方がシンプルな記述になるからだと思いますが慣れない内は変数名を変えて工夫してみましょう）\n\nこれでやっとHTMLにTOP5が表示できます。\n\n仕上げにformタグでボタンを作って最初のページに戻れるようにしましょう。\n![スクリーンショット 2022-11-26 13.29.17.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2980135/e6e3f5b2-9543-c06e-7fc5-2a66c11e9a34.png)\nactionでTOPページのURLについてるスラッシュを指定します。buttonを作りTOPページに戻れるように\"submit\":stuck_out_tongue_closed_eyes:\n\n\nこれでひとまず最低限の機能を備えたスクレイピングアプリが完成しましたね。ふぅ・・\n\n\nこれからもっとデザインを調整したり機能を追加してポートフォリオにしたいと思います。\n次はbootstrapをマスターしてその辺の解説も追加予定。\n\nまだまだ課題は残ってますがこれでひとまずスクレイピングアプリ編は終了。\nはぁ、長かった・・w\n\n\n\n\n\n\n\nここまで読んでくださった方、本当にありがとうございます。次回はbootstrapとか、もっとスクレイピングに特化した記事を書きたいと思います:grinning:\n\n\n\n\n\n\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:45:33+09:00",
    "group": null,
    "id": "cb0c268cce098a0a041b",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Python", "versions": [] },
      { "name": "GitHub", "versions": [] },
      { "name": "Flask", "versions": [] },
      { "name": "API", "versions": [] },
      { "name": "scraping", "versions": [] }
    ],
    "title": "Flask スクレイピングアプリ最終章〜結果を表示する〜",
    "updated_at": "2022-11-26T21:45:33+09:00",
    "url": "https://qiita.com/sasao-genmaicha/items/cb0c268cce098a0a041b",
    "user": {
      "description": "はじめまして。玄米茶が好きです。ビールは飲めないけどドイツ在住です。\r\npython歴半年のビギナー。主にflask使ってます。最近はAWSに興味あります。\r\n早くエンジニアデビューしたいアラフォーです。お手柔らかにお願いします。",
      "facebook_id": "",
      "followees_count": 1,
      "followers_count": 0,
      "github_login_name": null,
      "id": "sasao-genmaicha",
      "items_count": 4,
      "linkedin_id": "",
      "location": "ドイツ",
      "name": "sasaki genmaicha",
      "organization": "",
      "permanent_id": 2980135,
      "profile_image_url": "https://secure.gravatar.com/avatar/a91bb1dedef3490f013eeae483c9f3cc",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": "http://sasao12.conohawing.com/"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch2 data-sourcepos=\"1:1-1:15\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h2\u003e\n\u003cp data-sourcepos=\"3:1-3:144\"\u003e以下のような2つのファイルがある場合に内容を比較して変更箇所のみ取得する方法について記載します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"5:1-10:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eold.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e変更なし\n変更なし\n変更なし\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"text\" data-sourcepos=\"12:1-20:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003enew.txt\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e変更なし\n変更なし\n変更あり\n追加\n追加\n追加\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch2 data-sourcepos=\"22:1-22:21\"\u003e\n\u003cspan id=\"diffコマンド\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#diff%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003ediff\u003c/code\u003eコマンド\u003c/h2\u003e\n\u003cp data-sourcepos=\"24:1-24:110\"\u003e\u003ccode\u003ediff\u003c/code\u003eコマンドを使用して次のように実行することで変更箇所のみ取得できます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"26:1-32:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ediff \u003cspan class=\"nt\"\u003e--old-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e \u003cspan class=\"nt\"\u003e--unchanged-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e \u003cspan class=\"nt\"\u003e--new-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'%L'\u003c/span\u003e old.txt new.txt\n\u003cspan class=\"go\"\u003e変更あり\n追加\n追加\n追加\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cul data-sourcepos=\"34:1-58:0\"\u003e\n\u003cli data-sourcepos=\"34:1-35:104\"\u003e\n\u003cp data-sourcepos=\"34:3-35:104\"\u003e\u003ccode\u003e--old-line-format\u003c/code\u003e\u003cbr\u003e\n1番目のファイルだけにある行の出力に使用するフォーマットを設定する。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"36:1-37:100\"\u003e\n\u003cp data-sourcepos=\"36:3-37:100\"\u003e\u003ccode\u003e--unchanged-line-format\u003c/code\u003e\u003cbr\u003e\n両方のファイルに共通な行の出力に使用するフォーマットを設定する。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"38:1-39:104\"\u003e\n\u003cp data-sourcepos=\"38:3-39:104\"\u003e\u003ccode\u003e--new-line-format\u003c/code\u003e\u003cbr\u003e\n2番目のファイルだけにある行の出力に使用するフォーマットを設定する。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"40:1-58:0\"\u003e\n\u003cp data-sourcepos=\"40:3-42:54\"\u003e\u003ccode\u003e%L\u003c/code\u003e\u003cbr\u003e\n行頭などに何もつけず1行ずつ出力する。\u003cbr\u003e\n\u003ccode\u003e+%L\u003c/code\u003eとすると以下のようになります。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"44:3-50:5\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ediff \u003cspan class=\"nt\"\u003e--old-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e \u003cspan class=\"nt\"\u003e--unchanged-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e \u003cspan class=\"nt\"\u003e--new-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'+%L'\u003c/span\u003e old.txt new.txt\n\u003cspan class=\"go\"\u003e+変更あり\n+追加\n+追加\n+追加\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"52:3-52:59\"\u003eまた\u003ccode\u003e%l\u003c/code\u003eとすると以下のようになります。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"54:3-57:5\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ediff \u003cspan class=\"nt\"\u003e--old-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e \u003cspan class=\"nt\"\u003e--unchanged-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e \u003cspan class=\"nt\"\u003e--new-line-format\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e'%l'\u003c/span\u003e old.txt new.txt\n\u003cspan class=\"go\"\u003e変更あり追加追加追加\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 data-sourcepos=\"59:1-59:21\"\u003e\n\u003cspan id=\"commコマンド\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#comm%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003ecomm\u003c/code\u003eコマンド\u003c/h2\u003e\n\u003cp data-sourcepos=\"61:1-61:102\"\u003e\u003ccode\u003ecomm\u003c/code\u003eコマンドを使用して次のように実行しても変更箇所のみ取得できます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"63:1-69:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003ecomm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-13\u003c/span\u003e old.txt new.txt\n\u003cspan class=\"go\"\u003e変更あり\n追加\n追加\n追加\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cul data-sourcepos=\"71:1-74:0\"\u003e\n\u003cli data-sourcepos=\"71:1-74:0\"\u003e\n\u003ccode\u003e-13\u003c/code\u003e\u003cbr\u003e\n\u003ccode\u003eold.txt\u003c/code\u003eのみに含まれる行と両方のファイルに含まれる行を出力しないようにする。\u003cbr\u003e\nすなわち変更や追加があった行のみ出力する。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"75:1-75:125\"\u003eただしファイルが\u003ccode\u003esort\u003c/code\u003eされていない正しく比較できず以下のようなエラーが出力されます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"77:1-80:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"go\"\u003ecomm: file 2 is not in sorted order\ncomm: input is not in sorted order\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"82:1-82:171\"\u003eこれを出力させないようにするには\u003ccode\u003esort\u003c/code\u003eしてから\u003ccode\u003ecomm\u003c/code\u003eするか\u003ccode\u003esort\u003c/code\u003eする必要のない場合には以下のようにオプションを付けます。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"terminal\" data-sourcepos=\"84:1-86:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"go\"\u003ecomm --nocheck-order old.txt new.txt\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n",
    "body": "## はじめに\n\n以下のような2つのファイルがある場合に内容を比較して変更箇所のみ取得する方法について記載します。  \n\n```old.txt\n変更なし\n変更なし\n変更なし\n\n```\n\n```new.txt\n変更なし\n変更なし\n変更あり\n追加\n追加\n追加\n\n```\n\n## `diff`コマンド\n\n`diff`コマンドを使用して次のように実行することで変更箇所のみ取得できます。  \n\n```terminal\n$ diff --old-line-format='' --unchanged-line-format='' --new-line-format='%L' old.txt new.txt\n変更あり\n追加\n追加\n追加\n```\n\n- `--old-line-format`\n  1番目のファイルだけにある行の出力に使用するフォーマットを設定する。  \n- `--unchanged-line-format`  \n  両方のファイルに共通な行の出力に使用するフォーマットを設定する。  \n- `--new-line-format`  \n  2番目のファイルだけにある行の出力に使用するフォーマットを設定する。  \n- `%L`  \n  行頭などに何もつけず1行ずつ出力する。\n  `+%L`とすると以下のようになります。  \n\n  ```terminal\n  $ diff --old-line-format='' --unchanged-line-format='' --new-line-format='+%L' old.txt new.txt\n  +変更あり\n  +追加\n  +追加\n  +追加\n  ```\n\n  また`%l`とすると以下のようになります。  \n\n  ```terminal\n  $ diff --old-line-format='' --unchanged-line-format='' --new-line-format='%l' old.txt new.txt\n  変更あり追加追加追加\n  ```\n\n## `comm`コマンド\n\n`comm`コマンドを使用して次のように実行しても変更箇所のみ取得できます。\n\n```terminal\n$ comm -13 old.txt new.txt\n変更あり\n追加\n追加\n追加\n```\n\n- `-13`  \n  `old.txt`のみに含まれる行と両方のファイルに含まれる行を出力しないようにする。  \n  すなわち変更や追加があった行のみ出力する。  \n\nただしファイルが`sort`されていない正しく比較できず以下のようなエラーが出力されます。  \n\n```terminal\ncomm: file 2 is not in sorted order\ncomm: input is not in sorted order\n```\n\nこれを出力させないようにするには`sort`してから`comm`するか`sort`する必要のない場合には以下のようにオプションを付けます。\n\n```terminal\ncomm --nocheck-order old.txt new.txt\n```\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:44:26+09:00",
    "group": null,
    "id": "3f9424396393613972fc",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Linux", "versions": [] },
      { "name": "初学者", "versions": [] }
    ],
    "title": "【Linux】ファイルの変更部分のみ取得する方法",
    "updated_at": "2022-11-26T21:44:26+09:00",
    "url": "https://qiita.com/P-man_Brown/items/3f9424396393613972fc",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 11,
      "github_login_name": null,
      "id": "P-man_Brown",
      "items_count": 360,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 2342443,
      "profile_image_url": "https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2342443/profile-images/1645878775",
      "team_only": false,
      "twitter_screen_name": "Pman_Browm",
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003ch1 data-sourcepos=\"1:1-1:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"3:1-4:114\"\u003eDocker Desktop の代替となる Finch というアプリケーションが AWS より発表された｡\u003cbr\u003e\n選択肢が増えることは非常に嬉しいニュースであり､期待を持って受け入れている｡\u003c/p\u003e\n\u003cp data-sourcepos=\"6:1-6:33\"\u003e\u003cqiita-embed-ogp src=\"https://github.com/runfinch/finch\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"8:1-8:383\"\u003eDockerを使用していると､いつの間にかコンテナイメージが肥大化していてメインストレージを圧迫しているなんてことはありがちだと思う｡Docker DesktopであればGUIから格納先を変更することも可能であるが､いかんせん \u003ccode\u003ev0.1.0\u003c/code\u003e としてリリースされたばかりのFinchにはそんな機能はない｡\u003c/p\u003e\n\u003cp data-sourcepos=\"10:1-10:104\"\u003eそんなFinchのイメージ格納先ディレクトリを変更する手順について記載する｡\u003c/p\u003e\n\u003ch2 data-sourcepos=\"12:1-12:9\"\u003e\n\u003cspan id=\"注意\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B3%A8%E6%84%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e注意\u003c/h2\u003e\n\u003cp data-sourcepos=\"14:1-14:214\"\u003e内容は私の環境での調査結果であり､ \u003ccode\u003ev0.1.0\u003c/code\u003e とまだまだ開発の途上にあるアプリケーションであるため､十分な知識のもと自己責任において操作して欲しい｡\u003c/p\u003e\n\u003ch1 data-sourcepos=\"16:1-16:8\"\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\u003cp data-sourcepos=\"18:1-19:111\"\u003eコンフィグファイルとおぼしきファイルを一通り見たが､イメージの格納先に関する設定項目は見当たらなかった｡\u003cbr\u003e\nイメージの場所を特定し､外付けSSDにシンボリックリンクを張ることで対応した｡\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"21:1-35:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e# finch vm init は事前に実行しておく\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# Finchは事前に停止させる\u003c/span\u003e\nfinch vm stop\n\n\u003cspan class=\"c\"\u003e# 新しいパスを指定\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eNEW_IMAGE_PATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"/Volumes/exssd/finch/diffdisk\"\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# イメージファイルを外付けSSDに移動\u003c/span\u003e\n\u003cspan class=\"nb\"\u003emv\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/Applications/Finch/lima/data/finch/diffdisk\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eNEW_IMAGE_PATH\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# シンボリックを作成する\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eln\u003c/span\u003e \u003cspan class=\"nt\"\u003e-s\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eNEW_IMAGE_PATH\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"/Applications/Finch/lima/data/finch/diffdisk\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch1 data-sourcepos=\"38:1-38:23\"\u003e\n\u003cspan id=\"イメージの場所\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%AE%E5%A0%B4%E6%89%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eイメージの場所\u003c/h1\u003e\n\u003cp data-sourcepos=\"40:1-40:164\"\u003e\u003ccode\u003eaarch64\u003c/code\u003e で動く \u003ccode\u003emacOS 12.6\u003c/code\u003e の場合､ GitHub の pkgファイルからインストールすると､ \u003ccode\u003e/Applications/Finch\u003c/code\u003e にファイルが展開される\u003c/p\u003e\n\u003cp data-sourcepos=\"42:1-42:47\"\u003eVMエンジンは lima が使用されている\u003c/p\u003e\n\u003cp data-sourcepos=\"45:1-45:166\"\u003eインストール手順に従い､　\u003ccode\u003efinch vm init\u003c/code\u003e を実行すると \u003ccode\u003e/Applications/Finch/lima\u003c/code\u003e の下に \u003ccode\u003edata\u003c/code\u003e というディレクトリが作成された｡\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"47:1-63:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e /Applications/Finch/lima/data/finch\n.rw-r--r-- 494M finch 26 11 20:21 basedisk\n.rw-r--r-- 204M finch 26 11 20:21 cidata.iso\n.rw-r--r-- 573M finch 26 11 20:28 diffdisk\nsrw-------    0 finch 26 11 20:22 ga.sock\n.rw-r--r--    6 finch 26 11 20:21 ha.pid\nsrwxr-xr-x    0 finch 26 11 20:21 ha.sock\n.rw-r--r--  29k finch 26 11 20:27 ha.stderr.log\n.rw-r--r--  167 finch 26 11 20:22 ha.stdout.log\n.rw-r--r-- 7.6k finch 26 11 20:21 lima.yaml\n.rw-------    6 finch 26 11 20:21 qemu.pid\nsrwxr-xr-x    0 finch 26 11 20:21 qmp.sock\n.rw-r--r--  46k finch 26 11 20:27 serial.log\nsrwxr-xr-x    0 finch 26 11 20:21 serial.sock\nsrw-------    0 finch 26 11 20:22 ssh.sock\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"65:1-65:282\"\u003e直感的にこのディレクトリが怪しいと､ \u003ccode\u003e/Applications/Finch/lima/data/finch\u003c/code\u003e 以下のディレクトリを監視しながら \u003ccode\u003efinch run\u003c/code\u003e や \u003ccode\u003efinch compose build\u003c/code\u003e などの操作を行った結果､ \u003ccode\u003ediffdisk\u003c/code\u003e というファイルに大きな変化があった｡\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"67:1-73:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e diffdisk\n.rw-r--r-- 558M finch 26 11 20:23 diffdisk\n\n\u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003els\u003c/span\u003e \u003cspan class=\"nt\"\u003e-l\u003c/span\u003e diffdisk\n.rw-r--r-- 1.2G finch 26 11 20:33 diffdisk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"75:1-75:294\"\u003e挙動を観測する限り \u003ccode\u003e/Applications/Finch/lima/data/finch/diffdisk\u003c/code\u003e にイメージが格納されていると思われるので､このファイルのみAPFSでフォーマットされた外付けSSDに移動させたのち､シンボリックを張ることで対応した｡(前述)\u003c/p\u003e\n\u003ch1 data-sourcepos=\"77:1-77:14\"\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h1\u003e\n\u003cp data-sourcepos=\"79:1-79:295\"\u003e環境がいい感じに壊れまくっててDocker動かなくなってて困ってたけどOS入れ直すのもめんどくさいなーってなってた所に使えそうなものが登場したのでしばらくはこの壊れた環境とともに生きていけそうです！！！(ぇ…)\u003c/p\u003e\n",
    "body": "# はじめに\n\nDocker Desktop の代替となる Finch というアプリケーションが AWS より発表された｡\n選択肢が増えることは非常に嬉しいニュースであり､期待を持って受け入れている｡\n\nhttps://github.com/runfinch/finch\n\nDockerを使用していると､いつの間にかコンテナイメージが肥大化していてメインストレージを圧迫しているなんてことはありがちだと思う｡Docker DesktopであればGUIから格納先を変更することも可能であるが､いかんせん `v0.1.0` としてリリースされたばかりのFinchにはそんな機能はない｡\n\nそんなFinchのイメージ格納先ディレクトリを変更する手順について記載する｡\n\n## 注意\n\n内容は私の環境での調査結果であり､ `v0.1.0` とまだまだ開発の途上にあるアプリケーションであるため､十分な知識のもと自己責任において操作して欲しい｡\n\n# 結論\n\nコンフィグファイルとおぼしきファイルを一通り見たが､イメージの格納先に関する設定項目は見当たらなかった｡\nイメージの場所を特定し､外付けSSDにシンボリックリンクを張ることで対応した｡\n\n```zsh\n# finch vm init は事前に実行しておく\n\n# Finchは事前に停止させる\nfinch vm stop\n\n# 新しいパスを指定\nNEW_IMAGE_PATH=\"/Volumes/exssd/finch/diffdisk\"\n\n# イメージファイルを外付けSSDに移動\nmv \"/Applications/Finch/lima/data/finch/diffdisk\" \"${NEW_IMAGE_PATH}\"\n\n# シンボリックを作成する\nln -s \"${NEW_IMAGE_PATH}\" \"/Applications/Finch/lima/data/finch/diffdisk\"\n```\n\n\n# イメージの場所\n\n`aarch64` で動く `macOS 12.6` の場合､ GitHub の pkgファイルからインストールすると､ `/Applications/Finch` にファイルが展開される\n\nVMエンジンは lima が使用されている\n\n\nインストール手順に従い､　`finch vm init` を実行すると `/Applications/Finch/lima` の下に `data` というディレクトリが作成された｡\n\n```zsh\n$ ls -l /Applications/Finch/lima/data/finch\n.rw-r--r-- 494M finch 26 11 20:21 basedisk\n.rw-r--r-- 204M finch 26 11 20:21 cidata.iso\n.rw-r--r-- 573M finch 26 11 20:28 diffdisk\nsrw-------    0 finch 26 11 20:22 ga.sock\n.rw-r--r--    6 finch 26 11 20:21 ha.pid\nsrwxr-xr-x    0 finch 26 11 20:21 ha.sock\n.rw-r--r--  29k finch 26 11 20:27 ha.stderr.log\n.rw-r--r--  167 finch 26 11 20:22 ha.stdout.log\n.rw-r--r-- 7.6k finch 26 11 20:21 lima.yaml\n.rw-------    6 finch 26 11 20:21 qemu.pid\nsrwxr-xr-x    0 finch 26 11 20:21 qmp.sock\n.rw-r--r--  46k finch 26 11 20:27 serial.log\nsrwxr-xr-x    0 finch 26 11 20:21 serial.sock\nsrw-------    0 finch 26 11 20:22 ssh.sock\n```\n\n直感的にこのディレクトリが怪しいと､ `/Applications/Finch/lima/data/finch` 以下のディレクトリを監視しながら `finch run` や `finch compose build` などの操作を行った結果､ `diffdisk` というファイルに大きな変化があった｡\n\n```zsh\n$ ls -l diffdisk\n.rw-r--r-- 558M finch 26 11 20:23 diffdisk\n\n$ ls -l diffdisk\n.rw-r--r-- 1.2G finch 26 11 20:33 diffdisk\n```\n\n挙動を観測する限り `/Applications/Finch/lima/data/finch/diffdisk` にイメージが格納されていると思われるので､このファイルのみAPFSでフォーマットされた外付けSSDに移動させたのち､シンボリックを張ることで対応した｡(前述)\n\n# さいごに\n\n環境がいい感じに壊れまくっててDocker動かなくなってて困ってたけどOS入れ直すのもめんどくさいなーってなってた所に使えそうなものが登場したのでしばらくはこの壊れた環境とともに生きていけそうです！！！(ぇ…)\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:25:12+09:00",
    "group": null,
    "id": "3478be4971b03c36c3df",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "AWS", "versions": [] },
      { "name": "Docker", "versions": [] },
      { "name": "container", "versions": [] },
      { "name": "コンテナ", "versions": [] },
      { "name": "finch", "versions": [] }
    ],
    "title": "Finchのイメージ格納先ディレクトリを変更する",
    "updated_at": "2022-11-26T21:25:12+09:00",
    "url": "https://qiita.com/gretchi/items/3478be4971b03c36c3df",
    "user": {
      "description": "💊闇💊の力で動く🎀 †病み†🎀 ✨天才✨プログラマー🔪💉🩸",
      "facebook_id": "",
      "followees_count": 40,
      "followers_count": 18,
      "github_login_name": "gretchi",
      "id": "gretchi",
      "items_count": 17,
      "linkedin_id": "",
      "location": "まったくここはひどいインターネッツですね！",
      "name": "🎀いのちだいじに🎀",
      "organization": "閉鎖病棟",
      "permanent_id": 149815,
      "profile_image_url": "https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/149815/5cc58917d89cf2ab178144cfe8452494331581dd/x_large.png?1666105972",
      "team_only": false,
      "twitter_screen_name": "Gretel_net",
      "website_url": "https://www.gretel-net.tokyo/"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-1:80\"\u003e\u003cb\u003e\u003cfont color=\"red\"\u003e$\\huge{元氣ですかーーーーッ！！！}$\u003c/font\u003e\u003c/b\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"3:1-3:38\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/advent-calendar/2022\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"5:1-5:45\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/advent-calendar/2022/elixir\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"7:1-7:14\"\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\u003cp data-sourcepos=\"9:1-11:69\"\u003e闘魂と\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003eが出会いました。\u003cbr\u003e\n闘魂 meets \u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003e.です。\u003cbr\u003e\n\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003e meets 闘魂.でもよいです。\u003c/p\u003e\n\u003cp data-sourcepos=\"13:1-15:104\"\u003e本日は、\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003eでこんなことができますよー　を紹介します。\u003cbr\u003e\n題材は、一つのカレンダーに各人が何件投稿したのかを調べるプログラムを\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003eで作ることを楽しみます。\u003cbr\u003e\nつまり、\u003ca href=\"https://qiita.com/advent-calendar/2022/present-calendar\"\u003e完走賞\u003c/a\u003eの応援記事です。\u003c/p\u003e\n\u003cp data-sourcepos=\"17:1-17:76\"\u003e\u003cstrong\u003eこの記事は定期的に実行結果を自動更新しています。\u003c/strong\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"19:1-19:54\"\u003e\n\u003cspan id=\"elixirのプログラム\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#elixir%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003eのプログラム\u003c/h1\u003e\n\u003cp data-sourcepos=\"21:1-22:213\"\u003eさっそくプログラムを示します。\u003cbr\u003e\n闘魂Elixirを一通り学んだあとはより理解が進むでしょうし、なにかしらプログラミングの経験があればなんとなくご理解いただけるものとおもっております。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"elixir\" data-sourcepos=\"24:1-37:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003esample.exs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"no\"\u003eMix\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einstall\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"ss\"\u003e:req\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\n\u003cspan class=\"s2\"\u003e\"https://qiita.com/advent-calendar/2022/elixir\"\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eReq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget!\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:body\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"encryptedId\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eEnum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eRegex\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enamed_captures\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e~r/\"user\":{\"urlName\":\"(?\u0026lt;user\u0026gt;.*?)\",/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eEnum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eslice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e//\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eEnum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"p\"\u003e%{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"user\"\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eEnum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrequencies\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eEnum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esort_by\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003e_user\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecnt\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:desc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"no\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einspect\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch1 data-sourcepos=\"39:1-39:8\"\u003e\n\u003cspan id=\"実行\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行\u003c/h1\u003e\n\u003cp data-sourcepos=\"41:1-42:72\"\u003eDockerで実行します。\u003cbr\u003e\n\u003ccode\u003esample.exs\u003c/code\u003eを作ったフォルダで\u003ccode\u003edocker run\u003c/code\u003eしてください。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"bash\" data-sourcepos=\"44:1-48:3\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eCMD\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003edocker pull hexpm/elixir:1.14.2-erlang-25.1.2-alpine-3.16.2\n\ndocker run \u003cspan class=\"nt\"\u003e--rm\u003c/span\u003e \u003cspan class=\"nt\"\u003e-v\u003c/span\u003e \u003cspan class=\"nv\"\u003e$PWD\u003c/span\u003e:/app hexpm/elixir:1.14.2-erlang-25.1.2-alpine-3.16.2 sh \u003cspan class=\"nt\"\u003e-c\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"mix local.hex --force \u0026amp;\u0026amp; mix local.rebar --force \u0026amp;\u0026amp; cd /app \u0026amp;\u0026amp; elixir sample.exs\"\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003ch1 data-sourcepos=\"50:1-50:50\"\u003e\n\u003cspan id=\"実行結果-2022-11-26-230003610345z現在\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C-2022-11-26-230003610345z%E7%8F%BE%E5%9C%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行結果 (2022-11-26 23:00:03.610345Z現在)\u003c/h1\u003e\n\u003cp data-sourcepos=\"52:1-53:48\"\u003e実行結果です。\u003cbr\u003e\n(\u003cstrong\u003eここは自動的に更新しています\u003c/strong\u003e)\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"elixir\" data-sourcepos=\"56:1-94:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"RyoWakabayashi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e41\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"torifukukaiou\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e38\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"zacky1972\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mnishiguchi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"piacerex\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"the_haigo\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Yoosuke\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"GeekMasahiro\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"ShigeItoEx\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"miwacchi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"t-yamanashi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"nako_sleep_9h\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"westbaystars\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"koga1020\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"k-j-y\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"ta_to_jp\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"pojiro\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"koyo-miyamura\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"kikuyuta\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mokichi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"ohr486\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Gsann\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"nanbut14\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"kyawaguchi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Alicesky2127\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"myasu\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"hisaway\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"a_utsuki\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"tomoaki-kimura\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"GKBR\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Goody27\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"tuchiro\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"tamanugi\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"def_elixir\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"MzRyuKa\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"96:1-97:31\"\u003e記事の数が25を超えてくると、\u003ca href=\"https://qiita.com/advent-calendar/2022/present-calendar\"\u003e完走賞\u003c/a\u003eの候補です。\u003cbr\u003e\n現状、3名が候補です。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"99:1-99:32\"\u003e\n\u003cspan id=\"ワンポイントレッスン\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AF%E3%83%B3%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%83%AC%E3%83%83%E3%82%B9%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eワンポイントレッスン\u003c/h1\u003e\n\u003cp data-sourcepos=\"101:1-102:332\"\u003e\u003ccode\u003esample.exs\u003c/code\u003e中、\u003ccode\u003e\"https://qiita.com/advent-calendar/2022/elixir\"\u003c/code\u003eをお好みのカレンダーのURLに変えると、ユーザー毎の記事数がわかります。\u003cbr\u003e\nただし、無理やりなところがあるので、すべてのカレンダーで動くとは限りません。なんとなく、カレンダーのシリーズが複数あるカレンダーでは動作するようにおもいます。無理やりなところというのは、特に\u003ccode\u003eString.split(\"encryptedId\")\u003c/code\u003eの部分です。\u003c/p\u003e\n\u003cp data-sourcepos=\"104:1-104:97\"\u003e\u003ca href=\"https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2\" rel=\"nofollow noopener\" target=\"_blank\"\u003e|\u0026gt;\u003c/a\u003eは、パイプ演算子と呼ばれます。\u003c/p\u003e\n\u003cp data-sourcepos=\"106:1-106:54\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/zacky1972/items/2dc7c4930f6ab8a4688a\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"109:1-109:46\"\u003e\n\u003cspan id=\"今日の闘魂\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%8A%E6%97%A5%E3%81%AE%E9%97%98%E9%AD%82\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e今日の\u003cfont color=\"#d00080\"\u003e闘魂\u003c/font\u003e\n\u003c/h1\u003e\n\u003cp data-sourcepos=\"111:1-111:63\"\u003e今日は、『西郷翁遺訓』から言葉を引きます。\u003c/p\u003e\n\u003chr data-sourcepos=\"113:1-114:0\"\u003e\n\u003cruby\u003e\n人を相手にせず、天を相手にせよ。天を相手にして、己れを尽くし人を咎めず、我が誠の足らざるを尋ぬ可し。\n\u003crt\u003eひとをあいてにせず、てんをあいてにせよ。てんをあいてにして、おのれをつくしひとをとがめず、わがまことのたらざるをたずぬべし\u003c/rt\u003e\n\u003c/ruby\u003e\n\u003chr data-sourcepos=\"120:1-121:0\"\u003e\n\u003cp data-sourcepos=\"122:1-123:141\"\u003e解説は、\u003ca href=\"http://www.hyugagakuin.ac.jp/about/words/e/2021/03/09/002142.html\" rel=\"nofollow noopener\" target=\"_blank\"\u003eこちら\u003c/a\u003eをご参照ください。\u003cbr\u003e\n猪木さん流に言うと、「闘魂」であり「夢というのは、純粋性がなければダメなんだ」ということです。\u003c/p\u003e\n\u003cblockquote data-sourcepos=\"126:1-126:325\"\u003e\n\u003cp data-sourcepos=\"126:3-126:325\"\u003e不純な夢は、人に見透かされる。けれども、純粋な夢は人に応援される。それだけで、夢の実現度は大きく変わってくるはずだ。(中略)彼が裏切ろうと真犯人が別にいようと、どうでもいい。わたしは、すべての過去を根に持たないからだ。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp data-sourcepos=\"128:1-128:249\"\u003e天つまりお天道様に恥ずかしくない、別の言い方をすると誰に対しても恥じることのない夢というものは、純なものだということです。純であるがゆえに賛同する人もでてくるのです。\u003c/p\u003e\n\u003cp data-sourcepos=\"130:1-131:180\"\u003e\u003cimg alt=\":book:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f4d6.png\" title=\":book:\" width=\"20\" loading=\"lazy\"\u003e『\u003ca href=\"https://www.amazon.co.jp/dp/4833481057\" rel=\"nofollow noopener\" target=\"_blank\"\u003eアントニオ猪木 最後の闘魂\u003c/a\u003e』\u003cimg alt=\":book:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f4d6.png\" title=\":book:\" width=\"20\" loading=\"lazy\"\u003eから引きました。\u003cbr\u003e\nみなさまもぜひこの本をお手にとられて、猪木さんが残されたメッセージを通じて、直接猪木さんから「元氣」をもらってください。\u003c/p\u003e\n\u003cp data-sourcepos=\"134:1-134:121\"\u003e\u003ca href=\"https://camo.qiitausercontent.com/96e753b27e60474b836a73ecd15773cbb1cb422d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133313830382f62653839333366352d653365322d643566342d313536312d6636356637356162646633382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/96e753b27e60474b836a73ecd15773cbb1cb422d/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3133313830382f62653839333366352d653365322d643566342d313536312d6636356637356162646633382e706e67\" alt=\"image.png\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/131808/be8933f5-e3e2-d5f4-1561-f65f75abdf38.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"139:1-139:14\"\u003e\n\u003cspan id=\"さいごに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eさいごに\u003c/h1\u003e\n\u003cp data-sourcepos=\"141:1-143:122\"\u003e\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003eでこんなことができますよー　を紹介しました。\u003cbr\u003e\n題材は、一つのカレンダーに各人が何件投稿したのかを調べるプログラムを\u003ca href=\"https://elixir-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\"\u003eElixir\u003c/a\u003eで作ることを楽しみました。\u003cbr\u003e\nつまり、\u003ca href=\"https://qiita.com/advent-calendar/2022/present-calendar\"\u003e完走賞\u003c/a\u003eの応援記事でもあるわけです。\u003c/p\u003e\n\u003cp data-sourcepos=\"145:1-146:174\"\u003e闘魂の意味は、 \u003cstrong\u003e「己に打ち克ち、闘いを通じて己の魂を磨いていくことである」\u003c/strong\u003e との猪木さんの言葉をそのまま胸に刻み込んでいます。\u003cbr\u003e\n知っているだけで終わらせることなく、実行する、断行する、一歩を踏み出すことを自らの行動で示していきたいとおもいます。\u003c/p\u003e\n\u003cp data-sourcepos=\"148:1-148:65\"\u003e\u003cfont color=\"red\"\u003e$\\huge{１、２、３ ぁっダー！}$\u003c/font\u003e\u003c/p\u003e\n\u003ciframe width=\"100%\" height=\"512\" src=\"https://www.youtube.com/embed/AWxwmqzbOaw\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003cp data-sourcepos=\"153:1-153:43\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=FSz7N5hCltw\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003chr data-sourcepos=\"155:1-156:0\"\u003e\n\u003cp data-sourcepos=\"157:1-157:58\"\u003e\u003cqiita-embed-ogp src=\"https://qiita.com/torifukukaiou/items/5e96f4e9f12ec3c4b3f4\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n",
    "body": "\u003cb\u003e\u003cfont color=\"red\"\u003e$\\huge{元氣ですかーーーーッ！！！}$\u003c/font\u003e\u003c/b\u003e\n\nhttps://qiita.com/advent-calendar/2022\n\nhttps://qiita.com/advent-calendar/2022/elixir\n\n# はじめに\n\n闘魂と[Elixir](https://elixir-lang.org/)が出会いました。\n闘魂 meets [Elixir](https://elixir-lang.org/).です。\n[Elixir](https://elixir-lang.org/) meets 闘魂.でもよいです。\n\n本日は、[Elixir](https://elixir-lang.org/)でこんなことができますよー　を紹介します。\n題材は、一つのカレンダーに各人が何件投稿したのかを調べるプログラムを[Elixir](https://elixir-lang.org/)で作ることを楽しみます。\nつまり、[完走賞](https://qiita.com/advent-calendar/2022/present-calendar)の応援記事です。\n\n**この記事は定期的に実行結果を自動更新しています。**\n\n# [Elixir](https://elixir-lang.org/)のプログラム\n\nさっそくプログラムを示します。\n闘魂Elixirを一通り学んだあとはより理解が進むでしょうし、なにかしらプログラミングの経験があればなんとなくご理解いただけるものとおもっております。\n\n```elixir:sample.exs\nMix.install([:req])\n\n\"https://qiita.com/advent-calendar/2022/elixir\"\n|\u003e Req.get!()\n|\u003e Map.get(:body)\n|\u003e String.split(\"encryptedId\")\n|\u003e Enum.map(fn s -\u003e Regex.named_captures(~r/\"user\":{\"urlName\":\"(?\u003cuser\u003e.*?)\",/, s) end)\n|\u003e Enum.slice(2..-1//1)\n|\u003e Enum.map(fn %{\"user\" =\u003e user} -\u003e user end)\n|\u003e Enum.frequencies()\n|\u003e Enum.sort_by(fn {_user, cnt} -\u003e cnt end, :desc)\n|\u003e IO.inspect()\n```\n\n# 実行\n\nDockerで実行します。\n`sample.exs`を作ったフォルダで`docker run`してください。\n\n```bash:CMD\ndocker pull hexpm/elixir:1.14.2-erlang-25.1.2-alpine-3.16.2\n\ndocker run --rm -v $PWD:/app hexpm/elixir:1.14.2-erlang-25.1.2-alpine-3.16.2 sh -c \"mix local.hex --force \u0026\u0026 mix local.rebar --force \u0026\u0026 cd /app \u0026\u0026 elixir sample.exs\"\n```\n\n# 実行結果 (2022-11-26 23:00:03.610345Z現在)\n\n実行結果です。\n(**ここは自動的に更新しています**)\n\n\n```elixir\n[\n  {\"RyoWakabayashi\", 41},\n  {\"torifukukaiou\", 38},\n  {\"zacky1972\", 25},\n  {\"mnishiguchi\", 23},\n  {\"piacerex\", 11},\n  {\"the_haigo\", 10},\n  {\"Yoosuke\", 7},\n  {\"GeekMasahiro\", 7},\n  {\"ShigeItoEx\", 7},\n  {\"miwacchi\", 5},\n  {\"t-yamanashi\", 5},\n  {\"nako_sleep_9h\", 5},\n  {\"westbaystars\", 3},\n  {\"koga1020\", 3},\n  {\"k-j-y\", 3},\n  {\"ta_to_jp\", 2},\n  {\"pojiro\", 1},\n  {\"koyo-miyamura\", 1},\n  {\"kikuyuta\", 1},\n  {\"mokichi\", 1},\n  {\"ohr486\", 1},\n  {\"Gsann\", 1},\n  {\"nanbut14\", 1},\n  {\"kyawaguchi\", 1},\n  {\"Alicesky2127\", 1},\n  {\"myasu\", 1},\n  {\"hisaway\", 1},\n  {\"a_utsuki\", 1},\n  {\"tomoaki-kimura\", 1},\n  {\"GKBR\", 1},\n  {\"Goody27\", 1},\n  {\"tuchiro\", 1},\n  {\"tamanugi\", 1},\n  {\"def_elixir\", 1},\n  {\"MzRyuKa\", 1}\n]\n```\n\n記事の数が25を超えてくると、[完走賞](https://qiita.com/advent-calendar/2022/present-calendar)の候補です。\n現状、3名が候補です。\n\n# ワンポイントレッスン\n\n`sample.exs`中、`\"https://qiita.com/advent-calendar/2022/elixir\"`をお好みのカレンダーのURLに変えると、ユーザー毎の記事数がわかります。\nただし、無理やりなところがあるので、すべてのカレンダーで動くとは限りません。なんとなく、カレンダーのシリーズが複数あるカレンダーでは動作するようにおもいます。無理やりなところというのは、特に`String.split(\"encryptedId\")`の部分です。\n\n[|\u003e](https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2)は、パイプ演算子と呼ばれます。\n\nhttps://qiita.com/zacky1972/items/2dc7c4930f6ab8a4688a\n\n\n# 今日の\u003cfont color=\"#d00080\"\u003e闘魂\u003c/font\u003e\n\n今日は、『西郷翁遺訓』から言葉を引きます。\n\n---\n\n\u003cruby\u003e\n人を相手にせず、天を相手にせよ。天を相手にして、己れを尽くし人を咎めず、我が誠の足らざるを尋ぬ可し。\n\u003crt\u003eひとをあいてにせず、てんをあいてにせよ。てんをあいてにして、おのれをつくしひとをとがめず、わがまことのたらざるをたずぬべし\u003c/rt\u003e\n\u003c/ruby\u003e\n\n---\n\n解説は、[こちら](http://www.hyugagakuin.ac.jp/about/words/e/2021/03/09/002142.html)をご参照ください。\n猪木さん流に言うと、「闘魂」であり「夢というのは、純粋性がなければダメなんだ」ということです。\n\n\n\u003e 不純な夢は、人に見透かされる。けれども、純粋な夢は人に応援される。それだけで、夢の実現度は大きく変わってくるはずだ。(中略)彼が裏切ろうと真犯人が別にいようと、どうでもいい。わたしは、すべての過去を根に持たないからだ。\n\n天つまりお天道様に恥ずかしくない、別の言い方をすると誰に対しても恥じることのない夢というものは、純なものだということです。純であるがゆえに賛同する人もでてくるのです。\n\n:book:『[アントニオ猪木 最後の闘魂](https://www.amazon.co.jp/dp/4833481057)』:book:から引きました。\nみなさまもぜひこの本をお手にとられて、猪木さんが残されたメッセージを通じて、直接猪木さんから「元氣」をもらってください。\n\n\n![image.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/131808/be8933f5-e3e2-d5f4-1561-f65f75abdf38.png)\n\n\n\n\n# さいごに\n\n[Elixir](https://elixir-lang.org/)でこんなことができますよー　を紹介しました。\n題材は、一つのカレンダーに各人が何件投稿したのかを調べるプログラムを[Elixir](https://elixir-lang.org/)で作ることを楽しみました。\nつまり、[完走賞](https://qiita.com/advent-calendar/2022/present-calendar)の応援記事でもあるわけです。\n\n闘魂の意味は、 **「己に打ち克ち、闘いを通じて己の魂を磨いていくことである」** との猪木さんの言葉をそのまま胸に刻み込んでいます。\n知っているだけで終わらせることなく、実行する、断行する、一歩を踏み出すことを自らの行動で示していきたいとおもいます。\n\n\u003cfont color=\"red\"\u003e$\\huge{１、２、３ ぁっダー！}$\u003c/font\u003e\n\n\n\u003ciframe width=\"910\" height=\"512\" src=\"https://www.youtube.com/embed/AWxwmqzbOaw\" title=\"燃える闘魂 アントニオ猪木  追悼VTR\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\nhttps://www.youtube.com/watch?v=FSz7N5hCltw\n\n---\n\nhttps://qiita.com/torifukukaiou/items/5e96f4e9f12ec3c4b3f4\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:09:26+09:00",
    "group": null,
    "id": "17d55cf896c24b13350e",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "Elixir", "versions": [] },
      { "name": "猪木", "versions": [] },
      { "name": "40代駆け出しエンジニア", "versions": [] },
      { "name": "AdventCalendar2022", "versions": [] },
      { "name": "闘魂", "versions": [] }
    ],
    "title": "闘魂Elixir ── 03. 完走賞を目指してみましょう！【自動更新記事】",
    "updated_at": "2022-11-26T23:00:04+09:00",
    "url": "https://qiita.com/torifukukaiou/items/17d55cf896c24b13350e",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 475,
      "followers_count": 159,
      "github_login_name": null,
      "id": "torifukukaiou",
      "items_count": 447,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 131808,
      "profile_image_url": "https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/131808/profile-images/1616590306",
      "team_only": false,
      "twitter_screen_name": "torifukukaiou",
      "website_url": "https://www.torifuku-kaiou.tokyo/"
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-1:146\"\u003e2022年11月8日(投稿ちょっと遅れた)に、スイスの都市(チューリッヒ)にAWSリージョンが開設されたらしいです！\u003c/p\u003e\n\u003cp data-sourcepos=\"3:1-3:63\"\u003e僕は北欧の国が好きなので記事にしました。笑\u003c/p\u003e\n\u003cp data-sourcepos=\"5:1-6:137\"\u003e↓Source:\u003cbr\u003e\n\u003ca href=\"https://qiita.com/shizuma/items/8616bbe3ebe8ab0b6ca1\" id=\"reference-71c912d92cf51d121191\"\u003eAWSニュースブログ　新しいAWSリージョンがスイスにオープン\u003c/a\u003e\u003c/p\u003e\n\u003ch1 data-sourcepos=\"8:1-8:8\"\u003e\n\u003cspan id=\"概要\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A6%82%E8%A6%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e概要\u003c/h1\u003e\n\u003ctable data-sourcepos=\"9:1-11:58\"\u003e\n\u003cthead\u003e\n\u003ctr data-sourcepos=\"9:1-9:28\"\u003e\n\u003cth style=\"text-align: center\" data-sourcepos=\"9:2-9:4\"\u003eNO.\u003c/th\u003e\n\u003cth style=\"text-align: center\" data-sourcepos=\"9:6-9:14\"\u003eコード\u003c/th\u003e\n\u003cth style=\"text-align: center\" data-sourcepos=\"9:16-9:21\"\u003e場所\u003c/th\u003e\n\u003cth style=\"text-align: center\" data-sourcepos=\"9:23-9:27\"\u003eAZ数\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr data-sourcepos=\"11:1-11:58\"\u003e\n\u003ctd style=\"text-align: center\" data-sourcepos=\"11:2-11:9\"\u003e28個目\u003c/td\u003e\n\u003ctd style=\"text-align: center\" data-sourcepos=\"11:11-11:22\"\u003eeu-central-2\u003c/td\u003e\n\u003ctd style=\"text-align: center\" data-sourcepos=\"11:24-11:52\"\u003eスイス(チューリッヒ)\u003c/td\u003e\n\u003ctd style=\"text-align: center\" data-sourcepos=\"11:54-11:57\"\u003e3個\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote data-sourcepos=\"13:1-13:283\"\u003e\n\u003cp data-sourcepos=\"13:2-13:283\"\u003eこの新しいリージョンには、チューリッヒの近くにある 3 つの完全に冗長なアベイラビリティーゾーンがあります。データ常駐要件を満たしながら、アプリケーションへの低遅延アクセスを顧客に提供します。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp data-sourcepos=\"15:1-15:287\"\u003e今回のチューリッヒリージョンが追加されたことで、ヨーロッパでは８個のリージョンを有しています。(スイスのリージョンが開設されてから数日後にスペインリージョンが開設されました。後日記事出します。)\u003c/p\u003e\n\u003cp data-sourcepos=\"17:1-17:127\"\u003eちなみに欧州での最初のリージョンは、アイルランドリージョンで2007年に開設されています。\u003c/p\u003e\n\u003cp data-sourcepos=\"19:1-19:196\"\u003eAWSがスイスに関与したのは、AWSが立ち上げられて以来、協力関係があり、2016年にはAWSのオフィスが置かれ、現地のチームができていたようです。\u003c/p\u003e\n\u003cp data-sourcepos=\"21:1-21:204\"\u003eリージョンは今回(2022)でしたが、すでにエッジロケーションは2017年次に、CloudFrontエッジロケーションとDirect Conectロケーションが開始されていました。\u003c/p\u003e\n\u003ch1 data-sourcepos=\"23:1-23:14\"\u003e\n\u003cspan id=\"サービス\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eサービス\u003c/h1\u003e\n\u003cblockquote data-sourcepos=\"24:1-24:1676\"\u003e\n\u003cp data-sourcepos=\"24:2-24:1676\"\u003eワークロードは、 C5、 C5d、 I3、 I3en、 M5、 M5d、 M6gd、 R5、 R5d、およびT3インスタンスを使用でき、AWS サービスの長いリストを使用できます。 Amazon API Gateway、  AWS AppConfig、  AWS Application Auto Scaling、  Amazon Aurora、  Amazon EC2 Auto Scaling、  AWS Config、  AWS Certificate Manager、  AWS CloudFormationを 、  AWS CloudTrail、  Amazon CloudWatch、Amazon CloudWatch Events、Amazon CloudWatch Logs、  AWS CodeDeploy、  AWS Database Migration Service (AWS DMS)、AWS Direct Connect、  Amazon DynamoDB、  Amazon Elastic Block Store (Amazon EBS)、Amazon Elastic Compute Cloud (Amazon EC2 )、  Amazon Elastic Container Registry (Amazon ECR)、  Amazon Elastic Container Service (Amazon ECS)、AWS Fargate、  Amazon ElastiCache、  Amazon EMR、  Amazon OpenSearch Service、 Elastic Load Balancing、Elastic Load Balancing – Network (NLB)、Amazon EventBridge、Amazon Simple Storage Service Glacier、  AWS Identity and Access Management (IAM)、  Amazon Kinesis Data Streams、  AWS Key Management Service (AWS KMS)、  AWS Lambda、AWS Marketplace、  AWS Health Dashboard、  Amazon Relational Database Service (Amazon RDS)、  Aurora PostgreSQL、Amazon Redshift、  Amazon Route 53、  Amazon Virtual Private Cloud (Amazon VPC)、  AWS Secrets Manager、  Amazon Simple Storage Service (Amazon S3)、  Amazon Simple Notification Service (Amazon SNS)、  Amazon Simple Queue Service (Amazon SQS)、  AWS Step Functions、  AWS サポート API、  Amazon Simple Workflow Service (Amazon SWF)、AWS Systems Manager、AWS Trusted Advisor、  VM Import/Export、  AWS VPN、および AWS X-Ray。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp data-sourcepos=\"28:1-28:48\"\u003eこれからもAWSの進展が楽しみです！\u003c/p\u003e\n",
    "body": "2022年11月8日(投稿ちょっと遅れた)に、スイスの都市(チューリッヒ)にAWSリージョンが開設されたらしいです！\n\n僕は北欧の国が好きなので記事にしました。笑\n\n↓Source:\n[AWSニュースブログ　新しいAWSリージョンがスイスにオープン](https://qiita.com/shizuma/items/8616bbe3ebe8ab0b6ca1)\n\n# 概要\n|NO.|コード|場所|AZ数|\n|:---:|:---:|:---:|:---:|\n|28個目|eu-central-2|スイス(チューリッヒ)|3個|\n\n\u003eこの新しいリージョンには、チューリッヒの近くにある 3 つの完全に冗長なアベイラビリティーゾーンがあります。データ常駐要件を満たしながら、アプリケーションへの低遅延アクセスを顧客に提供します。\n\n今回のチューリッヒリージョンが追加されたことで、ヨーロッパでは８個のリージョンを有しています。(スイスのリージョンが開設されてから数日後にスペインリージョンが開設されました。後日記事出します。)\n\nちなみに欧州での最初のリージョンは、アイルランドリージョンで2007年に開設されています。\n\nAWSがスイスに関与したのは、AWSが立ち上げられて以来、協力関係があり、2016年にはAWSのオフィスが置かれ、現地のチームができていたようです。\n\nリージョンは今回(2022)でしたが、すでにエッジロケーションは2017年次に、CloudFrontエッジロケーションとDirect Conectロケーションが開始されていました。\n\n# サービス\n\u003eワークロードは、 C5、 C5d、 I3、 I3en、 M5、 M5d、 M6gd、 R5、 R5d、およびT3インスタンスを使用でき、AWS サービスの長いリストを使用できます。 Amazon API Gateway、  AWS AppConfig、  AWS Application Auto Scaling、  Amazon Aurora、  Amazon EC2 Auto Scaling、  AWS Config、  AWS Certificate Manager、  AWS CloudFormationを 、  AWS CloudTrail、  Amazon CloudWatch、Amazon CloudWatch Events、Amazon CloudWatch Logs、  AWS CodeDeploy、  AWS Database Migration Service (AWS DMS)、AWS Direct Connect、  Amazon DynamoDB、  Amazon Elastic Block Store (Amazon EBS)、Amazon Elastic Compute Cloud (Amazon EC2 )、  Amazon Elastic Container Registry (Amazon ECR)、  Amazon Elastic Container Service (Amazon ECS)、AWS Fargate、  Amazon ElastiCache、  Amazon EMR、  Amazon OpenSearch Service、 Elastic Load Balancing、Elastic Load Balancing – Network (NLB)、Amazon EventBridge、Amazon Simple Storage Service Glacier、  AWS Identity and Access Management (IAM)、  Amazon Kinesis Data Streams、  AWS Key Management Service (AWS KMS)、  AWS Lambda、AWS Marketplace、  AWS Health Dashboard、  Amazon Relational Database Service (Amazon RDS)、  Aurora PostgreSQL、Amazon Redshift、  Amazon Route 53、  Amazon Virtual Private Cloud (Amazon VPC)、  AWS Secrets Manager、  Amazon Simple Storage Service (Amazon S3)、  Amazon Simple Notification Service (Amazon SNS)、  Amazon Simple Queue Service (Amazon SQS)、  AWS Step Functions、  AWS サポート API、  Amazon Simple Workflow Service (Amazon SWF)、AWS Systems Manager、AWS Trusted Advisor、  VM Import/Export、  AWS VPN、および AWS X-Ray。\n\n\n\nこれからもAWSの進展が楽しみです！\n\n\n\n\n\n\n\n\n\n\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:05:57+09:00",
    "group": null,
    "id": "774b807acb30829bcbc8",
    "likes_count": 1,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [{ "name": "スイス", "versions": [] }],
    "title": "スイスに新しいAWSリージョンがオープンしたらしい。",
    "updated_at": "2022-11-26T21:05:57+09:00",
    "url": "https://qiita.com/Da_0801/items/774b807acb30829bcbc8",
    "user": {
      "description": "AWSの最新情報を発信中。大学3年生。IP、CCNA、AWS(CLF)保持。",
      "facebook_id": "",
      "followees_count": 1,
      "followers_count": 0,
      "github_login_name": null,
      "id": "Da_0801",
      "items_count": 18,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 2599465,
      "profile_image_url": "https://secure.gravatar.com/avatar/fc900787f6db8d13ac3030396881ed07",
      "team_only": false,
      "twitter_screen_name": null,
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  },
  {
    "rendered_body": "\u003cp data-sourcepos=\"1:1-1:43\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=HeLnMQ-R86M\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"4:1-4:51\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=ig3GosWuKF0\u0026amp;t=6214s\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"8:1-8:51\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=gs0l4rsQCGM\u0026amp;t=2904s\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"12:1-12:43\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=E08jeQBa1D0\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"15:1-15:83\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=pnsieVYy72M\u0026amp;list=PLwM1-TnN_NN7-zdRV8YsGUB82VVhfYiWW\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"18:1-18:59\"\u003e\u003cqiita-embed-ogp src=\"https://ja.savefrom.net/1-youtube-video-downloader-144.html\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"20:1-20:43\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=IlOhmnCrMog\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"22:1-22:43\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=f38nYM_Z-Eo\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"24:1-24:85\"\u003e\u003cqiita-embed-ogp src=\"https://www.youtube.com/watch?v=ZCt06tXxtFg\u0026amp;list=RDCMUCHxqQ8bUg5F2GW79D_DvSjQ\u0026amp;index=2\"\u003e\u003c/qiita-embed-ogp\u003e\u003c/p\u003e\n",
    "body": "https://www.youtube.com/watch?v=HeLnMQ-R86M\n\n\nhttps://www.youtube.com/watch?v=ig3GosWuKF0\u0026t=6214s\n\n\n\nhttps://www.youtube.com/watch?v=gs0l4rsQCGM\u0026t=2904s\n\n\n\nhttps://www.youtube.com/watch?v=E08jeQBa1D0\n\n\nhttps://www.youtube.com/watch?v=pnsieVYy72M\u0026list=PLwM1-TnN_NN7-zdRV8YsGUB82VVhfYiWW\n\n\nhttps://ja.savefrom.net/1-youtube-video-downloader-144.html\n\nhttps://www.youtube.com/watch?v=IlOhmnCrMog\n\nhttps://www.youtube.com/watch?v=f38nYM_Z-Eo\n\nhttps://www.youtube.com/watch?v=ZCt06tXxtFg\u0026list=RDCMUCHxqQ8bUg5F2GW79D_DvSjQ\u0026index=2\n",
    "coediting": false,
    "comments_count": 0,
    "created_at": "2022-11-26T21:02:56+09:00",
    "group": null,
    "id": "b2f864f59b91902d7e2f",
    "likes_count": 0,
    "private": false,
    "reactions_count": 0,
    "stocks_count": 0,
    "tags": [
      { "name": "JavaScript", "versions": [] },
      { "name": "初心者", "versions": [] }
    ],
    "title": "JavaScript参考サイト",
    "updated_at": "2022-11-26T22:44:47+09:00",
    "url": "https://qiita.com/hiro_hiro_0425/items/b2f864f59b91902d7e2f",
    "user": {
      "description": "30代ITエンジニア、現在東京通信大学3年生。\r\n\r\n",
      "facebook_id": "",
      "followees_count": 161,
      "followers_count": 7,
      "github_login_name": null,
      "id": "hiro_hiro_0425",
      "items_count": 32,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 200760,
      "profile_image_url": "https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/200760/50f7ec1888ca92be591e96e27d1e896f62a1c994/x_large.png?1655384815",
      "team_only": false,
      "twitter_screen_name": "LsnhWkrOYUmppYe",
      "website_url": ""
    },
    "page_views_count": null,
    "team_membership": null
  }
]
